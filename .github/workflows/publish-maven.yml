name: Publish Maven

on:
  release:
    types: [published]

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          pip install bump-my-version
      - name: Bump version
        run: |
          initialTag=${{ github.event.release.tag_name }}
          tag="${initialTag//[v]/}"
          echo $tag
          git remote update
          git fetch
          echo "finished fetching"
          git checkout --track origin/master
          echo "finished checkout"
          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions"
          echo "finished configuration"
          bump-my-version bump --config-file .bump_version.toml --current-version 0.0.0 --new-version $tag
          echo "bumpversion finished"
          git add .
          git commit -m "release $tag"
          git push
      - name: Move tag
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          echo $tag
          git tag -d $TAG_NAME
          git push origin :refs/tags/$TAG_NAME
          git tag $TAG_NAME
          git push origin $TAG_NAME
  publish:
    needs: bump-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Configure GPG Key
        run: |
          echo -n "${{ secrets.GPG_SIGNING_KEY }}" | base64 --decode | gpg --import --batch
      - name: Publish package
        run: mvn --batch-mode deploy -Dgpg.passphrase='${{ secrets.GPG_PASSWORD }}'
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_OSSRH_TOKEN }}
