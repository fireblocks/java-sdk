openapi: 3.0.0
info:
  contact:
    email: support@fireblocks.com
  title: Fireblocks API
  version: 1.6.2
servers:
- url: https://api.fireblocks.io/v1
paths:
  /vault/accounts:
    get:
      description: Gets all vault accounts in your workspace.
      operationId: getVaultAccounts
      parameters:
      - explode: true
        in: query
        name: namePrefix
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nameSuffix
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: minAmountThreshold
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: string
          x-fb-entity: asset
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultAccountsResponse'
          description: A list of vault accounts
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List vault accounts
      tags:
      - Vaults
      x-internal: true
      x-readme:
        code-samples:
        - language: python
          code: vault_accounts = fireblocks.get_vault_accounts()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccounts = await fireblocks.getVaultAccounts();
          name: Fireblocks SDK Javascript example
      x-accepts: application/json
    post:
      description: Creates a new vault account with the requested name.
      operationId: createVaultAccount
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVaultAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAccount'
          description: A Vault Account object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create a new vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAccount = fireblocks.create_vault_account(name, hiddenOnUI,\
            \ customer_ref_id, auto_fueling)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAccount = await fireblocks.createVaultAccount(name, hiddenOnUI,\
            \ customerRefId, autoFueling);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAccount>> = fireblocks.vaults.createVaultAccount(vaultsApiCreateVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultAccount>> response = fireblocks.vaults().createVaultAccount(createVaultAccountRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/bulk:
    post:
      description: |
        Create multiple vault accounts by running an async job. </br>
        **Note**:
        - These endpoints are currently in beta and might be subject to changes.
        - We limit accounts to 10k per operation and 200k per customer during beta testing.
      operationId: createMultipleAccounts
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMultipleAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
          description: A JobCreated object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Bulk creation of new vault accounts
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<JobCreated>> = fireblocks.vaults.createMultipleAccounts(vaultsApiCreateMultipleAccountsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<JobCreated>> response = fireblocks.vaults().createMultipleAccounts(createMultipleAccountsRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts_paged:
    get:
      description: Gets all vault accounts in your workspace. This endpoint returns
        a limited amount of results with a quick response time.
      operationId: getPagedVaultAccounts
      parameters:
      - explode: true
        in: query
        name: namePrefix
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nameSuffix
        required: false
        schema:
          type: string
        style: form
      - description: "Specifying minAmountThreshold will filter accounts with balances\
          \ greater than this value, otherwise, it will return all accounts."
        explode: true
        in: query
        name: minAmountThreshold
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: string
          x-fb-entity: asset
        style: form
      - explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          maximum: 500
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAccountsPagedResponse'
          description: A VaultAccountsPagedResponse object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List vault accounts (Paginated)
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_accounts = fireblocks.get_vault_accounts_with_page_info(filters)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccounts = await fireblocks.getVaultAccountsWithPageInfo(filters);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAccountsPagedResponse>>\
            \ = fireblocks.vaults.getPagedVaultAccounts(vaultsApiGetPagedVaultAccountsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultAccountsPagedResponse>> response\
            \ = fireblocks.vaults().getPagedVaultAccounts(namePrefix, nameSuffix,\
            \ minAmountThreshold, assetId, orderBy, before, after, limit);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}:
    get:
      description: Returns the requested vault account.
      operationId: getVaultAccount
      parameters:
      - description: "The ID of the vault account to return type: string"
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAccount'
          description: A Vault Account object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a vault account by ID
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_account = fireblocks.get_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccount = await fireblocks.getVaultAccount(vault_account_id);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAccount>> = fireblocks.vaults.getVaultAccount(vaultsApiGetVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<VaultAccount>> response = fireblocks.vaults().getVaultAccount(vaultAccountId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: Renames the requested vault account.
      operationId: updateVaultAccount
      parameters:
      - description: The ID of the vault account to edit
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVaultAccountRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenameVaultAccountResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Rename a vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAccount = fireblocks.update_vault_account(vault_account_id,\
            \ name)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAccount = await fireblocks.updateVaultAccount(vautlAccountId,\
            \ name);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<RenameVaultAccountResponse>>\
            \ = fireblocks.vaults.updateVaultAccount(vaultsApiUpdateVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<RenameVaultAccountResponse>> response\
            \ = fireblocks.vaults().updateVaultAccount(updateVaultAccountRequest,\
            \ vaultAccountId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/asset_wallets:
    get:
      description: |
        Gets all asset wallets at all of the vault accounts in your workspace. An asset wallet is an asset at a vault account. This method allows fast traversal of all account balances.
      operationId: getAssetWallets
      parameters:
      - description: "When specified, only asset wallets with total balance larger\
          \ than this amount are returned."
        explode: true
        in: query
        name: totalAmountLargerThan
        required: false
        schema:
          type: number
        style: form
      - description: "When specified, only asset wallets cross vault accounts that\
          \ have this asset ID are returned."
        explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: string
          x-fb-entity: asset
        style: form
      - explode: true
        in: query
        name: orderBy
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Fetches the next paginated response before this element. This
          element is a cursor and is returned at the response of the previous page.
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Fetches the next paginated response after this element. This
          element is a cursor and is returned at the response of the previous page.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of asset wallets in a single response. The
          default is 200 and the maximum is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          maximum: 1000
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetWalletResponse'
          description: A PaginatedAssetWalletResponse object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List asset wallets (Paginated)
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vault_accounts = fireblocks.get_asset_wallets(filters)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAccounts = await fireblocks.getAssetWallets(filters);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PaginatedAssetWalletResponse>>\
            \ = fireblocks.vaults.getAssetWallets(vaultsApiGetAssetWalletsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PaginatedAssetWalletResponse>> response\
            \ = fireblocks.vaults().getAssetWallets(totalAmountLargerThan, assetId,\
            \ orderBy, before, after, limit);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/hide:
    post:
      description: Hides the requested vault account from the web console view.
      operationId: hideVaultAccount
      parameters:
      - description: The vault account to hide
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Hide a vault account in the console
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.hide_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.hideVaultAccount(vaultAccountId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.hideVaultAccount(vaultsApiHideVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().hideVaultAccount(vaultAccountId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/unhide:
    post:
      description: Makes a hidden vault account visible in web console view.
      operationId: unhideVaultAccount
      parameters:
      - description: The vault account to unhide
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Unhide a vault account in the console
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: vaultAsset = fireblocks.unhide_vault_account(vault_account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const vaultAsset = await fireblocks.unhideVaultAccount(vaultAccountId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.unhideVaultAccount(vaultsApiUnhideVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().unhideVaultAccount(vaultAccountId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/activate:
    post:
      description: Initiates activation for a wallet in a vault account.
      operationId: activateAssetForVaultAccount
      parameters:
      - description: "The ID of the vault account to return, or 'default' for the\
          \ default vault account"
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Activate a wallet in a vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateVaultAssetResponse>>\
            \ = fireblocks.vaults.activateAssetForVaultAccount(vaultsApiActivateAssetForVaultAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateVaultAssetResponse>> response\
            \ = fireblocks.vaults().activateAssetForVaultAccount(vaultAccountId, assetId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/set_customer_ref_id:
    post:
      description: Assigns an AML/KYT customer reference ID for the vault account.
      operationId: setVaultAccountCustomerRefId
      parameters:
      - description: The vault account ID
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomerRefIdRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set an AML/KYT customer reference ID for a vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.set_vault_account_customer_ref_id(vault_account_id,\
            \ customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.setCustomerRefIdForVaultAccount(vaultAccountId,\
            \ customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.setVaultAccountCustomerRefId(vaultsApiSetVaultAccountCustomerRefIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().setVaultAccountCustomerRefId(setCustomerRefIdRequest,\
            \ vaultAccountId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/set_auto_fuel:
    post:
      description: Sets the autofueling property of the vault account to enabled or
        disabled.
      operationId: setVaultAccountAutoFuel
      parameters:
      - description: The vault account ID
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAutoFuelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Turn autofueling on or off
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.setVaultAccountAutoFuel(vaultsApiSetVaultAccountAutoFuelRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().setVaultAccountAutoFuel(setAutoFuelRequest,\
            \ vaultAccountId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}:
    get:
      description: Returns a wallet for a specific asset of a vault account.
      operationId: getVaultAccountAsset
      parameters:
      - description: The ID of the vault account to return
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAsset'
          description: A VaultAsset object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the asset balance for a vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.get_vault_account_asset(vault_account_id,\
            \ asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.getVaultAccountAsset(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAsset>> = fireblocks.vaults.getVaultAccountAsset(vaultsApiGetVaultAccountAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultAsset>> response = fireblocks.vaults().getVaultAccountAsset(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates a wallet for a specific asset in a vault account.
      operationId: createVaultAccountAsset
      parameters:
      - description: "The ID of the vault account to return, or 'default' for the\
          \ default vault account"
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVaultAssetResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create a new wallet
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.create_vault_asset(vault_account_id, asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.createVaultAsset(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateVaultAssetResponse>>\
            \ = fireblocks.vaults.createVaultAccountAsset(vaultsApiCreateVaultAccountAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateVaultAssetResponse>> response\
            \ = fireblocks.vaults().createVaultAccountAsset(vaultAccountId, assetId,\
            \ createAssetsRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/balance:
    post:
      description: Updates the balance of a specific asset in a vault account.
      operationId: updateVaultAccountAssetBalance
      parameters:
      - description: The ID of the vault account to return
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAsset'
          description: A VaultAsset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Refresh asset balance data
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.refresh_vault_asset_balance(vault_account_id,\
            \ asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.refreshVaultAssetBalance(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAsset>> = fireblocks.vaults.updateVaultAccountAssetBalance(vaultsApiUpdateVaultAccountAssetBalanceRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultAsset>> response = fireblocks.vaults().updateVaultAccountAssetBalance(vaultAccountId,\
            \ assetId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/addresses:
    get:
      description: |-
        Lists all addresses for specific asset of vault account.
        - This endpoint will be deprecated on Mar 31,2024.
        - If your application logic or scripts rely on the deprecated endpoint, you should update to account for GET/V1/vault/accounts/{vaultAccountId}/{assetId}/addresses_paginated before Mar 31,2024.
        - All workspaces created after Mar 31,2024. will have it disabled. If it is disabled for your workspace and you attempt to use it, you will receive the following error message: "This endpoint is unavailable.
        - Please use the GET/V1/vault/accounts/{vaultAccountId}/{assetId}/addresses_paginated endpoint to return all the wallet addresses associated with the specified vault account and asset in a paginated list.
        - This API call is subject to rate limits.
      operationId: getVaultAccountAssetAddresses
      parameters:
      - description: The ID of the vault account to return
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultAccountAssetAddressesResponse'
          description: A list of deposit addresses
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get asset addresses
      tags:
      - Vaults
      x-internal: true
      x-readme:
        code-samples:
        - language: python
          code: "depositAddresses = fireblocks.get_deposit_addresses(vault_account_id,\
            \ asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const depositAddresses = await fireblocks.getDepositAddresses(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
      x-accepts: application/json
    post:
      description: Creates a new deposit address for an asset of a vault account.
      operationId: createVaultAccountAssetAddress
      parameters:
      - description: The ID of the vault account to return
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressResponse'
          description: The created address
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create new asset deposit address
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "address = fireblocks.generate_new_address(vault_account_id, asset_id,\
            \ description, customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const address = await fireblocks.generateNewAddress(vaultAccountId,\
            \ assetId, description, customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateAddressResponse>>\
            \ = fireblocks.vaults.createVaultAccountAssetAddress(vaultsApiCreateVaultAccountAssetAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateAddressResponse>> response =\
            \ fireblocks.vaults().createVaultAccountAssetAddress(vaultAccountId, assetId,\
            \ createAddressRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/addresses_paginated:
    get:
      description: Returns a paginated response of the addresses for a given vault
        account and asset.
      operationId: getVaultAccountAssetAddressesPaginated
      parameters:
      - description: The ID of the vault account to return
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressResponse'
          description: "A paginated list of addresses, and pagination info."
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List addresses (Paginated)
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "addresses = vault_accounts = fireblocks.get_paginated_addresses(\"\
            0\",\"ETH_TEST3\")"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const addresses = await fireblocks.getPaginatedAddresses(\"0\",\"\
            ETH_TEST3\");"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PaginatedAddressResponse>>\
            \ = fireblocks.vaults.getVaultAccountAssetAddressesPaginated(vaultsApiGetVaultAccountAssetAddressesPaginatedRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PaginatedAddressResponse>> response\
            \ = fireblocks.vaults().getVaultAccountAssetAddressesPaginated(vaultAccountId,\
            \ assetId, limit, before, after);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/max_spendable_amount:
    get:
      description: "Get the maximum amount of a particular asset that can be spent\
        \ in a single transaction from a specified vault account (UTXO assets only,\
        \ with a limitation on number of inputs embedded). Send several transactions\
        \ if you want to spend more than the maximum spendable amount."
      operationId: getMaxSpendableAmount
      parameters:
      - description: "The ID of the vault account, or 'default' for the default vault\
          \ account"
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: False by default. The maximum number of inputs depends if the
          transaction will be signed by an automated co-signer server or on a mobile
          device.
        explode: true
        in: query
        name: manualSignging
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMaxSpendableAmountResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the maximum spendable amount in a single transaction.
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "address = fireblocks.set_address_description(vault_account_id, asset_id,\
            \ address, tag, description)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const address = await fireblocks.setAddressDescription(vaultAccountId,\
            \ assetId, address, tag, description);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetMaxSpendableAmountResponse>>\
            \ = fireblocks.vaults.getMaxSpendableAmount(vaultsApiGetMaxSpendableAmountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetMaxSpendableAmountResponse>> response\
            \ = fireblocks.vaults().getMaxSpendableAmount(vaultAccountId, assetId,\
            \ manualSignging);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}:
    put:
      description: Updates the description of an existing address of an asset in a
        vault account.
      operationId: updateVaultAccountAssetAddress
      parameters:
      - description: The ID of the vault account
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "The address for which to add a description. For XRP, use <address>:<tag>,\
          \ for all other assets, use only the address"
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVaultAccountAssetAddressRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update address description
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "address = fireblocks.set_address_description(vault_account_id, asset_id,\
            \ address, tag, description)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const address = await fireblocks.setAddressDescription(vaultAccountId,\
            \ assetId, address, tag, description);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.updateVaultAccountAssetAddress(vaultsApiUpdateVaultAccountAssetAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().updateVaultAccountAssetAddress(vaultAccountId,\
            \ assetId, addressId, updateVaultAccountAssetAddressRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/set_customer_ref_id:
    post:
      description: Sets an AML/KYT customer reference ID for a specific address.
      operationId: setCustomerRefIdForAddress
      parameters:
      - description: The ID of the vault account
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "The address for which to add a description. For XRP, use <address>:<tag>,\
          \ for all other assets, use only the address"
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomerRefIdForAddressRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultActionStatus'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Assign AML customer reference ID
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.set_customer_ref_id_for_address(vault_account_id,\
            \ asset_id, address_id, customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.setCustomerRefIdForAddress(vaultAccountId,\
            \ assetId, addressId, customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultActionStatus>> =\
            \ fireblocks.vaults.setCustomerRefIdForAddress(vaultsApiSetCustomerRefIdForAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<VaultActionStatus>> response = fireblocks.vaults().setCustomerRefIdForAddress(setCustomerRefIdForAddressRequest,\
            \ vaultAccountId, assetId, addressId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/addresses/{addressId}/create_legacy:
    post:
      description: Converts an existing segwit address to the legacy format.
      operationId: createLegacyAddress
      parameters:
      - description: The ID of the vault account
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: The segwit address to translate
        explode: false
        in: path
        name: addressId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAddressResponse'
          description: The created address
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Convert a segwit address to legacy format
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateAddressResponse>>\
            \ = fireblocks.vaults.createLegacyAddress(vaultsApiCreateLegacyAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateAddressResponse>> response =\
            \ fireblocks.vaults().createLegacyAddress(vaultAccountId, assetId, addressId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/unspent_inputs:
    get:
      description: Returns unspent inputs information of an asset in a vault account.
      operationId: getUnspentInputs
      parameters:
      - description: The ID of the vault account
        explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUnspentInputsResponse'
          description: List of Unspent information per input
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get UTXO unspent inputs information
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "vaultAsset = fireblocks.get_unspent_inputs(vault_account_id, asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const vaultAsset = await fireblocks.getUnspentInputs(vaultAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetUnspentInputsResponse>>\
            \ = fireblocks.vaults.getUnspentInputs(vaultsApiGetUnspentInputsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<UnspentInputsResponse>>> response\
            \ = fireblocks.vaults().getUnspentInputs(vaultAccountId, assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/public_key_info:
    get:
      description: Gets the public key information based on derivation path and signing
        algorithm.
      operationId: getPublicKeyInfo
      parameters:
      - explode: true
        in: query
        name: derivationPath
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: algorithm
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: compressed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeyInformation'
          description: Public key information
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the public key information
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "pubKey = fireblocks.get_public_key_info(algorithm, derivation_path,\
            \ compressed)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: |
            const PublicKeyInfoArgs = { algorithm: 'MPC_ECDSA_SECP256K1', derivationPath: '[44,0,0,0,0]' } const pubKey = await fireblocks.getPublicKeyInfo(PublicKeyInfoArgs);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PublicKeyInformation>>\
            \ = fireblocks.vaults.getPublicKeyInfo(vaultsApiGetPublicKeyInfoRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PublicKeyInformation>> response = fireblocks.vaults().getPublicKeyInfo(derivationPath,\
            \ algorithm, compressed);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/accounts/{vaultAccountId}/{assetId}/{change}/{addressIndex}/public_key_info:
    get:
      description: Gets the public key information for the vault account.
      operationId: getPublicKeyInfoForAddress
      parameters:
      - explode: false
        in: path
        name: vaultAccountId
        required: true
        schema:
          format: numeric
          type: string
          x-fb-entity: vault_account
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - explode: false
        in: path
        name: change
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: addressIndex
        required: true
        schema:
          type: number
        style: simple
      - explode: true
        in: query
        name: compressed
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeyInformation'
          description: Public Key Information
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the public key for a vault account
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "pubKey = fireblocks.get_public_key_info_for_vault_account(asset_id,\
            \ vault_account_id, change, address_index, compressed)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: |
            const PublicKeyInfoArgs = { assetId: 'ETH', vaultAccountId: 0, change: 0, addressIndex: 0, compressed: true } const pubKey = await fireblocks.getPublicKeyInfoForVaultAccount(PublicKeyInfoArgs);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PublicKeyInformation>>\
            \ = fireblocks.vaults.getPublicKeyInfoForAddress(vaultsApiGetPublicKeyInfoForAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PublicKeyInformation>> response = fireblocks.vaults().getPublicKeyInfoForAddress(vaultAccountId,\
            \ assetId, change, addressIndex, compressed);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/assets:
    get:
      description: Gets the assets amount summary for all accounts or filtered accounts.
      operationId: getVaultAssets
      parameters:
      - explode: true
        in: query
        name: accountNamePrefix
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: accountNameSuffix
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVaultAssetsResponse'
          description: Amount by asset
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get asset balance for chosen assets
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: "assets_balance = fireblocks.get_vault_assets_balance(accout_name_prefix,\
            \ account_name_suffix)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const assetsBalance = await fireblocks.getVaultAssetsBalance(accountNamePrefix,\
            \ accountNameSuffix);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetVaultAssetsResponse>>\
            \ = fireblocks.vaults.getVaultAssets(vaultsApiGetVaultAssetsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<VaultAsset>>> response = fireblocks.vaults().getVaultAssets(accountNamePrefix,\
            \ accountNameSuffix);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /vault/assets/bulk:
    post:
      description: |
        Create multiple wallets for a given vault account by running an async job. </br>
        **Note**:
        - These endpoints are currently in beta and might be subject to changes.
        - We limit accounts to 10k per operation and 200k per customer during beta testing.
        - Currently, we are only supporting EVM wallets.
      operationId: createAssetsBulk
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAssetsBulkRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreated'
          description: A JobCreated object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Bulk creation of wallets
      tags:
      - Assets
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<JobCreated>> = fireblocks.assets.createAssetsBulk(assetsApiCreateAssetsBulkRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<JobCreated>> response = fireblocks.assets().createAssetsBulk(createAssetsBulkRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /vault/assets/{assetId}:
    get:
      description: Gets the vault balance summary for an asset.
      operationId: getVaultBalanceByAsset
      parameters:
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAsset'
          description: Vault amount by asset
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get vault balance by asset
      tags:
      - Vaults
      x-readme:
        code-samples:
        - language: python
          code: assets_balance = fireblocks.get_vault_balance_by_asset(asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const assetsBalance = await fireblocks.getVaultBalanceByAsset(assetId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<VaultAsset>> = fireblocks.vaults.getVaultBalanceByAsset(vaultsApiGetVaultBalanceByAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<VaultAsset>> response = fireblocks.vaults().getVaultBalanceByAsset(assetId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /workspace/freeze:
    post:
      description: "Freezes a Workspace so that ALL operations by ANY user are blocked.\n\
        \nYou should only perform this action when the workspace faces imminent risk,\
        \ such as when you have a security breach.\n\nTo unfreeze a workspace, the\
        \ workspace Owner must submit a request to Fireblocks Support.\n\n**NOTE:**\
        \ \n- This operation can only be performed by the workspace Owner\n- Your\
        \ workspace continues to receive incoming transfers during this time.\n"
      operationId: freezeWorkspace
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: indicates that the workspace is now frozen
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Freeze Workspace
      tags:
      - Workspace
      x-internal: true
      x-accepts: application/json
  /exchange_accounts:
    get:
      deprecated: true
      description: Deprecated (use new 'paged' endpoint) - Returns all exchange accounts.
      operationId: getExchangeAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExchangeAccountsResponse'
          description: An ExchangeAccount object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List exchange accounts
      tags:
      - Exchange accounts
      x-internal: true
      x-readme:
        code-samples:
        - language: python
          code: exchangeAccounts = fireblocks.get_exchange_accounts()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const exchangeAccounts = await fireblocks.getExchangeAccounts();
          name: Fireblocks SDK Javascript example
      x-accepts: application/json
  /exchange_accounts/paged:
    get:
      description: Returns a page include exchange accounts.
      operationId: getPagedExchangeAccounts
      parameters:
      - explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: number of exchanges per page
        explode: true
        in: query
        name: limit
        required: true
        schema:
          default: 3
          maximum: 5
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPagedExchangeAccountsResponse'
          description: An ExchangeAccount object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Pagination list exchange accounts
      tags:
      - Exchange accounts
      x-readme:
        code-samples:
        - language: javascript
          code: const exchangeAccounts = await fireblocks.getExchangeAccountsPaged();
          name: Fireblocks SDK Javascript example
        - language: python
          code: exchangeAccounts = fireblocks.get_exchange_accounts_paged()
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetPagedExchangeAccountsResponse>>\
            \ = fireblocks.exchangeAccounts.getPagedExchangeAccounts(exchangeAccountsApiGetPagedExchangeAccountsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<ExchangeAccountsPaged>>> response\
            \ = fireblocks.exchangeAccounts().getPagedExchangeAccounts(limit, before,\
            \ after);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /exchange_accounts/{exchangeAccountId}:
    get:
      description: Returns an exchange account by ID.
      operationId: getExchangeAccount
      parameters:
      - description: The ID of the exchange account to return
        explode: false
        in: path
        name: exchangeAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccount'
          description: An ExchangeAccount object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific exchange account
      tags:
      - Exchange accounts
      x-readme:
        code-samples:
        - language: python
          code: exchangeAccount = fireblocks.get_exchange_account(exchangeAccountId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const exchnageAccount = await fireblocks.get_exchange_account(exchangeAccountId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExchangeAccount>> = fireblocks.exchangeAccounts.getExchangeAccount(exchangeAccountsApiGetExchangeAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ExchangeAccount>> response = fireblocks.exchangeAccounts().getExchangeAccount(exchangeAccountId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /exchange_accounts/{exchangeAccountId}/internal_transfer:
    post:
      description: Transfers funds between trading accounts under the same exchange
        account.
      operationId: internalTransfer
      parameters:
      - description: The ID of the exchange account to return
        explode: false
        in: path
        name: exchangeAccountId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternalTransferRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalTransferResponse'
          description: Transfer succeeded
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Internal transfer for exchange accounts
      tags:
      - Exchange accounts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<InternalTransferResponse>>\
            \ = fireblocks.exchangeAccounts.internalTransfer(exchangeAccountsApiInternalTransferRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<InternalTransferResponse>> response\
            \ = fireblocks.exchangeAccounts().internalTransfer(exchangeAccountId,\
            \ createInternalTransferRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /exchange_accounts/{exchangeAccountId}/convert:
    post:
      description: "Convert exchange account funds from the source asset to the destination\
        \ asset. Coinbase (USD to USDC, USDC to USD) and Bitso (MXN to USD) are supported\
        \ conversions."
      operationId: convertAssets
      parameters:
      - description: "The ID of the exchange account. Please make sure the exchange\
          \ supports conversions. To find the ID of your exchange account, use GET/exchange_accounts."
        explode: false
        in: path
        name: exchangeAccountId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertAssetsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertAssetsResponse'
          description: Conversion successful
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Convert exchange account funds from the source asset to the destination
        asset.
      tags:
      - Exchange accounts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ConvertAssetsResponse>>\
            \ = fireblocks.exchangeAccounts.convertAssets(exchangeAccountsApiConvertAssetsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ConvertAssetsResponse>> response =\
            \ fireblocks.exchangeAccounts().convertAssets(exchangeAccountId, convertAssetsRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /exchange_accounts/{exchangeAccountId}/{assetId}:
    get:
      description: Returns an asset for an exchange account.
      operationId: getExchangeAccountAsset
      parameters:
      - description: The ID of the exchange account to return
        explode: false
        in: path
        name: exchangeAccountId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to return
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAsset'
          description: An ExchangeAccountAsset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find an asset for an exchange account
      tags:
      - Exchange accounts
      x-readme:
        code-samples:
        - language: python
          code: "exchangeAsset = fireblocks.get_exchange_account_asset(exchangeAccountId,\
            \ assetId)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const exchangeAsset = await fireblocks.getExchangeAsset(exchangeAccountId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExchangeAsset>> = fireblocks.exchangeAccounts.getExchangeAccountAsset(exchangeAccountsApiGetExchangeAccountAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExchangeAsset>> response = fireblocks.exchangeAccounts().getExchangeAccountAsset(exchangeAccountId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /fiat_accounts:
    get:
      description: Returns all fiat accounts.
      operationId: getFiatAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFiatAccountsResponse'
          description: A fiat account object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List fiat accounts
      tags:
      - Fiat accounts
      x-readme:
        code-samples:
        - language: python
          code: transactions = fireblocks.get_fiat_accounts()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const transactions = await fireblocks.getFiatAccounts();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetFiatAccountsResponse>>\
            \ = fireblocks.fiatAccounts.getFiatAccounts();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<FiatAccount>>> response = fireblocks.fiatAccounts().getFiatAccounts();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /fiat_accounts/{accountId}:
    get:
      description: Returns a fiat account by ID.
      operationId: getFiatAccount
      parameters:
      - description: The ID of the fiat account to return
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiatAccount'
          description: A fiat account object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific fiat account
      tags:
      - Fiat accounts
      x-readme:
        code-samples:
        - language: python
          code: transactions = fireblocks.get_fiat_account_by_id(account_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const transactions = await fireblocks.getFiatAccountById(accountId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<FiatAccount>> = fireblocks.fiatAccounts.getFiatAccount(fiatAccountsApiGetFiatAccountRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<FiatAccount>> response = fireblocks.fiatAccounts().getFiatAccount(accountId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /fiat_accounts/{accountId}/redeem_to_linked_dda:
    post:
      description: Redeems funds to the linked DDA.
      operationId: redeemFundsToLinkedDDA
      parameters:
      - description: The ID of the fiat account to use
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funds'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedeemFundsToLinkedDDAResponse'
          description: Transfer succeeded
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Redeem funds to DDA
      tags:
      - Fiat accounts
      x-readme:
        code-samples:
        - language: python
          code: "transactions = fireblocks.redeem_to_linked_dda(account_id, amount)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const transactions = await fireblocks.redeemToLinkedDDA(accountId,\
            \ amount);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<RedeemFundsToLinkedDDAResponse>>\
            \ = fireblocks.fiatAccounts.redeemFundsToLinkedDDA(fiatAccountsApiRedeemFundsToLinkedDDARequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<RedeemFundsToLinkedDDAResponse>> response\
            \ = fireblocks.fiatAccounts().redeemFundsToLinkedDDA(accountId, funds,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /fiat_accounts/{accountId}/deposit_from_linked_dda:
    post:
      description: Deposits funds from the linked DDA.
      operationId: depositFundsFromLinkedDDA
      parameters:
      - description: The ID of the fiat account to use
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Funds'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositFundsFromLinkedDDAResponse'
          description: Transfer succeeded
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Deposit funds from DDA
      tags:
      - Fiat accounts
      x-readme:
        code-samples:
        - language: python
          code: "transactions = fireblocks.deposit_from_linked_dda(account_id, amount)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const transactions = await fireblocks.depositFromLinkedDDA(accountId,\
            \ amount);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DepositFundsFromLinkedDDAResponse>>\
            \ = fireblocks.fiatAccounts.depositFundsFromLinkedDDA(fiatAccountsApiDepositFundsFromLinkedDDARequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DepositFundsFromLinkedDDAResponse>>\
            \ response = fireblocks.fiatAccounts().depositFundsFromLinkedDDA(accountId,\
            \ funds, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_connections:
    get:
      description: |
        Returns all network connections.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: getNetworkConnections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkConnectionsResponse'
          description: A list of network connections
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List network connections
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: python
          code: network_connections = fireblocks.get_network_connections()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const networkConnections = await fireblocks.getNetworkConnections();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetNetworkConnectionsResponse>>\
            \ = fireblocks.networkConnections.getNetworkConnections();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<NetworkConnectionResponse>>> response
            = fireblocks.networkConnections().getNetworkConnections();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: |
        Initiates a new network connection.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

        Supported asset groups for routing police can be found at `/network_ids/routing_policy_asset_groups`

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: createNetworkConnection
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConnection'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionResponse'
          description: A Network Connection object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Creates a new network connection
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<NetworkConnectionResponse>>\
            \ = fireblocks.networkConnections.createNetworkConnection(networkConnectionsApiCreateNetworkConnectionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<NetworkConnectionResponse>> response\
            \ = fireblocks.networkConnections().createNetworkConnection(networkConnection,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_connections/{connectionId}/set_routing_policy:
    patch:
      description: |
        Updates an existing network connection's routing policy.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

        Supported asset groups for routing police can be found at `/network_ids/routing_policy_asset_groups`

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: setRoutingPolicy
      parameters:
      - description: The ID of the network connection
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRoutingPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetRoutingPolicyResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update network connection routing policy.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetRoutingPolicyResponse>>\
            \ = fireblocks.networkConnections.setRoutingPolicy(networkConnectionsApiSetRoutingPolicyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetRoutingPolicyResponse>> response\
            \ = fireblocks.networkConnections().setRoutingPolicy(connectionId, setRoutingPolicyRequest);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_connections/{connectionId}/is_third_party_routing/{assetType}:
    get:
      description: The Fireblocks Network allows for flexibility around incoming deposits.
        A receiver can receive network deposits to locations other than Fireblocks.
        This endpoint validates whether future transactions are routed to the displayed
        recipient or to a 3rd party.
      operationId: checkThirdPartyRouting
      parameters:
      - description: The ID of the network connection
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      - description: The destination asset type
        explode: false
        in: path
        name: assetType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdPartyRouting'
          description: result for the validation
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Retrieve third-party network routing validation by asset type.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ThirdPartyRouting>> =\
            \ fireblocks.networkConnections.checkThirdPartyRouting(networkConnectionsApiCheckThirdPartyRoutingRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ThirdPartyRouting>> response = fireblocks.networkConnections().checkThirdPartyRouting(connectionId,\
            \ assetType);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /network_connections/{connectionId}:
    delete:
      description: |
        Deletes an existing network connection specified by its connection ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: deleteNetworkConnection
      parameters:
      - description: The ID of the network connection to delete
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkConnectionResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Deletes a network connection by ID
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DeleteNetworkConnectionResponse>>\
            \ = fireblocks.networkConnections.deleteNetworkConnection(networkConnectionsApiDeleteNetworkConnectionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DeleteNetworkConnectionResponse>> response
            = fireblocks.networkConnections().deleteNetworkConnection(connectionId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: |
        Gets a network connection by ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: getNetwork
      parameters:
      - description: The ID of the connection
        explode: false
        in: path
        name: connectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConnectionResponse'
          description: A network connection
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get a network connection
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: python
          code: network_connection = fireblocks.get_network_connection_by_id(connectionId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const network_connection = await fireblocks.getNetworkConnection(connectionId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<NetworkConnectionResponse>>\
            \ = fireblocks.networkConnections.getNetwork(networkConnectionsApiGetNetworkRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<NetworkConnectionResponse>> response
            = fireblocks.networkConnections().getNetwork(connectionId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /network_ids:
    get:
      description: |
        Retrieves a list of all local and discoverable remote network IDs.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: getNetworkIds
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNetworkIdsResponse'
          description: A list of network IDs
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: "Returns all network IDs, both local IDs and discoverable remote IDs"
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetNetworkIdsResponse>>\
            \ = fireblocks.networkConnections.getNetworkIds();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<Object>>> response = fireblocks.networkConnections().getNetworkIds();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: |
        Creates a new Network ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

        Supported asset groups for routing police can be found at `/network_ids/routing_policy_asset_groups`

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: createNetworkId
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkIdRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkIdResponse'
          description: Returns the new network ID in your workspace
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Creates a new Network ID
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<NetworkIdResponse>> =\
            \ fireblocks.networkConnections.createNetworkId(networkConnectionsApiCreateNetworkIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<NetworkIdResponse>> response = fireblocks.networkConnections().createNetworkId(createNetworkIdRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_ids/routing_policy_asset_groups:
    get:
      description: |
        Retrieves a list of all enabled routing policy asset groups.
        Your routing policy defines how your transactions are routed.
        You can use one or more enabled routing policy asset groups to describe connection or network id routing policy.
      operationId: getRoutingPolicyAssetGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoutingPolicyAssetGroupsResponse'
          description: A list of enabled routing policy asset groups
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Returns all enabled routing policy asset groups
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetRoutingPolicyAssetGroupsResponse>>\
            \ = fireblocks.networkConnections.getRoutingPolicyAssetGroups();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<String>>> response = fireblocks.networkConnections().getRoutingPolicyAssetGroups();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /network_ids/{networkId}:
    delete:
      description: |
        Deletes a network by its ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: deleteNetworkId
      parameters:
      - description: The ID of the network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteNetworkIdResponse'
          description: Network ID
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Deletes specific network ID.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DeleteNetworkIdResponse>>\
            \ = fireblocks.networkConnections.deleteNetworkId(networkConnectionsApiDeleteNetworkIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DeleteNetworkIdResponse>> response =
            fireblocks.networkConnections().deleteNetworkId(networkId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: |
        Retrieves a network by its ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: getNetworkId
      parameters:
      - description: The ID of the network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkIdResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Returns specific network ID.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<NetworkIdResponse>> =\
            \ fireblocks.networkConnections.getNetworkId(networkConnectionsApiGetNetworkIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<NetworkIdResponse>> response = fireblocks.networkConnections().getNetworkId(networkId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /network_ids/{networkId}/set_routing_policy:
    patch:
      description: |
        Updates the routing policy of a specified network ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

        Supported asset groups for routing police can be found at `/network_ids/routing_policy_asset_groups`

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: setNetworkIdRoutingPolicy
      parameters:
      - description: The ID of the network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNetworkIdRoutingPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNetworkIdResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update network id routing policy.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetNetworkIdResponse>>\
            \ = fireblocks.networkConnections.setNetworkIdRoutingPolicy(networkConnectionsApiSetNetworkIdRoutingPolicyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetNetworkIdResponse>> response = fireblocks.networkConnections().setNetworkIdRoutingPolicy(networkId,\
            \ setNetworkIdRoutingPolicyRequest);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_ids/{networkId}/set_discoverability:
    patch:
      description: |
        Update whether or not the network ID is discoverable by others.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: setNetworkIdDiscoverability
      parameters:
      - description: The ID of the network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNetworkIdDiscoverabilityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNetworkIdResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update network ID's discoverability.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetNetworkIdResponse>>\
            \ = fireblocks.networkConnections.setNetworkIdDiscoverability(networkConnectionsApiSetNetworkIdDiscoverabilityRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetNetworkIdResponse>> response = fireblocks.networkConnections().setNetworkIdDiscoverability(setNetworkIdDiscoverabilityRequest,\
            \ networkId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /network_ids/{networkId}/set_name:
    patch:
      description: |
        Updates name of a specified network ID.

        **Note:** This API call is subject to Flexible Routing Schemes.

        Your routing policy defines how your transactions are routed.
        You can choose 1 of the 3 different schemes mentioned below for each asset type:
          - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to `None` will fail.
          - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.
          - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as "Profile Routing"

        Default Workspace Presets:
          - Network Profile Crypto → **Custom**
          - Network Profile FIAT → **None**
          - Network Connection Crypto → **Default**
          - Network Connection FIAT → **Default**

            - **Note**: By default, Custom routing scheme uses (`dstId` = `0`, `dstType` = `VAULT`).
      operationId: setNetworkIdName
      parameters:
      - description: The ID of the network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNetworkIdNameRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNetworkIdResponse'
          description: Network ID
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update network ID's name.
      tags:
      - Network connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetNetworkIdResponse>>\
            \ = fireblocks.networkConnections.setNetworkIdName(networkConnectionsApiSetNetworkIdNameRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetNetworkIdResponse>> response = fireblocks.networkConnections().setNetworkIdName(setNetworkIdNameRequest,\
            \ networkId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /internal_wallets:
    get:
      description: |
        Gets a list of internal wallets.

        **Note**: BTC-based assets belonging to whitelisted addresses cannot be retrieved between 00:00 UTC and 00:01 UTC daily due to third-party provider, Blockchair, being unavailable for this 60 second period. Please wait until the next minute to retrieve BTC-based assets.
      operationId: getInternalWallets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInternalWalletsResponse'
          description: A list of internal wallets
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List internal wallets
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetInternalWalletsResponse>>\
            \ = fireblocks.internalWallets.getInternalWallets();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<UnmanagedWallet>>> response = fireblocks.internalWallets().getInternalWallets();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates a new internal wallet with the requested name.
      operationId: createInternalWallet
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A new wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: "internalWallet = fireblocks.create_internal_wallet(name, customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const internalWallet = await fireblocks.createInternalWallet(name,\
            \ customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.internalWallets.createInternalWallet(internalWalletsApiCreateInternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.internalWallets().createInternalWallet(createWalletRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /internal_wallets/{walletId}:
    delete:
      description: Deletes an internal wallet by ID.
      operationId: deleteInternalWallet
      parameters:
      - description: The ID of the wallet to delete
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.delete_internal_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteInternalWallet(walletId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.internalWallets.deleteInternalWallet(internalWalletsApiDeleteInternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.internalWallets().deleteInternalWallet(walletId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns all assets in an internal wallet by ID.
      operationId: getInternalWallet
      parameters:
      - description: The ID of the wallet to return
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A Wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get assets for internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: internalWallet = fireblocks.get_internal_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.getInternalWallet(walletId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.internalWallets.getInternalWallet(internalWalletsApiGetInternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.internalWallets().getInternalWallet(walletId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /internal_wallets/{walletId}/set_customer_ref_id:
    post:
      description: Sets an AML/KYT customer reference ID for the specific internal
        wallet.
      operationId: setCustomerRefIdForInternalWallet
      parameters:
      - description: The wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomerRefIdRequest'
        required: true
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set an AML/KYT customer reference ID for an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: "result = firebocks.set_customer_ref_id_for_internal_wallet(wallet_id,\
            \ customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.setCustomerRefIdForInternalWallet(walletId,\
            \ customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.internalWallets.setCustomerRefIdForInternalWallet(internalWalletsApiSetCustomerRefIdForInternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.internalWallets().setCustomerRefIdForInternalWallet(setCustomerRefIdRequest,\
            \ walletId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /internal_wallets/{walletId}/{assetId}:
    delete:
      description: Deletes a whitelisted address (for an asset) from an internal wallet.
      operationId: deleteInternalWalletAsset
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to delete
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete a whitelisted address from an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: "result = fireblocks.delete_internal_wallet_asset(walletId, assetId)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.deleteInternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.internalWallets.deleteInternalWalletAsset(internalWalletsApiDeleteInternalWalletAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.internalWallets().deleteInternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns information for an asset in an internal wallet.
      operationId: getInternalWalletAsset
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to return
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get an asset from an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: "internalWalletAsset = fireblocks.get_internal_wallet_asset(walletId,\
            \ assetId)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const internalWalletAsset = fireblocks.getInternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<WalletAsset>> = fireblocks.internalWallets.getInternalWalletAsset(internalWalletsApiGetInternalWalletAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<WalletAsset>> response = fireblocks.internalWallets().getInternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Adds an asset to an existing internal wallet.
      operationId: createInternalWalletAsset
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to add
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternalWalletAssetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Add an asset to an internal wallet
      tags:
      - Internal wallets
      x-readme:
        code-samples:
        - language: python
          code: "internalWalletAsset = fireblocks.create_internal_wallet_asset(walletId,\
            \ assetId, address, tag)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const internalWalletAsset = await fireblocks.createInternalWalletAsset(walletContainerId,\
            \ assetId, address, tag);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<WalletAsset>> = fireblocks.internalWallets.createInternalWalletAsset(internalWalletsApiCreateInternalWalletAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<WalletAsset>> response = fireblocks.internalWallets().createInternalWalletAsset(walletId,\
            \ assetId, createInternalWalletAssetRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /key_link/signing_keys:
    get:
      description: "Returns the list of signing keys in the workspace\nPlease note\
        \ that this endpoint is available only for Key Link enabled workspaces.\n\
        **Note:** \nThis endpoint is currently in beta and might be subject to changes.\n\
        If you want to participate and learn more about the Fireblocks Key Link, please\
        \ contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: getSigningKeysList
      parameters:
      - description: Cursor to the next page
        example: MjAyMy0xMi0xMyAyMDozNjowOC4zMDI=:MTEwMA==
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Amount of results to return in the next page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 1
          type: number
        style: form
      - description: Field(s) to use for sorting
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdAt
          enum:
          - createdAt
          type: string
        style: form
      - description: Is the order ascending or descending
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSigningKeyResponseDto'
          description: List of signing keys and a data that allows requesting the
            next page if applicable
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get list of signing keys
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetSigningKeyResponseDto>>\
            \ = fireblocks.keyLinkBeta.getSigningKeysList(keyLinkBetaApiGetSigningKeysListRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetSigningKeyResponseDto>> response\
            \ = fireblocks.keyLinkBeta().getSigningKeysList(pageCursor, pageSize,\
            \ sortBy, order);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: "Adds a new signing key to the workspace. The added key will be\
        \ linked to the specific Fireblocks agent user ID. The same user will receive\
        \ the proof of ownership message to be signed, and upon successful proof,\
        \ the key will become enabled.\nPlease note that this endpoint is available\
        \ only for Key Link enabled workspaces.\n**Note:** \nThis endpoint is currently\
        \ in beta and might be subject to changes.\nIf you want to participate and\
        \ learn more about the Fireblocks Key Link, please contact your Fireblocks\
        \ Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: createSigningKey
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSigningKeyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyDto'
          description: Newly created signing key
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Add a new signing key
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SigningKeyDto>> = fireblocks.keyLinkBeta.createSigningKey(keyLinkBetaApiCreateSigningKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SigningKeyDto>> response = fireblocks.keyLinkBeta().createSigningKey(createSigningKeyDto,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /key_link/signing_keys/{keyId}:
    get:
      description: "Returns a signing key if it exists, identified by the specified\
        \ Fireblocks provided `keyId`.\nPlease note that this endpoint is available\
        \ only for Key Link enabled workspaces.\n**Note:** \nThis endpoint is currently\
        \ in beta and might be subject to changes.\nIf you want to participate and\
        \ learn more about the Fireblocks Key Link, please contact your Fireblocks\
        \ Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: getSigningKey
      parameters:
      - description: The unique identifier for the signing key provided by Fireblocks
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyDto'
          description: Requested signing key data
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get a signing key by `keyId`
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SigningKeyDto>> = fireblocks.keyLinkBeta.getSigningKey(keyLinkBetaApiGetSigningKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<SigningKeyDto>> response = fireblocks.keyLinkBeta().getSigningKey(keyId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    patch:
      description: "Allows assigning the signing key to a vault account, if it hasn't\
        \ been assigned to any other vault accounts yet.\nPlease note that this endpoint\
        \ is available only for Key Link enabled workspaces.\n**Note:** \nThis endpoint\
        \ is currently in beta and might be subject to changes.\nIf you want to participate\
        \ and learn more about the Fireblocks Key Link, please contact your Fireblocks\
        \ Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: updateSigningKey
      parameters:
      - description: The unique identifier for the signing key provided by Fireblocks
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySigningKeyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyDto'
          description: Modified signing key data
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Modify the signing by Fireblocks provided `keyId`
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SigningKeyDto>> = fireblocks.keyLinkBeta.updateSigningKey(keyLinkBetaApiUpdateSigningKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SigningKeyDto>> response = fireblocks.keyLinkBeta().updateSigningKey(modifySigningKeyDto,\
            \ keyId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /key_link/signing_keys/{keyId}/agent_user_id:
    patch:
      description: "Can modify existing signing key id if the key is not enabled.\
        \ The change done in background and will be visible once applied. If key is\
        \ already enabled (after proof of ownership) the user cannot be changed.\n\
        Please note that this endpoint is available only for Key Link enabled workspaces.\n\
        **Note:** \nThis endpoint is currently in beta and might be subject to changes.\n\
        If you want to participate and learn more about the Fireblocks Key Link, please\
        \ contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: setAgentId
      parameters:
      - description: The unique identifier for the signing key provided by Fireblocks
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySigningKeyAgentIdDto'
        required: true
      responses:
        "204":
          description: Agent user id modification process has started in background.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set agent user id that can sign with the signing key identified by
        the Fireblocks provided `keyId`
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.keyLinkBeta.setAgentId(keyLinkBetaApiSetAgentIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.keyLinkBeta().setAgentId(modifySigningKeyAgentIdDto,\
            \ keyId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /key_link/validation_keys:
    get:
      description: "Returns the list of validation keys in the workspace\nPlease note\
        \ that this endpoint is available only for Key Link enabled workspaces.\n\
        **Note:** \nThis endpoint is currently in beta and might be subject to changes.\n\
        If you want to participate and learn more about the Fireblocks Key Link, please\
        \ contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: getValidationKeysList
      parameters:
      - description: Cursor to the next page
        example: MjAyMy0xMi0xMyAyMDozNjowOC4zMDI=:MTEwMA==
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Amount of results to return in the next page
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          maximum: 50
          minimum: 1
          type: number
        style: form
      - description: Field(s) to use for sorting
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: createdAt
          enum:
          - createdAt
          type: string
        style: form
      - description: Is the order ascending or descending
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetValidationKeyResponseDto'
          description: Validation keys list along with data required to request the
            next page if applicable
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get list of registered validation keys
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetValidationKeyResponseDto>>\
            \ = fireblocks.keyLinkBeta.getValidationKeysList(keyLinkBetaApiGetValidationKeysListRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetValidationKeyResponseDto>> response\
            \ = fireblocks.keyLinkBeta().getValidationKeysList(pageCursor, pageSize,\
            \ sortBy, order);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: "Adds a new validation key used to validate signing keys. The new\
        \ validation key will undergo an approval process by the workspace quorum.\n\
        Please note that this endpoint is available only for Key Link enabled workspaces.\n\
        **Note:** \nThis endpoint is currently in beta and might be subject to changes.\n\
        If you want to participate and learn more about the Fireblocks Key Link, please\
        \ contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: createValidationKey
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateValidationKeyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateValidationKeyResponseDto'
          description: The validation key that was added and is pending approval.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Add a new validation key
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateValidationKeyResponseDto>>\
            \ = fireblocks.keyLinkBeta.createValidationKey(keyLinkBetaApiCreateValidationKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateValidationKeyResponseDto>> response\
            \ = fireblocks.keyLinkBeta().createValidationKey(createValidationKeyDto,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /key_link/validation_keys/{keyId}:
    get:
      description: "Returns a validation key if it exists, identified by the specified\
        \ `keyId`.\nPlease note that this endpoint is available only for Key Link\
        \ enabled workspaces.\n**Note:** \nThis endpoint is currently in beta and\
        \ might be subject to changes.\nIf you want to participate and learn more\
        \ about the Fireblocks Key Link, please contact your Fireblocks Customer Success\
        \ Manager or send an email to CSM@fireblocks.com."
      operationId: getValidationKey
      parameters:
      - explode: false
        in: path
        name: keyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationKeyDto'
          description: The requested validation key data
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get a validation key by `keyId`
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ValidationKeyDto>> = fireblocks.keyLinkBeta.getValidationKey(keyLinkBetaApiGetValidationKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ValidationKeyDto>> response = fireblocks.keyLinkBeta().getValidationKey(keyId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    patch:
      description: "Allows disabling validation key even if it has not expired yet.\
        \ It is not allowed to enable the validation key back. Another key has to\
        \ be used for future validations.\nPlease note that this endpoint is available\
        \ only for Key Link enabled workspaces.\n**Note:** \nThis endpoint is currently\
        \ in beta and might be subject to changes.\nIf you want to participate and\
        \ learn more about the Fireblocks Key Link, please contact your Fireblocks\
        \ Customer Success Manager or send an email to CSM@fireblocks.com."
      operationId: disableValidationKey
      parameters:
      - description: The unique identifier for the validation key provided by Fireblocks
        explode: false
        in: path
        name: keyId
        required: true
        schema:
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyValidationKeyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationKeyDto'
          description: Modified validation key data
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Disables a validation key
      tags:
      - Key Link (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ValidationKeyDto>> = fireblocks.keyLinkBeta.disableValidationKey(keyLinkBetaApiDisableValidationKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ValidationKeyDto>> response = fireblocks.keyLinkBeta().disableValidationKey(modifyValidationKeyDto,\
            \ keyId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /external_wallets:
    get:
      description: Gets a list of external wallets under the workspace.
      operationId: getExternalWallets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExternalWalletsResponse'
          description: A list of external wallets
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List external wallets
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWallets = fireblocks.get_external_wallets()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWallets = await fireblocks.getExternalWallets();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetExternalWalletsResponse>>\
            \ = fireblocks.externalWallets.getExternalWallets();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<UnmanagedWallet>>> response = fireblocks.externalWallets().getExternalWallets();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates a new external wallet with the requested name.
      operationId: createExternalWallet
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A Wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: "externalWallet = fireblocks.create_external_wallet(name, customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const externalWallet = await fireblocks.createExternalWallet(name,\
            \ customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.externalWallets.createExternalWallet(externalWalletsApiCreateExternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.externalWallets().createExternalWallet(createWalletRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /external_wallets/{walletId}:
    delete:
      description: Deletes an external wallet by ID.
      operationId: deleteExternalWallet
      parameters:
      - description: The ID of the wallet to delete
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: result = firebocks.delete_external_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.deleteExternalWallet(walletId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.externalWallets.deleteExternalWallet(externalWalletsApiDeleteExternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.externalWallets().deleteExternalWallet(walletId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns an external wallet by ID.
      operationId: getExternalWallet
      parameters:
      - description: The ID of the wallet to return
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A Wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: externalWallet = fireblocks.get_external_wallet(walletId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const externalWallet = await fireblocks.getExternalWallet(walletId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.externalWallets.getExternalWallet(externalWalletsApiGetExternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.externalWallets().getExternalWallet(walletId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /external_wallets/{walletId}/set_customer_ref_id:
    post:
      description: Sets an AML/KYT customer reference ID for the specific external
        wallet.
      operationId: setExternalWalletCustomerRefId
      parameters:
      - description: The wallet ID
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomerRefIdRequest'
        required: true
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set an AML customer reference ID for an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: "result = firebocks.set_customer_ref_id_for_external_wallet(wallet_id,\
            \ customer_ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.setCustomerRefIdForExternalWallet(walletId,\
            \ customerRefId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.externalWallets.setExternalWalletCustomerRefId(externalWalletsApiSetExternalWalletCustomerRefIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.externalWallets().setExternalWalletCustomerRefId(setCustomerRefIdRequest,\
            \ walletId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /external_wallets/{walletId}/{assetId}:
    delete:
      description: Deletes an external wallet asset by ID.
      operationId: removeAssetFromExternalWallet
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to delete
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete an asset from an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: "result = fireblocks.delete_external_wallet_asset(walletId, assetId)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.deleteExternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.externalWallets.removeAssetFromExternalWallet(externalWalletsApiRemoveAssetFromExternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.externalWallets().removeAssetFromExternalWallet(walletId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns an external wallet by wallet ID and asset ID.
      operationId: getExternalWalletAsset
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to return
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get an asset from an external wallet
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: "externalWalletAsset = fireblocks.get_external_wallet_asset(walletId,\
            \ assetId)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const externalWalletAsset = fireblocks.getExternalWalletAsset(walletId,\
            \ assetId)"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExternalWalletAsset>>\
            \ = fireblocks.externalWallets.getExternalWalletAsset(externalWalletsApiGetExternalWalletAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExternalWalletAsset>> response = fireblocks.externalWallets().getExternalWalletAsset(walletId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Adds an asset to an existing external wallet.
      operationId: addAssetToExternalWallet
      parameters:
      - description: The ID of the wallet
        explode: false
        in: path
        name: walletId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to add
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAssetToExternalWalletRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Add an asset to an external wallet.
      tags:
      - External wallets
      x-readme:
        code-samples:
        - language: python
          code: "externalWalletAsset = fireblocks.create_external_wallet_asset(walletId,\
            \ assetId, address, tag)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const externalWalletAsset = await fireblocks.createExternalWalletAsset(walletContainerId,\
            \ assetId, address, tag);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExternalWalletAsset>>\
            \ = fireblocks.externalWallets.addAssetToExternalWallet(externalWalletsApiAddAssetToExternalWalletRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExternalWalletAsset>> response = fireblocks.externalWallets().addAssetToExternalWallet(walletId,\
            \ assetId, addAssetToExternalWalletRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /contracts:
    get:
      description: Gets a list of contracts.
      operationId: getContracts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContractsResponse'
          description: A list of contracts
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List contracts
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetContractsResponse>>\
            \ = fireblocks.contracts.getContracts();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<UnmanagedWallet>>> response = fireblocks.contracts().getContracts();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates a new contract.
      operationId: createContract
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContractRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A Wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create a contract
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.contracts.createContract(contractsApiCreateContractRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.contracts().createContract(createContractRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /contracts/{contractId}:
    delete:
      description: Deletes a contract by ID.
      operationId: deleteContract
      parameters:
      - description: The ID of the contract to delete
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete a contract
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.contracts.deleteContract(contractsApiDeleteContractRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.contracts().deleteContract(contractId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns a contract by ID.
      operationId: getContract
      parameters:
      - description: The ID of the contract to return
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmanagedWallet'
          description: A Wallet object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific contract
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnmanagedWallet>> = fireblocks.contracts.getContract(contractsApiGetContractRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<UnmanagedWallet>> response = fireblocks.contracts().getContract(contractId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /contracts/{contractId}/{assetId}:
    delete:
      description: Deletes a contract asset by ID.
      operationId: deleteContractAsset
      parameters:
      - description: The ID of the contract
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to delete
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "201":
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete a contract asset
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.contracts.deleteContractAsset(contractsApiDeleteContractAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.contracts().deleteContractAsset(contractId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Returns a contract asset by ID.
      operationId: getContractAsset
      parameters:
      - description: The ID of the contract
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to return
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a contract asset
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExternalWalletAsset>>\
            \ = fireblocks.contracts.getContractAsset(contractsApiGetContractAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExternalWalletAsset>> response = fireblocks.contracts().getContractAsset(contractId,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Adds an asset to an existing contract.
      operationId: addContractAsset
      parameters:
      - description: The ID of the contract
        explode: false
        in: path
        name: contractId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the asset to add
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContractAssetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletAsset'
          description: A Wallet Asset object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Add an asset to a contract
      tags:
      - Contracts
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExternalWalletAsset>>\
            \ = fireblocks.contracts.addContractAsset(contractsApiAddContractAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExternalWalletAsset>> response = fireblocks.contracts().addContractAsset(contractId,\
            \ assetId, addContractAssetRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /supported_assets:
    get:
      description: Returns all asset types supported by Fireblocks.
      operationId: getSupportedAssets
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupportedAssetsResponse'
          description: A Transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all asset types supported by Fireblocks
      tags:
      - Blockchains & assets
      x-readme:
        code-samples:
        - language: python
          code: supportedAssets = fireblocks.get_supported_assets()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const supportedAssets = await fireblocks.getSupportedAssets();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetSupportedAssetsResponse>>\
            \ = fireblocks.blockchainsAssets.getSupportedAssets();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<AssetTypeResponse>>> response =
            fireblocks.blockchainsAssets().getSupportedAssets();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /assets:
    post:
      description: |
        Register a new asset to a workspace and return the newly created asset's details. Currently supported chains are:
        - EVM based chains
        - Stellar
        - Algorand
        - TRON
        - NEAR
        - Solana
      operationId: registerNewAsset
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterNewAssetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
          description: A new asset has been created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetBadRequestErrorResponse'
          description: |
            - Listing an asset on the requested blockchain is not supported. Error code: 1000

            - The asset address is invalid. Error code: 1003

            - Self serve listing an asset on the requested blockchain is currently not supported, please contact support. Error code: 1004

            - Blockchain is deprecated. Error code: 1006

            - The asset's standard is not supported. Error code: 1007
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetForbiddenErrorResponse'
          description: |
            - The asset creation quota reached. Error code: 1005
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetNotFoundErrorResponse'
          description: |
            - Invalid address, could not get asset information. Error code 1003
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetConflictErrorResponse'
          description: |
            - The asset is already supported globally. Error code: 1001

            - The asset has already been added to this workspace. Error code: 1002
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInternalServerErrorResponse'
          description: Failed to create asset
      summary: Register an asset
      tags:
      - Blockchains & assets
      x-readme:
        code-samples:
        - language: python
          code: "supportedAssets = fireblocks.register_new_asset(blockchainId, address,\
            \ symbol)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const supportedAssets = await fireblocks.registerNewAsset(blockchainId,\
            \ address, symbol);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<AssetResponse>> = fireblocks.blockchainsAssets.registerNewAsset(blockchainsAssetsApiRegisterNewAssetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<AssetResponse>> response = fireblocks.blockchainsAssets().registerNewAsset(registerNewAssetRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /transactions:
    get:
      description: Lists the transaction history for your workspace.
      operationId: getTransactions
      parameters:
      - description: Unix timestamp in milliseconds. Returns only transactions created
          before the specified date
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Unix timestamp in milliseconds. Returns only transactions created
          after the specified date
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: You can filter by one of the statuses.
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The field to order the results by

          **Note**: Ordering by a field that is not createdAt may result with transactions that receive updates as you request the next or previous pages of results, resulting with missing those transactions.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          enum:
          - createdAt
          - lastUpdated
          type: string
        style: form
      - description: The direction to order the results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: "Limits the number of results. If not provided, a limit of 200\
          \ will be used. The maximum allowed limit is 500"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 200
          minimum: 1
          type: integer
        style: form
      - description: The source type of the transaction
        explode: true
        in: query
        name: sourceType
        required: false
        schema:
          enum:
          - VAULT_ACCOUNT
          - EXCHANGE_ACCOUNT
          - INTERNAL_WALLET
          - EXTERNAL_WALLET
          - CONTRACT
          - FIAT_ACCOUNT
          - NETWORK_CONNECTION
          - COMPOUND
          - UNKNOWN
          - GAS_STATION
          - END_USER_WALLET
          type: string
        style: form
      - description: The source ID of the transaction
        explode: true
        in: query
        name: sourceId
        required: false
        schema:
          type: string
        style: form
      - description: The destination type of the transaction
        explode: true
        in: query
        name: destType
        required: false
        schema:
          enum:
          - VAULT_ACCOUNT
          - EXCHANGE_ACCOUNT
          - INTERNAL_WALLET
          - EXTERNAL_WALLET
          - CONTRACT
          - FIAT_ACCOUNT
          - NETWORK_CONNECTION
          - COMPOUND
          - ONE_TIME_ADDRESS
          - END_USER_WALLET
          type: string
        style: form
      - description: The destination ID of the transaction
        explode: true
        in: query
        name: destId
        required: false
        schema:
          type: string
        style: form
      - description: "A list of assets to filter by, seperated by commas"
        explode: true
        in: query
        name: assets
        required: false
        schema:
          type: string
        style: form
      - description: Returns only results with a specified txHash
        explode: true
        in: query
        name: txHash
        required: false
        schema:
          type: string
        style: form
      - description: Returns only results where the source is a specific end user
          wallet
        explode: true
        in: query
        name: sourceWalletId
        required: false
        schema:
          type: string
        style: form
      - description: Returns only results where the destination is a specific end
          user wallet
        explode: true
        in: query
        name: destWalletId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsResponse'
          description: A list of transactions
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            next-page:
              $ref: '#/components/headers/next-page'
            prev-page:
              $ref: '#/components/headers/prev-page'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List transaction history
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: "transactions = fireblocks.get_transactions(status, after)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: |
            const transactions = await fireblocks.getTransactions({
             status: args.status,
            after: from });
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetTransactionsResponse>>\
            \ = fireblocks.transactions.getTransactions(transactionsApiGetTransactionsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<TransactionResponse>>> response\
            \ = fireblocks.transactions().getTransactions(before, after, status, orderBy,\
            \ sort, limit, sourceType, sourceId, destType, destId, assets, txHash,\
            \ sourceWalletId, destWalletId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates a new transaction.
      operationId: createTransaction
      parameters:
      - description: Unique ID of the End-User wallet to the API request. Required
          for end-user wallet operations.
        explode: false
        in: header
        name: X-End-User-Wallet-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
          description: A transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create a new transaction
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: |
            tx_result = client.create_transaction( asset_id="BTC", amount="50", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )
          name: Fireblocks SDK Python example
        - language: javascript
          code: |
            const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: String(amount), fee: String(fee), note: "Created by fireblocks SDK" }; const result = await fireblocks.createTransaction(payload);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateTransactionResponse>>\
            \ = fireblocks.transactions.createTransaction(transactionsApiCreateTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateTransactionResponse>> response\
            \ = fireblocks.transactions().createTransaction(transactionRequest, xEndUserWalletId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /transactions/estimate_fee:
    post:
      description: |-
        Estimates the transaction fee for a transaction request.
        * Note: Supports all Fireblocks assets except ZCash (ZEC).
      operationId: estimateTransactionFee
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedTransactionFeeResponse'
          description: Estimated fees response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Estimate transaction fee
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: |
            estimated_fee = client.estimate_fee_for_transaction( asset_id="BTC", amount="50", source=TransferPeerPath(VAULT_ACCOUNT, from_vault_account_id), destination=DestinationTransferPeerPath(VAULT_ACCOUNT, to_vault_account_id) )
          name: Fireblocks SDK Python example
        - language: javascript
          code: |
            const payload: TransactionArguments = { assetId: asset, source: { type: sourceType, id: sourceId || 0 }, destination: { type: destinationType, id: String(destinationId) }, amount: Number(amount) }; const estimatedFee = await fireblocks.estimateFeeForTransaction(payload);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<EstimatedTransactionFeeResponse>>\
            \ = fireblocks.transactions.estimateTransactionFee(transactionsApiEstimateTransactionFeeRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<EstimatedTransactionFeeResponse>> response\
            \ = fireblocks.transactions().estimateTransactionFee(transactionRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /transactions/{txId}:
    get:
      description: Returns a transaction by ID.
      operationId: getTransaction
      parameters:
      - description: The ID of the transaction to return
        example: 00000000-0000-0000-0000-000000000000
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: An Transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific transaction by Fireblocks transaction ID
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: tx = fireblocks.get_transaction_by_id(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const tx = await fireblocks.getTransactionById(txId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TransactionResponse>>\
            \ = fireblocks.transactions.getTransaction(transactionsApiGetTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<TransactionResponse>> response = fireblocks.transactions().getTransaction(txId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /transactions/external_tx_id/{externalTxId}:
    get:
      description: Returns transaction by external transaction ID.
      operationId: getTransactionByExternalId
      parameters:
      - description: The external ID of the transaction to return
        example: 00000000-0000-0000-0000-000000000000
        explode: false
        in: path
        name: externalTxId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
          description: An Transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific transaction by external transaction ID
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: tx = fireblocks.get_transaction_by_external_tx_id(externalTxId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const tx = await fireblocks.getTransactionByExternalTxId(externalTxId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TransactionResponse>>\
            \ = fireblocks.transactions.getTransactionByExternalId(transactionsApiGetTransactionByExternalIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<TransactionResponse>> response = fireblocks.transactions().getTransactionByExternalId(externalTxId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /transactions/{txId}/set_confirmation_threshold:
    post:
      description: Overrides the required number of confirmations for transaction
        completion by transaction ID.
      operationId: setTransactionConfirmationThreshold
      parameters:
      - description: The ID of the transaction
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetConfirmationsThresholdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetConfirmationsThresholdResponse'
          description: Set successfully
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set confirmation threshold by transaction ID
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: set_conf_threshold = client.set_confirmation_threshold_by_tx_id(body)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const setConfThreshold = await fireblocks.setConfirmationThresholdByTxId(body);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetConfirmationsThresholdResponse>>\
            \ = fireblocks.transactions.setTransactionConfirmationThreshold(transactionsApiSetTransactionConfirmationThresholdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetConfirmationsThresholdResponse>>\
            \ response = fireblocks.transactions().setTransactionConfirmationThreshold(txId,\
            \ setConfirmationsThresholdRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /transactions/{txId}/drop:
    post:
      description: Drops a stuck ETH transaction and creates a replacement transaction.
      operationId: dropTransaction
      parameters:
      - description: The ID of the transaction
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique ID of the End-User wallet to the API request. Required
          for end-user wallet operations.
        explode: false
        in: header
        name: X-End-User-Wallet-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropTransactionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropTransactionResponse'
          description: Operation completed successfully
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Drop ETH transaction by ID
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: "result = fireblocks.drop_transaction(txId, fee_level)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.dropTransaction(txId, feeLevel);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DropTransactionResponse>>\
            \ = fireblocks.transactions.dropTransaction(transactionsApiDropTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DropTransactionResponse>> response\
            \ = fireblocks.transactions().dropTransaction(txId, dropTransactionRequest,\
            \ xEndUserWalletId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /transactions/{txId}/cancel:
    post:
      description: Cancels a transaction by ID.
      operationId: cancelTransaction
      parameters:
      - description: The ID of the transaction to cancel
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique ID of the End-User wallet to the API request. Required
          for end-user wallet operations.
        explode: false
        in: header
        name: X-End-User-Wallet-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTransactionResponse'
          description: An Transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Cancel a transaction
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.cancel_transaction_by_id(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.cancelTransactionById(txId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CancelTransactionResponse>>\
            \ = fireblocks.transactions.cancelTransaction(transactionsApiCancelTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CancelTransactionResponse>> response\
            \ = fireblocks.transactions().cancelTransaction(txId, xEndUserWalletId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /transactions/{txId}/freeze:
    post:
      description: Freezes a transaction by ID.
      operationId: freezeTransaction
      parameters:
      - description: The ID of the transaction to freeze
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique ID of the End-User wallet to the API request. Required
          for end-user wallet operations.
        explode: false
        in: header
        name: X-End-User-Wallet-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreezeTransactionResponse'
          description: freeze response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Freeze a transaction
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.freeze_transaction_by_id(txId);
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.freezeTransactionById(txId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<FreezeTransactionResponse>>\
            \ = fireblocks.transactions.freezeTransaction(transactionsApiFreezeTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<FreezeTransactionResponse>> response\
            \ = fireblocks.transactions().freezeTransaction(txId, xEndUserWalletId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /transactions/{txId}/unfreeze:
    post:
      description: Unfreezes a transaction by ID and makes the transaction available
        again.
      operationId: unfreezeTransaction
      parameters:
      - description: The ID of the transaction to unfreeze
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique ID of the End-User wallet to the API request. Required
          for end-user wallet operations.
        explode: false
        in: header
        name: X-End-User-Wallet-Id
        required: false
        schema:
          format: uuid
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnfreezeTransactionResponse'
          description: Unfreeze response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Unfreeze a transaction
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.unfreeze_transaction_by_id(txId)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.unfreezeTransactionById(txId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UnfreezeTransactionResponse>>\
            \ = fireblocks.transactions.unfreezeTransaction(transactionsApiUnfreezeTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<UnfreezeTransactionResponse>> response\
            \ = fireblocks.transactions().unfreezeTransaction(txId, xEndUserWalletId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /transactions/validate_address/{assetId}/{address}:
    get:
      description: "Checks if an address is valid (for XRP, DOT, XLM, and EOS)."
      operationId: validateAddress
      parameters:
      - description: The asset of the address
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: The address to validate
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateAddressResponse'
          description: An Transaction object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Validate destination address
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: "result = fireblocks.(asset_id, address)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.(assetId, address);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ValidateAddressResponse>>\
            \ = fireblocks.transactions.validateAddress(transactionsApiValidateAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ValidateAddressResponse>> response\
            \ = fireblocks.transactions().validateAddress(assetId, address);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /txHash/{txHash}/set_confirmation_threshold:
    post:
      description: Overrides the required number of confirmations for transaction
        completion by transaction hash.
      operationId: setConfirmationThresholdByTransactionHash
      parameters:
      - description: The TxHash
        explode: false
        in: path
        name: txHash
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetConfirmationsThresholdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetConfirmationsThresholdResponse'
          description: A list of transactions affected by the change
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Set confirmation threshold by transaction hash
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: set_conf_threshold = client.set_confirmation_threshold_by_tx_hash(body)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const setConfThreshold = await fireblocks.setConfirmationThresholdByTxHash(body);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetConfirmationsThresholdResponse>>\
            \ = fireblocks.transactions.setConfirmationThresholdByTransactionHash(transactionsApiSetConfirmationThresholdByTransactionHashRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetConfirmationsThresholdResponse>>\
            \ response = fireblocks.transactions().setConfirmationThresholdByTransactionHash(txHash,\
            \ setConfirmationsThresholdRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /estimate_network_fee:
    get:
      description: "Gets the estimated required fee for an asset. For UTXO based assets,\
        \ the response will contain the suggested fee per byte, for ETH/ETC based\
        \ assets, the suggested gas price, and for XRP/XLM, the transaction fee."
      operationId: estimateNetworkFee
      parameters:
      - description: The asset for which to estimate the fee
        explode: true
        in: query
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedNetworkFeeResponse'
          description: Estimated fees response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Estimate the required fee for an asset
      tags:
      - Transactions
      x-readme:
        code-samples:
        - language: python
          code: fee_result = fireblocks.get_fee_for_asset(asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const feeResult = await fireblocks.getFeeForAsset(assetId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<EstimatedNetworkFeeResponse>>\
            \ = fireblocks.transactions.estimateNetworkFee(transactionsApiEstimateNetworkFeeRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<EstimatedNetworkFeeResponse>> response
            = fireblocks.transactions().estimateNetworkFee(assetId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /payments/payout:
    post:
      description: |
        **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoints include APIs available only for customers with Payments Engine enabled on their accounts. </br>
        </br>These endpoints are currently in beta and might be subject to changes.</br>
        </br>If you want to learn more about Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or email CSM@fireblocks.com. </br>
        </br> <b u>Create a payout instruction set.</b> </u></br>
        A payout instruction set is a set of instructions for distributing payments from a single payment account to a list of payee accounts. </br>
        The instruction set defines: </br>
        <ul>
        <li>the payment account and its account type (vault, exchange, or fiat). </li>
        <li>the account type (vault account, exchange account, whitelisted address, network connection, fiat account, or merchant account), the amount, and the asset of payment for each payee account.</li>
        </ul>
      operationId: createPayout
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              paymentAccount:
                id: EX_SUB1
                type: EXCHANGE_ACCOUNT
              instructionSet:
              - payeeAccount:
                  id: bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3
                  type: EXTERNAL_WALLET
                amount:
                  amount: "43"
                  assetId: USDC
              - payeeAccount:
                  id: 3adc1f92-e791-44a8-9aee-7f31c2108b78
                  type: NETWORK_CONNECTION
                amount:
                  amount: "4423"
                  assetId: USDC
            schema:
              $ref: '#/components/schemas/CreatePayoutRequest'
      responses:
        "200":
          content:
            application/json:
              example:
                payoutId: 1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7
                paymentAccount:
                  id: EX_SUB2
                  type: EXCHANGE_ACCOUNT
                createdAt: 1645365800
                state: REQUESTED
                status: REGISTERED
                initMethod: API
                instructionSet:
                - id: 6ea4a016-536b-49af-b1a0-40b343ccf879
                  name: payee-wallet-name
                  payeeAccount:
                    id: bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3
                    type: EXTERNAL_WALLET
                  amount:
                    amount: "43"
                    assetId: USDC
                  state: NOT_STARTED
                  transactions: []
                - id: e783a79b-6acc-4d18-885d-ed533cad8eeb
                  name: payee-by-network
                  payeeAccount:
                    id: 3adc1f92-e791-44a8-9aee-7f31c2108b78
                    type: NETWORK_CONNECTION
                  amount:
                    amount: "4423.23"
                    assetId: USDC
                  state: NOT_STARTED
                  transactions: []
              schema:
                $ref: '#/components/schemas/PayoutResponse'
          description: The payout instruction set creation succeeded and returns the
            generated instruction set with a unique payout IDThe payout ID will be
            used for executing the payout and checking the payout status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
      summary: Create a payout instruction set
      tags:
      - Payments - Payout
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PayoutResponse>> = fireblocks.paymentsPayout.createPayout(paymentsPayoutApiCreatePayoutRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PayoutResponse>> response = fireblocks.paymentsPayout().createPayout(createPayoutRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /payments/payout/{payoutId}/actions/execute:
    post:
      description: |
        **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoints include APIs available only for customers with Payments Engine enabled on their accounts. </br>
        </br>These endpoints are currently in beta and might be subject to changes.</br>
        </br>If you want to learn more about Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or email CSM@fireblocks.com. </br>
        </br><b u>Execute a payout instruction set.</b> </u> </br>
        </br>The instruction set will be verified and executed.</br>
        <b><u>Source locking</br></b> </u>
        If you are executing a payout instruction set from a payment account with an already active payout the active payout will complete before the new payout instruction set can be executed. </br>
        You cannot execute the same payout instruction set more than once.
      operationId: executePayoutAction
      parameters:
      - description: the payout id received from the creation of the payout instruction
          set
        example: 1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7
        explode: false
        in: path
        name: payoutId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                payoutId: 1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7
              schema:
                $ref: '#/components/schemas/DispatchPayoutResponse'
          description: Executed the payout instruction set
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
      summary: Execute a payout instruction set
      tags:
      - Payments - Payout
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DispatchPayoutResponse>>\
            \ = fireblocks.paymentsPayout.executePayoutAction(paymentsPayoutApiExecutePayoutActionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DispatchPayoutResponse>> response =\
            \ fireblocks.paymentsPayout().executePayoutAction(payoutId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /payments/payout/{payoutId}:
    get:
      description: |
        **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoints include APIs available only for customers with Payments Engine enabled on their accounts. </br>
        </br>These endpoints are currently in beta and might be subject to changes.</br>
        </br>If you want to learn more about Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or email CSM@fireblocks.com. </br>
      operationId: getPayout
      parameters:
      - description: the payout id received from the creation of the payout instruction
          set
        example: 1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7
        explode: false
        in: path
        name: payoutId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                payoutId: 1fe3b61f-7e1f-4a19-aff0-4f0a524d44d7
                paymentAccount:
                  id: EX_SUB3
                  type: EXCHANGE_ACCOUNT
                createdAt: 1645365800
                state: FINALIZED
                status: DONE
                initMethod: API
                instructionSet:
                - id: 6ea4a016-536b-49af-b1a0-40b343ccf879
                  name: payee-wallet-name
                  payeeAccount:
                    id: bef85a1c-b605-4b2e-bdb5-2d400f4d0bf3
                    type: EXTERNAL_WALLET
                  amount:
                    amount: "4312"
                    assetId: USDC
                  state: COMPLETED
                  transactions:
                  - id: 35a4b10c-1f83-4f0b-ba2a-da0e73be2d6e
                    state: COMPLETED
                    timestamp: 1645367429
                - id: e783a79b-6acc-4d18-885d-ed533cad8eeb
                  name: payee-by-network
                  payeeAccount:
                    id: 3adc1f92-e791-44a8-9aee-7f31c2108b78
                    type: NETWORK_CONNECTION
                  amount:
                    amount: "4423.23"
                    assetId: USDC
                  state: COMPLETED
                  transactions:
                  - id: 4505e7d9-bfc7-41bc-9750-54311fcbbf26
                    state: COMPLETED
                    timestamp: 1645367449
                reportUrl: https://some-url.com/reports/cc5777c1-75a9-4337-aebd-f1f5a40a9391
              schema:
                $ref: '#/components/schemas/PayoutResponse'
          description: "Returns the current status of the payout instruction set,\
            \ including the status of each payout instruction and the transactions\
            \ created in the process."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No payout with the given payout ID exists.
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
      summary: Get the status of a payout instruction set
      tags:
      - Payments - Payout
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PayoutResponse>> = fireblocks.paymentsPayout.getPayout(paymentsPayoutApiGetPayoutRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<PayoutResponse>> response = fireblocks.paymentsPayout().getPayout(payoutId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /payments/workflow_config:
    post:
      description: "Generate a new configuration ID to be used for initiating executions\
        \ in subsequent phases. This configuration should include the operations you\
        \ intend to incorporate into the workflow, such as TRANSFER, CONVERT, and\
        \ DISBURSE, in addition to your pre-screening preferences, which are disabled\
        \ by default."
      operationId: createFlowConfiguration
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowConfigurationRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfiguration'
          description: Configuration is being generated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Create payment flow configuration
      tags:
      - Payments - Flows
      x-internal: true
      x-content-type: application/json
      x-accepts: application/json
  /payments/workflow_config/{configId}:
    delete:
      description: Delete a configuration using the specified "configId".
      operationId: deleteFlowConfiguration
      parameters:
      - explode: false
        in: path
        name: configId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfigurationId'
          description: The specified configuration has been deleted successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Delete workflow configuration
      tags:
      - Payments - Flows
      x-internal: true
      x-accepts: application/json
    get:
      description: Retrieve a previously created workflow configuration using the
        specified "configId".
      operationId: getFlowConfiguration
      parameters:
      - explode: false
        in: path
        name: configId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowConfiguration'
          description: Returns a workflow configuration
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Retrieve workflow configuration
      tags:
      - Payments - Flows
      x-internal: true
      x-accepts: application/json
  /payments/workflow_execution:
    post:
      description: "Validate the \"workflow-config\" previously created by utilizing\
        \ the unique \"configId\". This step requires the mandatory field amount,\
        \ and allows for modifications to other fields defined via the \"workflow-config\"\
        \ endpoint, including pre-screening preferences. A response containing the\
        \ \"workflowExecutionId\" and detailing the validation status will be provided.\
        \ Execution is ready when the \"workflow-execution\" status is READY_FOR_LAUNCH,\
        \ at which point it can be initiated with \"POST /workflow-execution/{workflowExecutionId}/actions/execute\"\
        ."
      operationId: createFlowExecution
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowExecutionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: Workflow execution entity has been created successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Create workflow execution
      tags:
      - Payments - Flows
      x-internal: true
      x-content-type: application/json
      x-accepts: application/json
  /payments/workflow_execution/{workflowExecutionId}:
    get:
      description: Retrieve details of a previously initiated workflow execution by
        specifying the "workflowExecutionId"
      operationId: getFlowExecution
      parameters:
      - explode: false
        in: path
        name: workflowExecutionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: Returns workflow execution by id with preview info
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Get workflow execution details
      tags:
      - Payments - Flows
      x-internal: true
      x-accepts: application/json
  /payments/workflow_execution/{workflowExecutionId}/actions/execute:
    post:
      description: "Launch the execution of a pre-configured workflow, identified\
        \ by \"workflowExecutionId\", once it reaches the READY_FOR_LAUNCH state.\
        \ The workflow undergoes several phases during execution - EXECUTION_IN_PROGRESS\
        \ - Marks the start of the workflow execution. EXECUTION_COMPLETED or EXECUTION_FAILED\
        \ - Indicates the execution has reached a final state."
      operationId: launchFlowExecution
      parameters:
      - explode: false
        in: path
        name: workflowExecutionId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowExecution'
          description: Workflow execution has been executed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not found
      summary: Execute the payments workflow
      tags:
      - Payments - Flows
      x-internal: true
      x-accepts: application/json
  /gas_station:
    get:
      description: Returns gas station settings and ETH balance.
      operationId: getGasStationInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStationPropertiesResponse'
          description: Gas Station properties
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get gas station settings
      tags:
      - Gas stations
      x-readme:
        code-samples:
        - language: python
          code: gas_station_info = fireblocks.get_gas_station_info()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const gasStationInfo = await fireblocks.gasStationInfo();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GasStationPropertiesResponse>>\
            \ = fireblocks.gasStations.getGasStationInfo();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GasStationPropertiesResponse>> response
            = fireblocks.gasStations().getGasStationInfo();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /gas_station/{assetId}:
    get:
      description: Returns gas station settings and balances for a requested asset.
      operationId: getGasStationByAssetId
      parameters:
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GasStationPropertiesResponse'
          description: Gas Station properties
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get gas station settings by asset
      tags:
      - Gas stations
      x-readme:
        code-samples:
        - language: python
          code: gas_station_info = fireblocks.get_gas_station_info(asset_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const gasStationInfo = await fireblocks.gasStationInfo(assetId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GasStationPropertiesResponse>>\
            \ = fireblocks.gasStations.getGasStationByAssetId(gasStationsApiGetGasStationByAssetIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GasStationPropertiesResponse>> response
            = fireblocks.gasStations().getGasStationByAssetId(assetId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /gas_station/configuration:
    put:
      description: Configures gas station settings for ETH.
      operationId: updateGasStationConfiguration
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GasStationConfiguration'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditGasStationConfigurationResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Edit gas station settings
      tags:
      - Gas stations
      x-readme:
        code-samples:
        - language: python
          code: "gas_station = fireblocks.set_gas_station_configuration(gas_threshold,\
            \ gas_cap, max_gas_price, asset_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const gasStation = await fireblocks.setGasStationConfiguration(gasThreshold,\
            \ gasCap, maxGasPrice)"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<EditGasStationConfigurationResponse>>\
            \ = fireblocks.gasStations.updateGasStationConfiguration(gasStationsApiUpdateGasStationConfigurationRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<EditGasStationConfigurationResponse>>\
            \ response = fireblocks.gasStations().updateGasStationConfiguration(gasStationConfiguration,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /gas_station/configuration/{assetId}:
    put:
      description: Configures gas station settings for a requested asset.
      operationId: updateGasStationConfigurationByAssetId
      parameters:
      - description: The ID of the asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
          x-fb-entity: asset
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GasStationConfiguration'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditGasStationConfigurationResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Edit gas station settings for an asset
      tags:
      - Gas stations
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<EditGasStationConfigurationResponse>>\
            \ = fireblocks.gasStations.updateGasStationConfigurationByAssetId(gasStationsApiUpdateGasStationConfigurationByAssetIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<EditGasStationConfigurationResponse>>\
            \ response = fireblocks.gasStations().updateGasStationConfigurationByAssetId(gasStationConfiguration,\
            \ assetId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/user_groups:
    get:
      description: |
        Get all user groups in your workspace. </br>

        **Note**:
        - This endpoint is now in Beta, disabled for general availability at this time.
        - Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: getUserGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupsResponse'
          description: List of the user groups in your workspace
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List user groups
      tags:
      - User groups (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UserGroupsResponse>> =\
            \ fireblocks.userGroupsBeta.getUserGroups();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<UserGroupResponse>>> response =
            fireblocks.userGroupsBeta().getUserGroups();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: |
        Create a new user group.</br>

        **Note**:
        - This endpoint is now in Beta, disabled for general availability at this time.
        - Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: createUserGroup
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserGroupResponse'
          description: User group created and pending approval
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create user group
      tags:
      - User groups (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateUserGroupResponse>>\
            \ = fireblocks.userGroupsBeta.createUserGroup(userGroupsBetaApiCreateUserGroupRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateUserGroupResponse>> response\
            \ = fireblocks.userGroupsBeta().createUserGroup(userGroupCreateRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/user_groups/{groupId}:
    delete:
      description: |
        Delete a user group by ID.</br>

        **Note**:
        - This endpoint is now in Beta, disabled for general availability at this time.
        - Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: deleteUserGroup
      parameters:
      - description: The ID of the user group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Request to delete user group submitted for approval
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete user group
      tags:
      - User groups (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.userGroupsBeta.deleteUserGroup(userGroupsBetaApiDeleteUserGroupRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.userGroupsBeta().deleteUserGroup(groupId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: |
        Get a user group by ID.</br>

        **Note**:
        - This endpoint is now in Beta, disabled for general availability at this time.
        - Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: getUserGroup
      parameters:
      - description: The ID of the user group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupResponse'
          description: User group
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get user group
      tags:
      - User groups (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UserGroupResponse>> =\
            \ fireblocks.userGroupsBeta.getUserGroup(userGroupsBetaApiGetUserGroupRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<UserGroupResponse>> response = fireblocks.userGroupsBeta().getUserGroup(groupId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: |
        Update a user group by ID.</br>

        **Note**:
        - This endpoint is now in Beta, disabled for general availability at this time.
        - Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: updateUserGroup
      parameters:
      - description: The ID of the user group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupCreateResponse'
          description: User group updated and the changes are pending approval
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update user group
      tags:
      - User groups (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<UserGroupCreateResponse>>\
            \ = fireblocks.userGroupsBeta.updateUserGroup(userGroupsBetaApiUpdateUserGroupRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<UserGroupCreateResponse>> response\
            \ = fireblocks.userGroupsBeta().updateUserGroup(userGroupUpdateRequest,\
            \ groupId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /users:
    get:
      description: |
        List all users for the workspace.

        Please note that this endpoint is available only for API keys with Admin permissions.
      operationId: getUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: List of users
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List users
      tags:
      - Users
      x-readme:
        code-samples:
        - language: python
          code: users = fireblocks.get_users()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const users = await fireblocks.getUsers();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetUsersResponse>> = fireblocks.users.getUsers();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<UserResponse>>> response = fireblocks.users().getUsers();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /audits:
    get:
      description: Get all audits
      operationId: getAudits
      parameters:
      - description: The last time period to fetch audit logs
        explode: true
        in: query
        name: timePeriod
        required: false
        schema:
          enum:
          - DAY
          - WEEK
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditLogsResponseDTO'
          description: Audit logs from requested time period
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get audit logs
      tags:
      - Audit Logs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetAuditLogsResponseDTO>>\
            \ = fireblocks.auditLogs.getAudits(auditLogsApiGetAuditsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetAuditLogsResponseDTO>> response =
            fireblocks.auditLogs().getAudits(timePeriod);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /management/audit_logs:
    get:
      description: Get all audits
      operationId: getAuditLogs
      parameters:
      - description: The last time period to fetch audit logs
        explode: true
        in: query
        name: timePeriod
        required: false
        schema:
          enum:
          - DAY
          - WEEK
          type: string
        style: form
      - description: The next id to start fetch audit logs from
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditLogsResponse'
          description: Audit logs from requested time period
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get audit logs
      tags:
      - Audit Logs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetAuditLogsResponse>>\
            \ = fireblocks.auditLogs.getAuditLogs(auditLogsApiGetAuditLogsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetAuditLogsResponse>> response = fireblocks.auditLogs().getAuditLogs(timePeriod,\
            \ cursor);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /off_exchange/add:
    post:
      description: "add collateral, create deposit request"
      operationId: addOffExchange
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCollateralRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
          description: A transaction object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: add collateral
      tags:
      - Off exchanges
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateTransactionResponse>>\
            \ = fireblocks.offExchanges.addOffExchange(offExchangesApiAddOffExchangeRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateTransactionResponse>> response\
            \ = fireblocks.offExchanges().addOffExchange(addCollateralRequestBody,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /off_exchange/remove:
    post:
      description: "remove collateral, create withdraw request"
      operationId: removeOffExchange
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCollateralRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTransactionResponse'
          description: A transaction object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: remove collateral
      tags:
      - Off exchanges
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateTransactionResponse>>\
            \ = fireblocks.offExchanges.removeOffExchange(offExchangesApiRemoveOffExchangeRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateTransactionResponse>> response\
            \ = fireblocks.offExchanges().removeOffExchange(removeCollateralRequestBody,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /off_exchange/settlements/trader:
    post:
      description: create settlement for a trader
      operationId: settleOffExchangeTrades
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementRequestBody'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementResponse'
          description: A settlement object
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: create settlement for a trader
      tags:
      - Off exchanges
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SettlementResponse>> =\
            \ fireblocks.offExchanges.settleOffExchangeTrades(offExchangesApiSettleOffExchangeTradesRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SettlementResponse>> response = fireblocks.offExchanges().settleOffExchangeTrades(settlementRequestBody,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /off_exchange/settlements/transactions:
    get:
      description: get settlements transactions from exchange
      operationId: getOffExchangeSettlementTransactions
      parameters:
      - explode: true
        in: query
        name: mainExchangeAccountId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeSettlementTransactionsResponse'
          description: A settlement transactions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: get settlements transactions from exchange
      tags:
      - Off exchanges
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetSettlementResponse>>\
            \ = fireblocks.offExchanges.getOffExchangeSettlementTransactions(offExchangesApiGetOffExchangeSettlementTransactionsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetSettlementResponse>> response = fireblocks.offExchanges().getOffExchangeSettlementTransactions(mainExchangeAccountId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /off_exchange/collateral_accounts/{mainExchangeAccountId}:
    get:
      description: Returns a collateral account by mainExchangeAccountId.
      operationId: getOffExchangeCollateralAccounts
      parameters:
      - description: The id of the main exchange account for which the requested collateral
          account is associated with
        explode: false
        in: path
        name: mainExchangeAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeAccount'
          description: An ExchangeAccount object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Find a specific collateral exchange account
      tags:
      - Off exchanges
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExchangeAccount>> = fireblocks.offExchanges.getOffExchangeCollateralAccounts(offExchangesApiGetOffExchangeCollateralAccountsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ExchangeAccount>> response = fireblocks.offExchanges().getOffExchangeCollateralAccounts(mainExchangeAccountId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /webhooks/resend:
    post:
      description: Resends all failed webhook notifications.
      operationId: resendWebhooks
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendWebhooksResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Resend failed webhooks
      tags:
      - Webhooks
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.resend_webhooks()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.resendWebhooks();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ResendWebhooksResponse>>\
            \ = fireblocks.webhooks.resendWebhooks(webhooksApiResendWebhooksRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ResendWebhooksResponse>> response =
            fireblocks.webhooks().resendWebhooks(idempotencyKey);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /webhooks/resend/{txId}:
    post:
      description: Resends failed webhook notifications for a transaction by ID.
      operationId: resendTransactionWebhooks
      parameters:
      - description: The ID of the transaction for webhooks
        explode: false
        in: path
        name: txId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendTransactionWebhooksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendWebhooksByTransactionIdResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Resend failed webhooks for a transaction by ID
      tags:
      - Webhooks
      x-readme:
        code-samples:
        - language: python
          code: "result = fireblocks.resend_transaction_webhooks_by_id(txId, resend_created,\
            \ resend_status_updated)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const result = await fireblocks.resendTransactionWebhooksById(txId,\
            \ resendCreated, resendStatusUpdated);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ResendWebhooksByTransactionIdResponse>>\
            \ = fireblocks.webhooks.resendTransactionWebhooks(webhooksApiResendTransactionWebhooksRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ResendWebhooksByTransactionIdResponse>>\
            \ response = fireblocks.webhooks().resendTransactionWebhooks(resendTransactionWebhooksRequest,\
            \ txId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tokenization/templates:
    get:
      description: Return minimal representation of all the contract templates available
        for the workspace
      operationId: getContractTemplates
      parameters:
      - description: Items per page (max 100)
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: Paging offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: number
        style: form
      - description: Page cursor to get the next page
        example: MjAyMy0xMi0xMyAyMDozNjowOC4zMDI=:MTEwMA==
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: "Number of items per page, requesting more then max will return\
          \ max items"
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "The type of the contract templates you wish to retrieve. Can\
          \ accept one type, more or none"
        example: FUNGIBLE_TOKEN
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - TOKEN_UTILITY
          type: string
        style: form
      - explode: true
        in: query
        name: initializationPhase
        required: false
        schema:
          enum:
          - ON_DEPLOYMENT
          - POST_DEPLOYMENT
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplatesPaginatedResponse'
          description: List of contract templates was returned successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all contract templates
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: contract_templates = fireblocks.get_contract_templates()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const contractTemplates = await fireblocks.getContractTemplates();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TemplatesPaginatedResponse>>\
            \ = fireblocks.contractTemplates.getContractTemplates(contractTemplatesApiGetContractTemplatesRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TemplatesPaginatedResponse>> response\
            \ = fireblocks.contractTemplates().getContractTemplates(limit, offset,\
            \ pageCursor, pageSize, type, initializationPhase);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Upload a new contract template. This contract template will be
        available for the workspace
      operationId: uploadContractTemplate
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractTemplateDto'
          description: Contract was uploaded successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Upload contract template
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: template = fireblocks.upload_contract_template(upload_request)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const contractTemplate = await fireblocks.uploadContractTemplate(uploadRequest);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ContractTemplateDto>>\
            \ = fireblocks.contractTemplates.uploadContractTemplate(contractTemplatesApiUploadContractTemplateRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ContractTemplateDto>> response = fireblocks.contractTemplates().uploadContractTemplate(contractUploadRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tokenization/templates/{contractTemplateId}:
    delete:
      description: "Delete a contract by id. allowed only for private contract templates.\
        \ Notice: it is irreversible!"
      operationId: deleteContractTemplateById
      parameters:
      - description: The Contract Template identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: contractTemplateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Contract was deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpContractDoesNotExistError'
          description: Could not find contract.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Delete a contract template by id
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: fireblocks.deleteContractTemplate(contract_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: await fireblocks.getContractTemplate(contractId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.contractTemplates.deleteContractTemplateById(contractTemplatesApiDeleteContractTemplateByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.contractTemplates().deleteContractTemplateById(contractTemplateId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Return detailed information about the contract template
      operationId: getContractTemplateById
      parameters:
      - description: The Contract Template identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: contractTemplateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractTemplateDto'
          description: Contract template was returned successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpContractDoesNotExistError'
          description: Could not find contract.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return contract template by id
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: contract_template = fireblocks.get_contract_template(contract_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const contractTemplate = await fireblocks.getContractTemplate(contractId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ContractTemplateDto>>\
            \ = fireblocks.contractTemplates.getContractTemplateById(contractTemplatesApiGetContractTemplateByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ContractTemplateDto>> response = fireblocks.contractTemplates().getContractTemplateById(contractTemplateId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/templates/{contractTemplateId}/constructor:
    get:
      description: Return contract template's constructor ABI
      operationId: getConstructorByContractTemplateId
      parameters:
      - description: The Contract Template identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: contractTemplateId
        required: true
        schema:
          type: string
        style: simple
      - description: true if you want to get the abi with its docs
        explode: true
        in: query
        name: withDocs
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbiFunction'
          description: Contract template's constructor ABI was returned successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpContractDoesNotExistError'
          description: Could not find contract.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return contract template's constructor
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: contract_constructor_abi = fireblocks.get_contract_template_constructor(contract_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const contractConstructorAbi = await fireblocks.getContractTemplateConstructor(contractId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<AbiFunction>> = fireblocks.contractTemplates.getConstructorByContractTemplateId(contractTemplatesApiGetConstructorByContractTemplateIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<AbiFunction>> response = fireblocks.contractTemplates().getConstructorByContractTemplateId(contractTemplateId,\
            \ withDocs);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/templates/{contractTemplateId}/function:
    get:
      description: Return contract template`s function ABI by signature
      operationId: getFunctionAbiByContractTemplateId
      parameters:
      - description: The Contract Template identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: contractTemplateId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: functionSignature
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbiFunction'
          description: Contract template`s function ABI was returned successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpContractDoesNotExistError'
          description: Could not find contract.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return contract template's function
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<AbiFunction>> = fireblocks.contractTemplates.getFunctionAbiByContractTemplateId(contractTemplatesApiGetFunctionAbiByContractTemplateIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<AbiFunction>> response = fireblocks.contractTemplates().getFunctionAbiByContractTemplateId(contractTemplateId,\
            \ functionSignature);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/templates/{contractTemplateId}/deploy:
    post:
      description: "Deploy a new contract by contract template id. If you wish to\
        \ deploy a token (ERC20, ERC721 etc), and create asset please use POST /tokenization"
      operationId: deployContract
      parameters:
      - description: The Contract Template identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: contractTemplateId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDeployRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractDeployResponse'
          description: Contract was deployed successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpContractDoesNotExistError'
          description: Could not find contract.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Deploy contract
      tags:
      - Contract Templates
      x-readme:
        code-samples:
        - language: python
          code: "response = fireblocks.deploy_contract(contract_id, contract_deploy_request)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const { txId } = await fireblocks.deployContract(contractId, contractDeployRequest);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ContractDeployResponse>>\
            \ = fireblocks.contractTemplates.deployContract(contractTemplatesApiDeployContractRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ContractDeployResponse>> response =\
            \ fireblocks.contractTemplates().deployContract(contractDeployRequest,\
            \ contractTemplateId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tokenization/contracts:
    get:
      description: Return a filtered lean representation of the deployed contracts
        data on all blockchains (paginated)
      operationId: getDeployedContracts
      parameters:
      - description: Page cursor to get the next page
        example: MjAyMy0xMi0xMyAyMDozNjowOC4zMDI=:MTEwMA==
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: "Number of items per page, requesting more then max will return\
          \ max items"
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: The contract's onchain address
        example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        explode: true
        in: query
        name: contractAddress
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: templateId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedContractsPaginatedResponse'
          description: Deployed contracts fetched successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List deployed contracts data
      tags:
      - Deployed Contracts
      x-readme:
        code-samples:
        - language: python
          code: deployed_contracts = fireblocks.get_contracts_by_filter(template_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const deployedContracts = await fireblocks.getContractsByFilter(templateId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DeployedContractsPaginatedResponse>>\
            \ = fireblocks.deployedContracts.getDeployedContracts(deployedContractsApiGetDeployedContractsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DeployedContractsPaginatedResponse>>\
            \ response = fireblocks.deployedContracts().getDeployedContracts(pageCursor,\
            \ pageSize, contractAddress, assetId, templateId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/contracts/{id}:
    get:
      description: Return deployed contract data by id
      operationId: getDeployedContractById
      parameters:
      - description: The deployed contract data identifier
        example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedContractResponseDto'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return deployed contract data by id
      tags:
      - Deployed Contracts
      x-readme:
        code-samples:
        - language: python
          code: deployed_contracts = fireblocks.get_contract_by_id(contract_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const deployedContracts = await fireblocks.getContractById(contractId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DeployedContractResponseDto>>\
            \ = fireblocks.deployedContracts.getDeployedContractById(deployedContractsApiGetDeployedContractByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DeployedContractResponseDto>> response
            = fireblocks.deployedContracts().getDeployedContractById(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/contracts/{assetId}/{contractAddress}:
    get:
      description: Return deployed contract data by blockchain native asset id and
        contract address
      operationId: getDeployedContractByAddress
      parameters:
      - description: The contract's onchain address
        example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedContractResponseDto'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return deployed contract data
      tags:
      - Deployed Contracts
      x-readme:
        code-samples:
        - language: python
          code: "deployed_contract = fireblocks.get_contract_by_address(base_asset_id,\
            \ contract_address)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const deployedContract = await fireblocks.getContractByAddress(baseAssetId,\
            \ contractAddress);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DeployedContractResponseDto>>\
            \ = fireblocks.deployedContracts.getDeployedContractByAddress(deployedContractsApiGetDeployedContractByAddressRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DeployedContractResponseDto>> response\
            \ = fireblocks.deployedContracts().getDeployedContractByAddress(contractAddress,\
            \ assetId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tokenization/tokens:
    get:
      description: Return all linked tokens (paginated)
      operationId: getLinkedTokens
      parameters:
      - description: Page cursor to get the next page
        example: MjAyMy0xMi0xMyAyMDozNjowOC4zMDI=:MTEwMA==
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: "Number of items per page, requesting more then max will return\
          \ max items"
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: A comma separated list of statuses to filter. Default is "COMPLETED"
        example: COMPLETED
        explode: true
        in: query
        name: status
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensPaginatedResponse'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all linked tokens
      tags:
      - Tokenization
      x-readme:
        code-samples:
        - language: python
          code: linked_tokens = fireblocks.get_linked_tokens(payload)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const linkedTokens = await fireblocks.getLinkedTokens(payload);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TokensPaginatedResponse>>\
            \ = fireblocks.tokenization.getLinkedTokens(tokenizationApiGetLinkedTokensRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TokensPaginatedResponse>> response\
            \ = fireblocks.tokenization().getLinkedTokens(pageCursor, pageSize, status);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: "Facilitates the creation of a new token, supporting both EVM-based\
        \ and Stellar/Ripple platforms. For EVM, it deploys the corresponding contract\
        \ template to the blockchain and links the token to the workspace. For Stellar/Ripple,\
        \ it links a newly created token directly to the workspace without deploying\
        \ a contract. Returns the token link with status \"PENDING\" until the token\
        \ is deployed or \"SUCCESS\" if no deployment is needed."
      operationId: issueNewToken
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLinkDto'
          description: Token was created successfully
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAlreadyExistHttpError'
          description: Asset already exists
      summary: Issue a new token
      tags:
      - Tokenization
      x-readme:
        code-samples:
        - language: python
          code: token = fireblocks.issue_new_token(payload)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const token = await fireblocks.issueNewToken(payload);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TokenLinkDto>> = fireblocks.tokenization.issueNewToken(tokenizationApiIssueNewTokenRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TokenLinkDto>> response = fireblocks.tokenization().issueNewToken(createTokenRequestDto,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tokenization/tokens/link:
    post:
      description: "Link an already existing token (by assetId, collectionId or contractId\
        \ as refId) to a workspace across EVM, Stellar, or Ripple platforms. The token\
        \ will be linked to the workspace if it does not already exist."
      operationId: link
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenLinkRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLinkDto'
          description: Token linked successfully
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLinkDto'
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDoesNotExistHttpError'
          description: Could not find the underlying token identifier (refId) to link
            the token to
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLinkExistsHttpError'
          description: "Token link for {refId} already exists"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Link a token
      tags:
      - Tokenization
      x-readme:
        code-samples:
        - language: python
          code: "token = fireblocks.link_token(\"FUNGIBLE_TOKEN\", ref_id)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const token = await fireblocks.linkToken(\"FUNGIBLE_TOKEN\", refId);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TokenLinkDto>> = fireblocks.tokenization.link(tokenizationApiLinkRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TokenLinkDto>> response = fireblocks.tokenization().link(tokenLinkRequestDto,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tokenization/tokens/{id}:
    delete:
      description: "Unlink a token. The token will be unlinked from the workspace.\
        \ The token will not be deleted on chain nor the refId, only the link to the\
        \ workspace will be removed."
      operationId: unlink
      parameters:
      - description: The token link id
        example: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Token unlinked successfully
        "204":
          content: {}
          description: ""
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
          description: Link did not exist
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Unlink a token
      tags:
      - Tokenization
      x-readme:
        code-samples:
        - language: python
          code: token = fireblocks.unlink_token(token_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const token = await fireblocks.unlinkToken(tokenId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.tokenization.unlink(tokenizationApiUnlinkRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.tokenization().unlink(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: "Return a linked token, with its status and metadata."
      operationId: getLinkedToken
      parameters:
      - description: The token link id
        example: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenLinkDto'
          description: Token fetched successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return a linked token
      tags:
      - Tokenization
      x-readme:
        code-samples:
        - language: python
          code: token = fireblocks.get_linked_token(token_id)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const token = await fireblocks.getLinkedToken(tokenId);
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TokenLinkDto>> = fireblocks.tokenization.getLinkedToken(tokenizationApiGetLinkedTokenRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<TokenLinkDto>> response = fireblocks.tokenization().getLinkedToken(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /contract_interactions/base_asset_id/{assetId}/contract_address/{contractAddress}/functions:
    get:
      description: Return deployed contract's ABI by blockchain native asset id and
        contract address
      operationId: getDeployedContractAbi
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      - description: The contract's onchain address
        example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractAbiResponseDto'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return deployed contract's ABI
      tags:
      - Contract Interactions
      x-readme:
        code-samples:
        - language: python
          code: "deployed_contract_abi = fireblocks.get_contracts_abi(base_asset_id,\
            \ contract_address)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const deployedContractAbi = await fireblocks.getContractAbi(baseAssetId,\
            \ contractAddress);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ContractAbiResponseDto>>\
            \ = fireblocks.contractInteractions.getDeployedContractAbi(contractInteractionsApiGetDeployedContractAbiRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ContractAbiResponseDto>> response =\
            \ fireblocks.contractInteractions().getDeployedContractAbi(contractAddress,\
            \ assetId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /contract_interactions/base_asset_id/{assetId}/contract_address/{contractAddress}/functions/read:
    post:
      description: Call a read function on a deployed contract by blockchain native
        asset id and contract address
      operationId: readCallFunction
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      - description: The contract's onchain address
        example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadCallFunctionDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterWithValueList'
          description: Read Call Retrieved Successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Call a read function on a deployed contract
      tags:
      - Contract Interactions
      x-readme:
        code-samples:
        - language: python
          code: "read_response = fireblocks.read_contract_call_function(base_asset_id,\
            \ contract_address, payload)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const readResponse= await fireblocks.readContractCallFunction(baseAssetId,\
            \ contractAddress, payload);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ParameterWithValueList>>\
            \ = fireblocks.contractInteractions.readCallFunction(contractInteractionsApiReadCallFunctionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<ParameterWithValue>>> response\
            \ = fireblocks.contractInteractions().readCallFunction(readCallFunctionDto,\
            \ contractAddress, assetId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /contract_interactions/base_asset_id/{assetId}/contract_address/{contractAddress}/functions/write:
    post:
      description: "Call a write function on a deployed contract by blockchain native\
        \ asset id and contract address. This creates an onchain transaction, thus\
        \ it is an async operation. It returns a transaction id that can be polled\
        \ for status check"
      operationId: writeCallFunction
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      - description: The contract's onchain address
        example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        explode: false
        in: path
        name: contractAddress
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteCallFunctionDto'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteCallFunctionResponseDto'
          description: ""
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Call a write function on a deployed contract
      tags:
      - Contract Interactions
      x-readme:
        code-samples:
        - language: python
          code: "write_function_response = fireblocks.write_contract_call_function(base_asset_id,\
            \ contract_address, payload)"
          name: Fireblocks SDK Python example
        - language: javascript
          code: "const writeFunctionResponse = await fireblocks.writeContractCallFunction(baseAssetId,\
            \ contractAddress, payload);"
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<WriteCallFunctionResponseDto>>\
            \ = fireblocks.contractInteractions.writeCallFunction(contractInteractionsApiWriteCallFunctionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<WriteCallFunctionResponseDto>> response\
            \ = fireblocks.contractInteractions().writeCallFunction(writeCallFunctionDto,\
            \ contractAddress, assetId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /staking/chains:
    get:
      description: Return an alphabetical list of supported chains.
      operationId: getChains
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
              - ETH
              - SOL
              schema:
                $ref: '#/components/schemas/StakingGetChainsResponse'
          description: ""
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<StakingGetChainsResponse>>\
            \ = fireblocks.stakingBeta.getChains();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<String>>> response = fireblocks.stakingBeta().getChains();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/chains/{chainDescriptor}/chainInfo:
    get:
      description: "Return chain-specific, staking-related information summary (e.g.\
        \ epoch details, lockup durations, estimated rewards, etc.)"
      operationId: getChainInfo
      parameters:
      - description: The protocol identifier (e.g. "ETH"/"SOL") to use
        explode: false
        in: path
        name: chainDescriptor
        required: true
        schema:
          enum:
          - ETH
          - SOL
          - ETH_TEST3
          - SOL_TEST
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainInfoResponseDto'
          description: Chain specific info summary was returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ChainInfoResponseDto>>\
            \ = fireblocks.stakingBeta.getChainInfo(stakingBetaApiGetChainInfoRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ChainInfoResponseDto>> response = fireblocks.stakingBeta().getChainInfo(chainDescriptor);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/chains/{chainDescriptor}/{actionId}:
    post:
      description: "Perform a chain-specific staking action (e.g. stake, unstake,\
        \ withdraw)."
      operationId: executeAction
      parameters:
      - description: The protocol identifier (e.g. "ETH"/"SOL") to use
        explode: false
        in: path
        name: chainDescriptor
        required: true
        schema:
          enum:
          - ETH
          - SOL
          - ETH_TEST3
          - SOL_TEST
          type: string
        style: simple
      - description: The operation that can be executed on a vault/position
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          enum:
          - stake
          - unstake
          - withdraw
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              stake:
                value:
                  vaultAccountId: "22"
                  providerId: kiln
                  stakeAmount: "32"
                  chainDescriptor: ETH
                  txNote: stake request id CcaHc2L43ZWjwCHART3oZoJvHLAe9hzT2DJNUpBzoTN1
                    of 32ETH created on 02.04.23
                  feeLevel: MEDIUM
              unstake:
                value:
                  id: b70701f4-d7b1-4795-a8ee-b09cdb5b850b
                  txNote: "unstake request id b70701f4-d7b1-4795-a8ee-b09cdb5b850d\
                    \ #ETH"
                  feeLevel: MEDIUM
              withdraw:
                value:
                  id: b70701f4-d7b1-4795-a8ee-b09cdb5b850c
                  txNote: "withdraw request id b70701f4-d7b1-4795-a8ee-b09cdb5b850d\
                    \ #ETH"
                  feeLevel: MEDIUM
            schema:
              $ref: '#/components/schemas/ExecuteActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                stake:
                  value:
                    id: afedfd2e4-e3c9-4b70-90d6-eb0f74bfd4sd8
                unstake:
                  value: {}
                withdraw:
                  value: {}
              schema:
                $ref: '#/components/schemas/ExecuteActionResponse'
          description: A chain-specific action has been executed successfully on vault/position
            and is associated with 201 status code.
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ExecuteActionResponse>>\
            \ = fireblocks.stakingBeta.executeAction(stakingBetaApiExecuteActionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ExecuteActionResponse>> response =\
            \ fireblocks.stakingBeta().executeAction(executeActionRequest, chainDescriptor,\
            \ actionId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /staking/positions:
    get:
      description: "Return detailed information on all staking positions, including\
        \ the staked amount, rewards, status and more."
      operationId: getAllDelegations
      parameters:
      - description: Use "ETH" / "SOL" in order to obtain information related to the
          specific blockchain network or retrieve information about all chains that
          have data available by providing no argument.
        explode: true
        in: query
        name: chainDescriptor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingGetAllDelegationsResponse'
          description: An array of position data was returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<StakingGetAllDelegationsResponse>>\
            \ = fireblocks.stakingBeta.getAllDelegations(stakingBetaApiGetAllDelegationsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<DelegationDto>>> response = fireblocks.stakingBeta().getAllDelegations(chainDescriptor);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/positions/summary:
    get:
      description: "Return a summary of all vaults, categorized by their status (active,\
        \ inactive), the total amounts staked and total rewards per-chain."
      operationId: getSummary
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
                active:
                - chainDescriptor: ETH
                  amount: "64.036604667"
                - chainDescriptor: SOL
                  amount: "0.077345939"
                inactive:
                - chainDescriptor: ETH
                  amount: "0"
                - chainDescriptor: SOL
                  amount: "0"
                rewardsAmount:
                - chainDescriptor: ETH
                  amount: "0.036604667"
                - chainDescriptor: SOL
                  amount: "0.001345939"
                totalStaked:
                - chainDescriptor: ETH
                  amount: "64.036604667"
                - chainDescriptor: SOL
                  amount: "0.077345939"
              schema:
                $ref: '#/components/schemas/DelegationSummaryDto'
          description: A summary for all vaults were returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DelegationSummaryDto>>\
            \ = fireblocks.stakingBeta.getSummary();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DelegationSummaryDto>> response = fireblocks.stakingBeta().getSummary();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/positions/summary/vaults:
    get:
      description: "Return a summary for each vault, categorized by their status (active,\
        \ inactive), the total amounts staked and total rewards per-chain."
      operationId: getSummaryByVault
      parameters: []
      responses:
        "200":
          content:
            application/json:
              example:
                "0":
                  active:
                  - chainDescriptor: SOL
                    amount: "0.015202376"
                  inactive:
                  - chainDescriptor: SOL
                    amount: "0"
                  rewardsAmount:
                  - chainDescriptor: SOL
                    amount: "0.000202376"
                  totalStaked:
                  - chainDescriptor: SOL
                    amount: "0.015202376"
                "1":
                  active:
                  - chainDescriptor: ETH
                    amount: "64.036604667"
                  - chainDescriptor: SOL
                    amount: "0.011191566"
                  inactive:
                  - chainDescriptor: ETH
                    amount: "0"
                  - chainDescriptor: SOL
                    amount: "0"
                  rewardsAmount:
                  - chainDescriptor: ETH
                    amount: "0.036604667"
                  - chainDescriptor: SOL
                    amount: "0.000191566"
                  totalStaked:
                  - chainDescriptor: ETH
                    amount: "64.036604667"
                  - chainDescriptor: SOL
                    amount: "0.011191566"
              schema:
                $ref: '#/components/schemas/StakingGetSummaryByVaultResponse'
          description: A summary for each vault were returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<StakingGetSummaryByVaultResponse>>\
            \ = fireblocks.stakingBeta.getSummaryByVault();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<StakingGetSummaryByVaultResponse>> response
            = fireblocks.stakingBeta().getSummaryByVault();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/positions/{id}:
    get:
      description: "Return detailed information on a staking position, including the\
        \ staked amount, rewards, status and more."
      operationId: getDelegationById
      parameters:
      - description: The unique identifier of the staking position
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationDto'
          description: Position data was returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DelegationDto>> = fireblocks.stakingBeta.getDelegationById(stakingBetaApiGetDelegationByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DelegationDto>> response = fireblocks.stakingBeta().getDelegationById(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/providers:
    get:
      description: Return information on all the available staking providers.
      operationId: getProviders
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingGetProvidersResponse'
          description: An array of supported providers was returned successfully
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<StakingGetProvidersResponse>>\
            \ = fireblocks.stakingBeta.getProviders();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<ProviderDto>>> response = fireblocks.stakingBeta().getProviders();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /staking/providers/{providerId}/approveTermsOfService:
    post:
      description: |-
        Approve the terms of service of the staking provider.
        This must be called before performing a staking action for the first time with this provider.
      operationId: approveTermsOfServiceByProviderId
      parameters:
      - description: The unique identifier of the staking provider
        explode: false
        in: path
        name: providerId
        required: true
        schema:
          enum:
          - kiln
          - figment
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersResponseDto'
          description: The terms of service have been successfully approved and is
            associated with 201 status code.
      summary: ""
      tags:
      - Staking (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ProvidersResponseDto>>\
            \ = fireblocks.stakingBeta.approveTermsOfServiceByProviderId(stakingBetaApiApproveTermsOfServiceByProviderIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ProvidersResponseDto>> response = fireblocks.stakingBeta().approveTermsOfServiceByProviderId(providerId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /admin_quorum:
    put:
      description: Update admin quorum threshold
      operationId: setAdminQuorumThreshold
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAdminQuorumThresholdRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAdminQuorumThresholdResponse'
          description: OK
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update admin quorum threshold
      tags:
      - Admin Quorum
      x-internal: true
      x-readme:
        code-samples:
        - language: python
          code: result = fireblocks.set_admin_quorum_threshold(adminQuorumThreshold)
          name: Fireblocks SDK Python example
        - language: javascript
          code: const result = await fireblocks.setAdminQuorumThreshold(adminQuorumThreshold)
          name: Fireblocks SDK Javascript example
      x-content-type: application/json
      x-accepts: application/json
  /nfts/ownership/tokens:
    get:
      description: |
        Returns all tokens and their data in your workspace.
      operationId: getOwnershipTokens
      parameters:
      - description: Blockchain descriptor filter
        explode: true
        in: query
        name: blockchainDescriptor
        required: false
        schema:
          enum:
          - ETH
          - ETH_TEST3
          - ETH_TEST5
          - ETH_TEST6
          - POLYGON
          - POLYGON_TEST_MUMBAI
          - AMOY_POLYGON_TEST
          - XTZ
          - XTZ_TEST
          - BASECHAIN_ETH
          type: string
        style: form
      - description: A comma separated list of Vault Account IDs. Up to 100 are allowed
          in a single request.  This field will be ignored when walletType=END_USER_WALLET
          or ncwId is provided.
        explode: true
        in: query
        name: vaultAccountIds
        required: false
        schema:
          type: string
        style: form
      - description: Tenant's Non-Custodial Wallet ID
        explode: true
        in: query
        name: ncwId
        required: false
        schema:
          type: string
        style: form
      - description: A comma separated list of Non-Custodial account IDs. Up to 100
          are allowed in a single request. This field will be ignored when walletType=VAULT_ACCOUNT
          or ncwId is not provided.
        explode: true
        in: query
        name: ncwAccountIds
        required: false
        schema:
          type: string
        style: form
      - description: "Wallet type, it can be `VAULT_ACCOUNT` or `END_USER_WALLET`"
        explode: true
        in: query
        name: walletType
        required: false
        schema:
          default: VAULT_ACCOUNT
          enum:
          - VAULT_ACCOUNT
          - END_USER_WALLET
          type: string
        style: form
      - description: A comma separated list of NFT IDs. Up to 100 are allowed in a
          single request.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          type: string
        style: form
      - description: A comma separated list of collection IDs. Up to 100 are allowed
          in a single request.
        explode: true
        in: query
        name: collectionIds
        required: false
        schema:
          type: string
        style: form
      - description: Page cursor to fetch
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Items per page (max 100)
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "Sort by param, it can be one param or a list of params separated\
          \ by comma"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            enum:
            - ownershipLastUpdateTime
            - name
            - collection.name
            - blockchainDescriptor
            type: string
          type: array
        style: form
      - description: "Order direction, it can be `ASC` for ascending or `DESC` for\
          \ descending"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: Token ownership status
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: LISTED
          enum:
          - LISTED
          - ARCHIVED
          type: string
        style: form
      - description: "Search owned tokens and their collections. Possible criteria\
          \ for search:  token name and id within the contract/collection, collection\
          \ name, blockchain descriptor and name."
        explode: true
        in: query
        name: search
        required: false
        schema:
          maximum: 100
          type: string
        style: form
      - description: Token ownership spam status.
        explode: true
        in: query
        name: spam
        required: false
        schema:
          enum:
          - "true"
          - "false"
          - all
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOwnershipTokensResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all owned tokens (paginated)
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetOwnershipTokensResponse>>\
            \ = fireblocks.nFTs.getOwnershipTokens(nFTsApiGetOwnershipTokensRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetOwnershipTokensResponse>> response\
            \ = fireblocks.nFTs().getOwnershipTokens(blockchainDescriptor, vaultAccountIds,\
            \ ncwId, ncwAccountIds, walletType, ids, collectionIds, pageCursor, pageSize,\
            \ sort, order, status, search, spam);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: |
        Updates all tokens and balances per blockchain and vault account.
      operationId: updateOwnershipTokens
      parameters:
      - description: Blockchain descriptor filter
        explode: true
        in: query
        name: blockchainDescriptor
        required: true
        schema:
          enum:
          - ETH
          - ETH_TEST3
          - ETH_TEST5
          - ETH_TEST6
          - POLYGON
          - POLYGON_TEST_MUMBAI
          - AMOY_POLYGON_TEST
          - BASECHAIN_ETH
          type: string
        style: form
      - description: Vault account filter
        explode: true
        in: query
        name: vaultAccountId
        required: true
        schema:
          type: string
        style: form
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Refresh vault account tokens
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.nFTs.updateOwnershipTokens(nFTsApiUpdateOwnershipTokensRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.nFTs().updateOwnershipTokens(blockchainDescriptor,\
            \ vaultAccountId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /nfts/ownership/assets:
    get:
      description: |
        Returns all owned distinct tokens (for your tenant) and their data in your workspace.
      operationId: listOwnedTokens
      parameters:
      - description: Tenant's Non-Custodial Wallet ID
        explode: true
        in: query
        name: ncwId
        required: false
        schema:
          type: string
        style: form
      - description: "Wallet type, it can be `VAULT_ACCOUNT` or `END_USER_WALLET`"
        explode: true
        in: query
        name: walletType
        required: false
        schema:
          default: VAULT_ACCOUNT
          enum:
          - VAULT_ACCOUNT
          - END_USER_WALLET
          type: string
        style: form
      - description: Page cursor to fetch
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Items per page (max 100)
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "Sort by param, it can be one param or a list of params separated\
          \ by comma"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            enum:
            - name
            type: string
          type: array
        style: form
      - description: "Order direction, it can be `ASC` for ascending or `DESC` for\
          \ descending"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: Token ownership status
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: LISTED
          enum:
          - LISTED
          - ARCHIVED
          type: string
        style: form
      - description: Search owned tokens by token name
        explode: true
        in: query
        name: search
        required: false
        schema:
          maximum: 100
          type: string
        style: form
      - description: Token ownership spam status.
        explode: true
        in: query
        name: spam
        required: false
        schema:
          enum:
          - "true"
          - "false"
          - all
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOwnedTokensResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all distinct owned tokens (paginated)
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ListOwnedTokensResponse>>\
            \ = fireblocks.nFTs.listOwnedTokens(nFTsApiListOwnedTokensRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ListOwnedTokensResponse>> response\
            \ = fireblocks.nFTs().listOwnedTokens(ncwId, walletType, pageCursor, pageSize,\
            \ sort, order, status, search, spam);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /nfts/ownership/collections:
    get:
      description: |
        Returns all collections in your workspace
      operationId: listOwnedCollections
      parameters:
      - description: Tenant's Non-Custodial Wallet ID
        explode: true
        in: query
        name: ncwId
        required: false
        schema:
          type: string
        style: form
      - description: "Wallet type, it can be `VAULT_ACCOUNT` or `END_USER_WALLET`"
        explode: true
        in: query
        name: walletType
        required: false
        schema:
          default: VAULT_ACCOUNT
          enum:
          - VAULT_ACCOUNT
          - END_USER_WALLET
          type: string
        style: form
      - description: "Search owned collections. Possible criteria for search: collection\
          \ name, collection contract address."
        explode: true
        in: query
        name: search
        required: false
        schema:
          maximum: 100
          type: string
        style: form
      - description: Page cursor to fetch
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Items per page (max 100)
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "Sort by param, it can be one param or a list of params separated\
          \ by comma"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            enum:
            - name
            type: string
          type: array
        style: form
      - description: "Order direction, it can be `ASC` for ascending or `DESC` for\
          \ descending"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      - description: Token ownership status
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: LISTED
          enum:
          - LISTED
          - ARCHIVED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOwnedCollectionsResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List owned collections (paginated)
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ListOwnedCollectionsResponse>>\
            \ = fireblocks.nFTs.listOwnedCollections(nFTsApiListOwnedCollectionsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ListOwnedCollectionsResponse>> response\
            \ = fireblocks.nFTs().listOwnedCollections(ncwId, walletType, search,\
            \ pageCursor, pageSize, sort, order, status);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /nfts/tokens/{id}:
    get:
      description: |
        Returns the requested token data.
      operationId: getNFT
      parameters:
      - description: NFT ID
        example: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List token data by ID
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TokenResponse>> = fireblocks.nFTs.getNFT(nFTsApiGetNFTRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<TokenResponse>> response = fireblocks.nFTs().getNFT(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: |
        Updates the latest token metadata.
      operationId: refreshNFTMetadata
      parameters:
      - description: NFT ID
        example: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Refresh token metadata
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.nFTs.refreshNFTMetadata(nFTsApiRefreshNFTMetadataRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.nFTs().refreshNFTMetadata(id,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /nfts/tokens:
    get:
      description: |
        Returns the requested tokens data.
      operationId: getNFTs
      parameters:
      - description: A comma separated list of NFT IDs. Up to 100 are allowed in a
          single request.
        explode: true
        in: query
        name: ids
        required: true
        schema:
          type: string
        style: form
      - description: Page cursor to fetch
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Items per page (max 100)
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: number
        style: form
      - description: "Sort by param, it can be one param or a list of params separated\
          \ by comma"
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            enum:
            - collection.name
            - name
            - blockchainDescriptor
            type: string
          type: array
        style: form
      - description: "Order direction, it can be `ASC` for ascending or `DESC` for\
          \ descending"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - DESC
          - ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNFTsResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List tokens by IDs
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetNFTsResponse>> = fireblocks.nFTs.getNFTs(nFTsApiGetNFTsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetNFTsResponse>> response = fireblocks.nFTs().getNFTs(ids,\
            \ pageCursor, pageSize, sort, order);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /nfts/ownership/tokens/{id}/status:
    put:
      description: |
        Updates token status for a tenant, in all tenant vaults.
      operationId: updateTokenOwnershipStatus
      parameters:
      - description: NFT ID
        example: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenOwnershipStatusDto'
        required: true
      responses:
        "200":
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update token ownership status
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.nFTs.updateTokenOwnershipStatus(nFTsApiUpdateTokenOwnershipStatusRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.nFTs().updateTokenOwnershipStatus(updateTokenOwnershipStatusDto,\
            \ id, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /nfts/ownership/tokens/status:
    put:
      description: "Updates tokens status for a tenant, in all tenant vaults."
      operationId: updateTokensOwnershipStatus
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokensOwnershipStatusRequest'
        required: true
      responses:
        "200":
          description: All token statuses have been updated
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Invalid data sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "404":
          description: When ownership for token ID is not found
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update tokens ownership status
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.nFTs.updateTokensOwnershipStatus(nFTsApiUpdateTokensOwnershipStatusRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.nFTs().updateTokensOwnershipStatus(tokenOwnershipStatusUpdatePayload,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /nfts/ownership/tokens/spam:
    put:
      description: "Updates tokens spam property for a tenant's token ownerships,\
        \ in all tenant vaults."
      operationId: updateTokensOwnershipSpam
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokensOwnershipSpamRequest'
        required: true
      responses:
        "200":
          description: All token spam properties have been updated
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Invalid data sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "404":
          description: When ownership for token ID is not found
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update tokens ownership spam property
      tags:
      - NFTs
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.nFTs.updateTokensOwnershipSpam(nFTsApiUpdateTokensOwnershipSpamRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.nFTs().updateTokensOwnershipSpam(tokenOwnershipSpamUpdatePayload,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /connections:
    get:
      description: Get open Web3 connections.
      operationId: get
      parameters:
      - description: List order; ascending or descending.
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: ASC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Parsed filter object
        examples:
          object:
            description: ""
            summary: The filter object
            value:
              id: string
              userId: string
              vaultAccountId: number
              connectionMethod: string
              feeLevel: string
              appUrl: string
              appName: string
          stringified:
            description: |-
              About stringified parsed objects:

              * Each key-value pair is separated by '=', and each pair is separated by ',' (you can use [`qs`](https://www.npmjs.com/package/qs) package for this)
            summary: The stringified parsed object
            value: "id=string,userId=string,vaultAccountId=number,connectionMethod=string,feeLevel=string,appUrl=string,appName=string"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/get_filter_parameter'
        style: form
      - description: Property to sort Web3 connections by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: createdAt
          enum:
          - id
          - userId
          - vaultAccountId
          - createdAt
          - feeLevel
          - appUrl
          - appName
          type: string
        style: form
      - description: Amount of results to return in the next page.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          maximum: 50
          type: number
        style: form
      - description: Cursor to the next page
        explode: true
        in: query
        name: next
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionsResponse'
          description: ""
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Query parameters were invalid
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "500":
          description: Something went wrong
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: List all open Web3 connections.
      tags:
      - Web3 connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetConnectionsResponse>>\
            \ = fireblocks.web3Connections.get(web3ConnectionsApiGetRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<GetConnectionsResponse>> response =\
            \ fireblocks.web3Connections().get(order, filter, sort, pageSize, next);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /connections/wc:
    post:
      description: |-
        Initiate a new Web3 connection.

        * Note: After this succeeds, make a request to `PUT /v1/connections/wc/{id}` (below) to approve or reject the new Web3 connection.
      operationId: create
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConnectionResponse'
          description: Web3 connection initiated successfully
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Invalid data sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "500":
          description: Something went wrong
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create a new Web3 connection.
      tags:
      - Web3 connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CreateConnectionResponse>>\
            \ = fireblocks.web3Connections.create(web3ConnectionsApiCreateRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CreateConnectionResponse>> response\
            \ = fireblocks.web3Connections().create(createConnectionRequest, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /connections/wc/{id}:
    delete:
      description: Remove a Web3 connection
      operationId: remove
      parameters:
      - description: The ID of the existing Web3 connection to remove.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Connection removed successfully
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "404":
          description: Connection not found
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "500":
          description: Something went wrong
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Remove an existing Web3 connection.
      tags:
      - Web3 connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.web3Connections.remove(web3ConnectionsApiRemoveRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Void>> response = fireblocks.web3Connections().remove(id);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: |-
        Submit a response to *approve* or *reject* an initiated Web3 connection.
        * Note: This call is used to complete your `POST /v1/connections/wc/` request.

        After this succeeds, your new Web3 connection is created and functioning.
      operationId: submit
      parameters:
      - description: The ID of the initiated Web3 connection to approve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RespondToConnectionRequest'
        required: true
      responses:
        "200":
          description: Connection submitted successfully
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Invalid data sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "404":
          description: Connection not found
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "500":
          description: Something went wrong
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Respond to a pending Web3 connection request.
      tags:
      - Web3 connections
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.web3Connections.submit(web3ConnectionsApiSubmitRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.web3Connections().submit(respondToConnectionRequest,\
            \ id, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /screening/travel_rule/transaction/validate:
    post:
      description: |-
        Validate Travel Rule transactions.

        Checks what beneficiary VASP details are required by your jurisdiction and the beneficiary's jurisdiction.

        **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren't yet generally available.

        To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      operationId: validateTravelRuleTransaction
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelRuleValidateTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelRuleValidateTransactionResponse'
          description: Transaction validated successfully
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Validate Travel Rule Transaction
      tags:
      - Travel Rule (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TravelRuleValidateTransactionResponse>>\
            \ = fireblocks.travelRuleBeta.validateTravelRuleTransaction(travelRuleBetaApiValidateTravelRuleTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TravelRuleValidateTransactionResponse>>\
            \ response = fireblocks.travelRuleBeta().validateTravelRuleTransaction(travelRuleValidateTransactionRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /screening/travel_rule/transaction/validate/full:
    post:
      description: |-
        Validate Full Travel Rule transactions.

        Checks for all required information on the originator and beneficiary VASPs.

        **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren't yet generally available.

        To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      operationId: validateFullTravelRuleTransaction
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelRuleValidateFullTransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelRuleValidateTransactionResponse'
          description: Transaction validated successfully
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Validate Full Travel Rule Transaction
      tags:
      - Travel Rule (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TravelRuleValidateTransactionResponse>>\
            \ = fireblocks.travelRuleBeta.validateFullTravelRuleTransaction(travelRuleBetaApiValidateFullTravelRuleTransactionRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TravelRuleValidateTransactionResponse>>\
            \ response = fireblocks.travelRuleBeta().validateFullTravelRuleTransaction(travelRuleValidateFullTransactionRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /screening/travel_rule/vasp/{did}:
    get:
      description: |-
        Get VASP Details.

        Returns information about a VASP that has the specified DID.

        **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren't yet generally available.

        To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      operationId: getVASPByDID
      parameters:
      - explode: false
        in: path
        name: did
        required: true
        schema:
          type: string
        style: simple
      - description: "CSV of fields to return (all, \"blank\" or see list of all field\
          \ names below)"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelRuleVASP'
          description: Transaction validated successfully
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Get VASP details
      tags:
      - Travel Rule (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TravelRuleVASP>> = fireblocks.travelRuleBeta.getVASPByDID(travelRuleBetaApiGetVASPByDIDRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TravelRuleVASP>> response = fireblocks.travelRuleBeta().getVASPByDID(did,\
            \ fields);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/travel_rule/vasp:
    get:
      description: |-
        Get All VASPs.

        Returns a list of VASPs. VASPs can be searched and sorted and results are paginated.

        **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren't yet generally available.

        To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      operationId: getVASPs
      parameters:
      - description: Field to order by
        explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - description: Records per page
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      - description: Page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "CSV of fields to return (all, \"blank\" or see list of all field\
          \ names below)"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelRuleGetAllVASPsResponse'
          description: Get all VASPs
      summary: Get All VASPs
      tags:
      - Travel Rule (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TravelRuleGetAllVASPsResponse>>\
            \ = fireblocks.travelRuleBeta.getVASPs(travelRuleBetaApiGetVASPsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TravelRuleGetAllVASPsResponse>> response\
            \ = fireblocks.travelRuleBeta().getVASPs(order, perPage, page, fields);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/travel_rule/vasp/update:
    put:
      description: |-
        Update VASP Details.

        Updates a VASP with the provided parameters. Use this endpoint to add your public jsonDIDkey generated by Notabene.

        **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren't yet generally available.

        To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
      operationId: updateVasp
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelRuleUpdateVASPDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelRuleUpdateVASPDetails'
          description: VASP updated successfully
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Add jsonDidKey to VASP details
      tags:
      - Travel Rule (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<TravelRuleUpdateVASPDetails>>\
            \ = fireblocks.travelRuleBeta.updateVasp(travelRuleBetaApiUpdateVaspRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<TravelRuleUpdateVASPDetails>> response\
            \ = fireblocks.travelRuleBeta().updateVasp(travelRuleUpdateVASPDetails,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /screening/travel_rule/post_screening_policy:
    get:
      description: Get the post-screening policy for Travel Rule.
      operationId: getPostScreeningPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPolicyResponse'
          description: Post-screening policy retrieved successfully.
      summary: Travel Rule - View Post-Screening Policy
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningPolicyResponse>>\
            \ = fireblocks.compliance.getPostScreeningPolicy();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningPolicyResponse>> response =
            fireblocks.compliance().getPostScreeningPolicy();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/travel_rule/screening_policy:
    get:
      description: Get the screening policy for Travel Rule.
      operationId: getScreeningPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningProviderRulesConfigurationResponse'
          description: Screening policy retrieved successfully.
      summary: Travel Rule - View Screening Policy
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningProviderRulesConfigurationResponse>>\
            \ = fireblocks.compliance.getScreeningPolicy();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningProviderRulesConfigurationResponse>>
            response = fireblocks.compliance().getScreeningPolicy();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/travel_rule/policy_configuration:
    get:
      description: Retrieves the configuration for Travel Rule screening policy.
      operationId: getScreeningConfiguration
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningConfigurationsRequest'
          description: Screening policy configuration retrieved successfully.
      summary: Get Travel Rule Screening Policy Configuration
      tags:
      - Compliance Screening Configuration
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningConfigurationsRequest>>\
            \ = fireblocks.complianceScreeningConfiguration.getScreeningConfiguration();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningConfigurationsRequest>> response
            = fireblocks.complianceScreeningConfiguration().getScreeningConfiguration();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: "Updates bypass screening, inbound delay, or outbound delay configurations\
        \ for Travel Rule."
      operationId: updateTravelRuleConfig
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningConfigurationsRequest'
          description: Configuration updated successfully.
      summary: Update Travel Rule Configuration
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningConfigurationsRequest>>\
            \ = fireblocks.compliance.updateTravelRuleConfig(complianceApiUpdateTravelRuleConfigRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningConfigurationsRequest>> response
            = fireblocks.compliance().updateTravelRuleConfig(idempotencyKey);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/aml/policy_configuration:
    get:
      description: Retrieves the configuration for Travel Rule screening policy.
      operationId: getAmlScreeningConfiguration
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningConfigurationsRequest'
          description: Screening policy configuration retrieved successfully.
      summary: Get AML Screening Policy Configuration
      tags:
      - Compliance Screening Configuration
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningConfigurationsRequest>>\
            \ = fireblocks.complianceScreeningConfiguration.getAmlScreeningConfiguration();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningConfigurationsRequest>> response
            = fireblocks.complianceScreeningConfiguration().getAmlScreeningConfiguration();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: "Updates bypass screening, inbound delay, or outbound delay configurations\
        \ for AML."
      operationId: updateAmlScreeningConfiguration
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningConfigurationsRequest'
          description: Configuration updated successfully.
      summary: Update AML Configuration
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningConfigurationsRequest>>\
            \ = fireblocks.compliance.updateAmlScreeningConfiguration(complianceApiUpdateAmlScreeningConfigurationRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningConfigurationsRequest>> response
            = fireblocks.compliance().updateAmlScreeningConfiguration(idempotencyKey);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/aml/screening_policy:
    get:
      description: Get the screening policy for AML.
      operationId: getAmlScreeningPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningProviderRulesConfigurationResponse'
          description: Screening policy retrieved successfully.
      summary: AML - View Screening Policy
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningProviderRulesConfigurationResponse>>\
            \ = fireblocks.compliance.getAmlScreeningPolicy();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningProviderRulesConfigurationResponse>>
            response = fireblocks.compliance().getAmlScreeningPolicy();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/aml/post_screening_policy:
    get:
      description: Get the post-screening policy for AML.
      operationId: getAmlPostScreeningPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningPolicyResponse'
          description: Post-screening policy retrieved successfully.
      summary: AML - View Post-Screening Policy
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningPolicyResponse>>\
            \ = fireblocks.compliance.getAmlPostScreeningPolicy();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningPolicyResponse>> response =
            fireblocks.compliance().getAmlPostScreeningPolicy();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /screening/configurations:
    put:
      description: Update tenant screening configuration.
      operationId: updateScreeningConfiguration
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreeningUpdateConfigurationsRequest'
          description: Tenant Screening configuration updated successfully.
      summary: Tenant - Screening Configuration
      tags:
      - Compliance
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ScreeningUpdateConfigurationsRequest>>\
            \ = fireblocks.compliance.updateScreeningConfiguration(complianceApiUpdateScreeningConfigurationRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<ScreeningUpdateConfigurationsRequest>>
            response = fireblocks.compliance().updateScreeningConfiguration(idempotencyKey);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /management/ota:
    get:
      description: Returns current OTA status
      operationId: getOtaStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOtaStatusResponse'
          description: Current OTA status
        "404":
          description: Configuration not found for tenant
      summary: Returns current OTA status
      tags:
      - OTA (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetOtaStatusResponse>>\
            \ = fireblocks.oTABeta.getOtaStatus();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetOtaStatusResponse>> response = fireblocks.oTABeta().getOtaStatus();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: Enable or disable transactions to OTA
      operationId: setOtaStatus
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOtaStatusRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOtaStatusResponse'
          description: Successfully updated OTA status
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: Bad request
        "409":
          description: Similar request already pending
        "500":
          description: Internal server error
      summary: Enable or disable transactions to OTA
      tags:
      - OTA (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SetOtaStatusResponse>>\
            \ = fireblocks.oTABeta.setOtaStatus(oTABetaApiSetOtaStatusRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SetOtaStatusResponse>> response = fireblocks.oTABeta().setOtaStatus(setOtaStatusRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/workspace_status:
    get:
      description: Returns current workspace status
      operationId: getWorkspaceStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkspaceStatusResponse'
          description: Current workspace status
        "404":
          description: Workspace not found
      summary: Returns current workspace status
      tags:
      - Workspace Status (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetWorkspaceStatusResponse>>\
            \ = fireblocks.workspaceStatusBeta.getWorkspaceStatus();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetWorkspaceStatusResponse>> response
            = fireblocks.workspaceStatusBeta().getWorkspaceStatus();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tap/active_policy:
    get:
      description: |
        Returns the active policy and its validation. </br>
        **Note:** These endpoints are currently in beta and might be subject to changes.
        If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
      operationId: getActivePolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAndValidationResponse'
          description: A policy object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the active policy and its validation
      tags:
      - Policy Editor (Beta)
      x-readme:
        code-samples:
        - language: python
          code: policy = fireblocks.get_active_policy()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const policy = await fireblocks.getActivePolicy();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PolicyAndValidationResponse>>\
            \ = fireblocks.policyEditorBeta.getActivePolicy();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<PolicyAndValidationResponse>> response
            = fireblocks.policyEditorBeta().getActivePolicy();
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /tap/draft:
    get:
      description: |
        Returns the active draft and its validation. </br>
        **Note:** These endpoints are currently in beta and might be subject to changes.
        If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
      operationId: getDraft
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftReviewAndValidationResponse'
          description: A draft validation response object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get the active draft
      tags:
      - Policy Editor (Beta)
      x-readme:
        code-samples:
        - language: python
          code: policy = fireblocks.get_draft()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const policy = await fireblocks.getDraft();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DraftReviewAndValidationResponse>>\
            \ = fireblocks.policyEditorBeta.getDraft();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<DraftReviewAndValidationResponse>> response
            = fireblocks.policyEditorBeta().getDraft();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: |
        Send publish request of certain draft id and returns the response. </br>
        **Note:** These endpoints are currently in beta and might be subject to changes.
        If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
      operationId: publishDraft
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishDraftRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResult'
          description: A policy publish result object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Send publish request for a certain draft id
      tags:
      - Policy Editor (Beta)
      x-readme:
        code-samples:
        - language: python
          code: policy = fireblocks.publish_draft()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const policy = await fireblocks.publishDraft();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PublishResult>> = fireblocks.policyEditorBeta.publishDraft(policyEditorBetaApiPublishDraftRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PublishResult>> response = fireblocks.policyEditorBeta().publishDraft(publishDraftRequest,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: |
        Update the draft and return its validation. </br>
        **Note:** These endpoints are currently in beta and might be subject to changes.
        If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
      operationId: updateDraft
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRules'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftReviewAndValidationResponse'
          description: A draft validation response object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Update the draft with a new set of rules
      tags:
      - Policy Editor (Beta)
      x-readme:
        code-samples:
        - language: python
          code: policy = fireblocks.update_draft()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const policy = await fireblocks.updateDraft();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<DraftReviewAndValidationResponse>>\
            \ = fireblocks.policyEditorBeta.updateDraft(policyEditorBetaApiUpdateDraftRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<DraftReviewAndValidationResponse>>\
            \ response = fireblocks.policyEditorBeta().updateDraft(policyRules, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /tap/publish:
    post:
      description: |
        Send publish request of set of policy rules and returns the response. </br>
        **Note:** These endpoints are currently in beta and might be subject to changes.
        If you want to participate and learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com.
      operationId: publishPolicyRules
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRules'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishResult'
          description: A policy publish result object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Send publish request for a set of policy rules
      tags:
      - Policy Editor (Beta)
      x-readme:
        code-samples:
        - language: python
          code: policy = fireblocks.publish_rules()
          name: Fireblocks SDK Python example
        - language: javascript
          code: const policy = await fireblocks.publishRules();
          name: Fireblocks SDK Javascript example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<PublishResult>> = fireblocks.policyEditorBeta.publishPolicyRules(policyEditorBetaApiPublishPolicyRulesRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<PublishResult>> response = fireblocks.policyEditorBeta().publishPolicyRules(policyRules,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/users:
    get:
      description: Get console users for your tenant
      operationId: getConsoleUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsoleUsersResponse'
          description: got console users
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get console users
      tags:
      - Console User
      x-readme:
        code-samples:
        - language: javascript
          code: const consoleUsers = await fireblocks.getConsoleUsers();
          name: Fireblocks SDK Javascript example
        - language: python
          code: consoleUsers = fireblocks.get_console_users()
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetConsoleUsersResponse>>\
            \ = fireblocks.consoleUser.getConsoleUsers();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetConsoleUsersResponse>> response =
            fireblocks.consoleUser().getConsoleUsers();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates console user in your tenant
      operationId: createConsoleUser
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsoleUser'
      responses:
        "200":
          description: User creation approval request has been sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: bad request
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create console user
      tags:
      - Console User
      x-readme:
        code-samples:
        - language: javascript
          code: "const res = await fireblocks.createConsoleUser(firstName, lastName,\
            \ email, role);"
          name: Fireblocks SDK Javascript example
        - language: python
          code: "res = fireblocks.create_console_user(first_name, last_name, email,\
            \ role)"
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.consoleUser.createConsoleUser(consoleUserApiCreateConsoleUserRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.consoleUser().createConsoleUser(createConsoleUser,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/api_users:
    get:
      description: Get Api users of your tenant
      operationId: getApiUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAPIUsersResponse'
          description: got api users
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get Api users
      tags:
      - Api User
      x-readme:
        code-samples:
        - language: javascript
          code: const apiUsers = await fireblocks.getApiUsers();
          name: Fireblocks SDK Javascript example
        - language: python
          code: apiUsers = fireblocks.get_api_users()
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetAPIUsersResponse>>\
            \ = fireblocks.apiUser.getApiUsers();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetAPIUsersResponse>> response = fireblocks.apiUser().getApiUsers();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates Api user in your tenant
      operationId: createApiUser
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIUser'
      responses:
        "200":
          description: User creation approval request has been sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "400":
          description: bad request
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Create Api user
      tags:
      - Api User
      x-readme:
        code-samples:
        - language: javascript
          code: "const res = await fireblocks.createApiUser(name, role, csrForNewUser,\
            \ coSignerType, isFirstUser);"
          name: Fireblocks SDK Javascript example
        - language: python
          code: "res = fireblocks.create_api_user(name, role, csr_pem, co_signer_setup,\
            \ co_signer_setup_is_first_user)"
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.apiUser.createApiUser(apiUserApiCreateApiUserRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.apiUser().createApiUser(createAPIUser,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /management/users/{id}/reset_device:
    post:
      description: "Resets mobile device for given console user, that user will need\
        \ to do mobile onboarding again."
      operationId: resetDevice
      parameters:
      - description: The ID of the console user
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Reset device approval request has been sent
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Resets device
      tags:
      - Reset device
      x-readme:
        code-samples:
        - language: javascript
          code: const res = await fireblocks.resetDeviceRequest(consoleUserId);
          name: Fireblocks SDK Javascript example
        - language: python
          code: res = fireblocks.reset_device_request(console_user_id)
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.resetDevice.resetDevice(resetDeviceApiResetDeviceRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.resetDevice().resetDevice(id,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /management/api_users/{userId}/whitelist_ip_addresses:
    get:
      description: Gets whitelisted ip addresses for given Api user.
      operationId: getWhitelistIpAddresses
      parameters:
      - description: The ID of the api user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWhitelistIpAddressesResponse'
          description: successfully got whitelisted ip addresses
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized. Missing / invalid JWT token in Authorization
            header.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Lacking permissions.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        "5XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal error.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Gets whitelisted ip addresses
      tags:
      - whitelist ip addresses
      x-readme:
        code-samples:
        - language: javascript
          code: const whitelistedAddresses = await fireblocks.getWhitelistedAddresses(apiUserId);
          name: Fireblocks SDK Javascript example
        - language: python
          code: whitelisted_addresses = fireblocks.get_whitelisted_ip_addresses(api_user_id)
          name: Fireblocks SDK Python example
        - language: typescript
          code: "const response: Promise<FireblocksResponse<GetWhitelistIpAddressesResponse>>\
            \ = fireblocks.whitelistIpAddresses.getWhitelistIpAddresses(whitelistIpAddressesApiGetWhitelistIpAddressesRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<GetWhitelistIpAddressesResponse>> response
            = fireblocks.whitelistIpAddresses().getWhitelistIpAddresses(userId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /smart-transfers:
    get:
      description: Finds Smart Transfer tickets that match the submitted criteria
      operationId: searchTickets
      parameters:
      - description: Search string - counterparty name or asset or ticketId. Optional
        explode: true
        in: query
        name: q
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Ticket statuses for Smart Transfer tickets. Optional
        example:
        - DRAFT
        - OPEN
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          default: []
          items:
            enum:
            - DRAFT
            - PENDING_APPROVAL
            - OPEN
            - IN_SETTLEMENT
            - FULFILLED
            - EXPIRED
            - CANCELED
            type: string
          type: array
        style: form
      - description: "NetworkId that is used in the ticket\t. Optional"
        explode: true
        in: query
        name: networkId
        required: false
        schema:
          type: string
        style: form
      - description: Filter created tickets by created by self or by others. Optional
        explode: true
        in: query
        name: createdByMe
        required: false
        schema:
          type: boolean
        style: form
      - description: Lower bound of search range. Optional
        explode: true
        in: query
        name: expiresAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Upper bound of search range. Optional
        explode: true
        in: query
        name: expiresBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Type of transfer. ASYNC executes transfers as they are funded,\
          \ ATOMIC executes all terms (legs) as one atomic transfer"
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - ASYNC
          type: string
        style: form
      - description: External ref. ID that workspace can use to identify ticket outside
          of Fireblocks system.
        explode: true
        in: query
        name: externalRefId
        required: false
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: form
      - description: ID of the record after which to fetch $limit records
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: "Number of records to fetch. By default, it is 100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketFilteredResponse'
          description: Smart Transfer tickets were returned successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
      summary: Find Ticket
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketFilteredResponse>>\
            \ = fireblocks.smartTransfer.searchTickets(smartTransferApiSearchTicketsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketFilteredResponse>>\
            \ response = fireblocks.smartTransfer().searchTickets(q, statuses, networkId,\
            \ createdByMe, expiresAfter, expiresBefore, type, externalRefId, after,\
            \ limit);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Creates new Smart Transfer ticket
      operationId: createTicket
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferCreateTicket'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Smart Transfer ticket was created successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Create Ticket
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.createTicket(smartTransferApiCreateTicketRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().createTicket(smartTransferCreateTicket,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}:
    get:
      description: Find Smart Transfer ticket by id
      operationId: findTicketById
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Smart Transfer ticket returned successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
      summary: Search Tickets by ID
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.findTicketById(smartTransferApiFindTicketByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response
            = fireblocks.smartTransfer().findTicketById(ticketId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /smart-transfers/{ticketId}/expires-in:
    put:
      description: Set expiration date on Smart Transfer ticket
      operationId: setTicketExpiration
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferSetTicketExpiration'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Successfully set expiration date on Smart Transfer ticket
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Set expiration
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.setTicketExpiration(smartTransferApiSetTicketExpirationRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().setTicketExpiration(smartTransferSetTicketExpiration,\
            \ ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/external-id:
    put:
      description: Set external id Smart Transfer ticket
      operationId: setExternalRefId
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferSetTicketExternalId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Successfully set external id on Smart Transfer ticket
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Add external ref. ID
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.setExternalRefId(smartTransferApiSetExternalRefIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().setExternalRefId(smartTransferSetTicketExternalId,\
            \ ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/submit:
    put:
      description: "Submit Smart Transfer ticket - change status into ready for approval\
        \ if auto approval is not turned on, or OPEN if auto approval is on"
      operationId: submitTicket
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferSubmitTicket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Successfully submitted Smart Transfer ticket
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Submit ticket
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.submitTicket(smartTransferApiSubmitTicketRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().submitTicket(smartTransferSubmitTicket,\
            \ ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/fulfill:
    put:
      description: "Manually fulfill ticket, in case when all terms (legs) are funded\
        \ manually"
      operationId: fulfillTicket
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Successfully fulfilled on Smart Transfer ticket
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Fund ticket manually
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.fulfillTicket(smartTransferApiFulfillTicketRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().fulfillTicket(ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /smart-transfers/{ticketId}/cancel:
    put:
      description: Cancel Smart Transfer ticket
      operationId: cancelTicket
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketResponse'
          description: Smart Transfer ticket successfully canceled
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Cancel Ticket
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketResponse>>\
            \ = fireblocks.smartTransfer.cancelTicket(smartTransferApiCancelTicketRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketResponse>> response\
            \ = fireblocks.smartTransfer().cancelTicket(ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /smart-transfers/{ticketId}/terms:
    post:
      description: Creates new smart transfer ticket term (when the ticket status
        is DRAFT)
      operationId: createTicketTerm
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferCreateTicketTerm'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketTermResponse'
          description: Smart Transfer ticket term was created successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Create leg (term)
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketTermResponse>>\
            \ = fireblocks.smartTransfer.createTicketTerm(smartTransferApiCreateTicketTermRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketTermResponse>> response\
            \ = fireblocks.smartTransfer().createTicketTerm(smartTransferCreateTicketTerm,\
            \ ticketId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/terms/{termId}:
    delete:
      description: Delete ticket term when ticket is in DRAFT status
      operationId: removeTicketTerm
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: termId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Smart Transfer ticket term successfully removed
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
      summary: Delete ticket leg (term)
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.smartTransfer.removeTicketTerm(smartTransferApiRemoveTicketTermRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.smartTransfer().removeTicketTerm(ticketId,\
            \ termId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    get:
      description: Find Smart Transfer ticket term by id
      operationId: findTicketTermById
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: termId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketTermResponse'
          description: Smart Transfer ticket term returned successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
      summary: Search ticket by leg (term) ID
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketTermResponse>>\
            \ = fireblocks.smartTransfer.findTicketTermById(smartTransferApiFindTicketTermByIdRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketTermResponse>> response\
            \ = fireblocks.smartTransfer().findTicketTermById(ticketId, termId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
    put:
      description: Update ticket term (when ticket status is DRAFT)
      operationId: updateTicketTerm
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: termId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferUpdateTicketTerm'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketTermResponse'
          description: Smart Transfer ticket term updated successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
      summary: Update ticket leg (term)
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketTermResponse>>\
            \ = fireblocks.smartTransfer.updateTicketTerm(smartTransferApiUpdateTicketTermRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketTermResponse>> response\
            \ = fireblocks.smartTransfer().updateTicketTerm(smartTransferUpdateTicketTerm,\
            \ ticketId, termId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/terms/{termId}/fund:
    put:
      description: "Set funding source for ticket term (in case of ASYNC tickets,\
        \ this will execute transfer immediately)"
      operationId: fundTicketTerm
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: termId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferFundTerm'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketTermResponse'
          description: Funding source for ticket term successfully done
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Define funding source
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketTermResponse>>\
            \ = fireblocks.smartTransfer.fundTicketTerm(smartTransferApiFundTicketTermRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketTermResponse>> response\
            \ = fireblocks.smartTransfer().fundTicketTerm(smartTransferFundTerm, ticketId,\
            \ termId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/{ticketId}/terms/{termId}/manually-fund:
    put:
      description: Manually set ticket term transaction
      operationId: manuallyFundTicketTerm
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: termId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferManuallyFundTerm'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferTicketTermResponse'
          description: Successfully manually set ticket term transaction
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferNotFoundResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Manually add term transaction
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferTicketTermResponse>>\
            \ = fireblocks.smartTransfer.manuallyFundTicketTerm(smartTransferApiManuallyFundTicketTermRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferTicketTermResponse>> response\
            \ = fireblocks.smartTransfer().manuallyFundTicketTerm(smartTransferManuallyFundTerm,\
            \ ticketId, termId, idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /smart-transfers/settings/user-groups:
    get:
      description: Get Smart Transfer user groups
      operationId: getSmartTransferUserGroups
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferUserGroupsResponse'
          description: User group settings were returned successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Get user group
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferUserGroupsResponse>>\
            \ = fireblocks.smartTransfer.getSmartTransferUserGroups();"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<SmartTransferUserGroupsResponse>> response
            = fireblocks.smartTransfer().getSmartTransferUserGroups();
          name: Fireblocks SDK Java example
      x-accepts: application/json
    post:
      description: Set Smart Transfer user group
      operationId: setUserGroups
      parameters:
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmartTransferSetUserGroups'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferUserGroupsResponse'
          description: User group settings were set successfully
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferForbiddenResponse'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartTransferBadRequestResponse'
          description: Bad Request
      summary: Set user group
      tags:
      - Smart Transfer
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<SmartTransferUserGroupsResponse>>\
            \ = fireblocks.smartTransfer.setUserGroups(smartTransferApiSetUserGroupsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<SmartTransferUserGroupsResponse>> response\
            \ = fireblocks.smartTransfer().setUserGroups(smartTransferSetUserGroups,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /batch/jobs:
    get:
      description: "Get an array of objects including all active, paused, canceled,\
        \ and complete jobs in a workspace."
      operationId: getJobs
      parameters:
      - description: Start of time range in ms since 1970
        explode: true
        in: query
        name: fromTime
        required: false
        schema:
          type: integer
        style: form
      - description: End of time range in ms since 1970
        explode: true
        in: query
        name: toTime
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
          description: An array of jobs
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return a list of jobs belonging to tenant
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<Jobs>> = fireblocks.jobManagement.getJobs(jobManagementApiGetJobsRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<List<Job>>> response = fireblocks.jobManagement().getJobs(fromTime,\
            \ toTime);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /batch/{jobId}:
    get:
      description: Get an object describing the given job
      operationId: getJob
      parameters:
      - description: The requested job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: A JSON object that describes the job
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get job details
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<Job>> = fireblocks.jobManagement.getJob(jobManagementApiGetJobRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Job>> response = fireblocks.jobManagement().getJob(jobId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /batch/{jobId}/pause:
    post:
      description: "Pause the given job, after the current task is done. A paused\
        \ job can later be resumed by calling ‘continue’, or canceled."
      operationId: pauseJob
      parameters:
      - description: The requested job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: paused successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Pause a job
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.jobManagement.pauseJob(jobManagementApiPauseJobRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.jobManagement().pauseJob(jobId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /batch/{jobId}/continue:
    post:
      description: Continue the given paused job.
      operationId: continueJob
      parameters:
      - description: The requested job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: continued successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Continue a paused job
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.jobManagement.continueJob(jobManagementApiContinueJobRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.jobManagement().continueJob(jobId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /batch/{jobId}/cancel:
    post:
      description: "Stop the given job immediately. If the job is in the ‘Active’\
        \ state, the job will be canceled after completing the current task. Vault\
        \ accounts and Wallets that are already created will not be affected."
      operationId: cancelJob
      parameters:
      - description: The requested job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: "A unique identifier for the request. If the request is sent\
          \ multiple times with the same idempotency key, the server will return the\
          \ same response as the first request. The idempotency key is valid for 24\
          \ hours."
        explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: canceled successfully
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Cancel a running job
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<void>> = fireblocks.jobManagement.cancelJob(jobManagementApiCancelJobRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Void>> response = fireblocks.jobManagement().cancelJob(jobId,\
            \ idempotencyKey);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /batch/{jobId}/tasks:
    get:
      description: Return a list of tasks for given job
      operationId: getJobTasks
      parameters:
      - description: The requested job id
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: An array of tasks
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Return a list of tasks for given job
      tags:
      - Job Management
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<Tasks>> = fireblocks.jobManagement.getJobTasks(jobManagementApiGetJobTasksRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<List<Task>>> response = fireblocks.jobManagement().getJobTasks(jobId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /cosigners:
    get:
      description: |
        Get all workspace cosigners (paginated)
        **Note:** These endpoints are currently in beta and might be subject to changes.
      operationId: getCosigners
      parameters:
      - description: ASC / DESC ordering (default DESC)
        example: ASC
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Cursor of the required page
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items in the page
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosignersPaginatedResponse'
          description: A paginated response containing Cosigner objects
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get all cosigners
      tags:
      - Cosigners (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<CosignersPaginatedResponse>>\
            \ = fireblocks.cosignersBeta.getCosigners(cosignersBetaApiGetCosignersRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<CosignersPaginatedResponse>> response\
            \ = fireblocks.cosignersBeta().getCosigners(order, pageCursor, pageSize);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /cosigners/{cosignerId}:
    get:
      description: |
        Get a cosigner by ID
        **Note:** These endpoints are currently in beta and might be subject to changes.
      operationId: getCosigner
      parameters:
      - description: The unique identifier of the cosigner
        example: 44fcead0-7053-4831-a53a-df7fb90d440f
        explode: false
        in: path
        name: cosignerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cosigner'
          description: A cosigner object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get cosigner
      tags:
      - Cosigners (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<Cosigner>> = fireblocks.cosignersBeta.getCosigner(cosignersBetaApiGetCosignerRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: CompletableFuture<ApiResponse<Cosigner>> response = fireblocks.cosignersBeta().getCosigner(cosignerId);
          name: Fireblocks SDK Java example
      x-accepts: application/json
    patch:
      description: |
        Rename a cosigner by ID
        **Note:** These endpoints are currently in beta and might be subject to changes.
      operationId: renameCosigner
      parameters:
      - description: The unique identifier of the cosigner
        example: 44fcead0-7053-4831-a53a-df7fb90d440f
        explode: false
        in: path
        name: cosignerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameCosigner'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cosigner'
          description: A cosigner object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Rename cosigner
      tags:
      - Cosigners (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<Cosigner>> = fireblocks.cosignersBeta.renameCosigner(cosignersBetaApiRenameCosignerRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<Cosigner>> response = fireblocks.cosignersBeta().renameCosigner(renameCosigner,\
            \ cosignerId);"
          name: Fireblocks SDK Java example
      x-content-type: application/json
      x-accepts: application/json
  /cosigners/{cosignerId}/api_keys:
    get:
      description: |
        Get all cosigner paired API keys (paginated)
        **Note:** These endpoints are currently in beta and might be subject to changes.
      operationId: getApiKeys
      parameters:
      - description: The unique identifier of the cosigner
        example: 44fcead0-7053-4831-a53a-df7fb90d440f
        explode: false
        in: path
        name: cosignerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: ASC / DESC ordering (default DESC)
        example: ASC
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: DESC
          enum:
          - ASC
          - DESC
          type: string
        style: form
      - description: Cursor of the required page
        explode: true
        in: query
        name: pageCursor
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of items in the page
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysPaginatedResponse'
          description: A paginated response containing ApiKey objects
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get all API keys
      tags:
      - Cosigners (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ApiKeysPaginatedResponse>>\
            \ = fireblocks.cosignersBeta.getApiKeys(cosignersBetaApiGetApiKeysRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ApiKeysPaginatedResponse>> response\
            \ = fireblocks.cosignersBeta().getApiKeys(cosignerId, order, pageCursor,\
            \ pageSize);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
  /cosigners/{cosignerId}/api_keys/{apiKeyId}:
    get:
      description: |
        Get an API key by ID
        **Note:** These endpoints are currently in beta and might be subject to changes.
      operationId: getApiKey
      parameters:
      - description: The unique identifier of the cosigner
        example: 44fcead0-7053-4831-a53a-df7fb90d440f
        explode: false
        in: path
        name: cosignerId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The unique identifier of the API key
        example: 44fcead0-7053-4831-a53a-df7fb90d440f
        explode: false
        in: path
        name: apiKeyId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
          description: An ApiKey object
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Error Response
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
      summary: Get API key
      tags:
      - Cosigners (Beta)
      x-readme:
        code-samples:
        - language: typescript
          code: "const response: Promise<FireblocksResponse<ApiKey>> = fireblocks.cosignersBeta.getApiKey(cosignersBetaApiGetApiKeyRequest);"
          name: Fireblocks SDK TypeScript example
        - language: java
          code: "CompletableFuture<ApiResponse<ApiKey>> response = fireblocks.cosignersBeta().getApiKey(cosignerId,\
            \ apiKeyId);"
          name: Fireblocks SDK Java example
      x-accepts: application/json
components:
  headers:
    X-Request-ID:
      description: Unique ID correlated to the API request. Please provide it in any
        support ticket you create or on Github issues related to Fireblocks SDKs
      explode: false
      schema:
        type: string
      style: simple
    next-page:
      description: URL representing a new request to this API endpoint to receive
        the next page of results.
      explode: false
      schema:
        type: string
      style: simple
    prev-page:
      description: URL representing a new request to this API endpoint to receive
        the previous page of results.
      explode: false
      schema:
        type: string
      style: simple
  parameters:
    X-Idempotency-Key:
      description: "A unique identifier for the request. If the request is sent multiple\
        \ times with the same idempotency key, the server will return the same response\
        \ as the first request. The idempotency key is valid for 24 hours."
      explode: false
      in: header
      name: Idempotency-Key
      required: false
      schema:
        type: string
      style: simple
    X-End-User-Wallet-Id:
      description: Unique ID of the End-User wallet to the API request. Required for
        end-user wallet operations.
      explode: false
      in: header
      name: X-End-User-Wallet-Id
      required: false
      schema:
        format: uuid
        type: string
      style: simple
  responses:
    Error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorSchema'
      description: Error Response
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
  schemas:
    ErrorSchema:
      example:
        code: 6.027456183070403
        message: message
      properties:
        message:
          type: string
        code:
          type: number
      type: object
    RewardsInfo:
      example:
        pendingRewards: pendingRewards
      properties:
        pendingRewards:
          description: Amount that is pending for rewards
          type: string
      type: object
    VaultAsset:
      example:
        totalStakedCPU: 0.8008281904610115
        blockHash: blockHash
        pendingRefundNetwork: pendingRefundNetwork
        lockedAmount: lockedAmount
        pending: pending
        staked: staked
        rewardsInfo:
          pendingRewards: pendingRewards
        available: available
        frozen: frozen
        selfStakedCPU: selfStakedCPU
        totalStakedNetwork: totalStakedNetwork
        total: total
        balance: balance
        blockHeight: blockHeight
        selfStakedNetwork: selfStakedNetwork
        pendingRefundCPU: pendingRefundCPU
        id: id
      properties:
        id:
          type: string
        total:
          description: "The total wallet balance. In EOS this value includes the network\
            \ balance, self staking and pending refund. For all other coins it is\
            \ the balance as it appears on the blockchain."
          type: string
        balance:
          deprecated: true
          description: Deprecated - replaced by "total"
          type: string
        available:
          description: Funds available for transfer. Equals the blockchain balance
            minus any locked amounts
          type: string
        pending:
          description: The cumulative balance of all transactions pending to be cleared
          type: string
        frozen:
          description: The cumulative frozen balance
          type: string
        lockedAmount:
          description: Funds in outgoing transactions that are not yet published to
            the network
          type: string
        staked:
          description: Staked balance
          type: string
        totalStakedCPU:
          description: Deprecated
          type: number
        totalStakedNetwork:
          description: Deprecated
          type: string
        selfStakedCPU:
          description: Deprecated
          type: string
        selfStakedNetwork:
          description: Deprecated
          type: string
        pendingRefundCPU:
          description: Deprecated
          type: string
        pendingRefundNetwork:
          description: Deprecated
          type: string
        blockHeight:
          type: string
        blockHash:
          type: string
        rewardsInfo:
          $ref: '#/components/schemas/RewardsInfo'
      type: object
    VaultAccount:
      example:
        assets:
        - totalStakedCPU: 0.8008281904610115
          blockHash: blockHash
          pendingRefundNetwork: pendingRefundNetwork
          lockedAmount: lockedAmount
          pending: pending
          staked: staked
          rewardsInfo:
            pendingRewards: pendingRewards
          available: available
          frozen: frozen
          selfStakedCPU: selfStakedCPU
          totalStakedNetwork: totalStakedNetwork
          total: total
          balance: balance
          blockHeight: blockHeight
          selfStakedNetwork: selfStakedNetwork
          pendingRefundCPU: pendingRefundCPU
          id: id
        - totalStakedCPU: 0.8008281904610115
          blockHash: blockHash
          pendingRefundNetwork: pendingRefundNetwork
          lockedAmount: lockedAmount
          pending: pending
          staked: staked
          rewardsInfo:
            pendingRewards: pendingRewards
          available: available
          frozen: frozen
          selfStakedCPU: selfStakedCPU
          totalStakedNetwork: totalStakedNetwork
          total: total
          balance: balance
          blockHeight: blockHeight
          selfStakedNetwork: selfStakedNetwork
          pendingRefundCPU: pendingRefundCPU
          id: id
        hiddenOnUI: true
        name: name
        id: id
        customerRefId: customerRefId
        autoFuel: true
      properties:
        id:
          type: string
        name:
          type: string
        assets:
          items:
            $ref: '#/components/schemas/VaultAsset'
          type: array
        hiddenOnUI:
          type: boolean
        customerRefId:
          type: string
        autoFuel:
          type: boolean
      type: object
    GetVaultAccountsResponse:
      items:
        $ref: '#/components/schemas/VaultAccount'
      type: array
    CreateVaultAccountRequest:
      example:
        hiddenOnUI: true
        name: name
        customerRefId: customerRefId
        autoFuel: true
      properties:
        name:
          description: Account Name
          type: string
        hiddenOnUI:
          description: "Optional - if true, the created account and all related transactions\
            \ will not be shown on Fireblocks console"
          type: boolean
        customerRefId:
          description: Optional - Sets a customer reference ID
          type: string
        autoFuel:
          description: Optional - Sets the autoFuel property of the vault account
          type: boolean
      type: object
    CreateMultipleAccountsRequest:
      example:
        count: 0
        assetIds:
        - assetIds
        - assetIds
      properties:
        count:
          description: Count
          type: integer
        assetIds:
          description: Array of asset IDs
          items:
            type: string
          type: array
      type: object
    JobCreated:
      example:
        jobId: jobId
      properties:
        jobId:
          type: string
      type: object
    VaultAccountsPagedResponse:
      example:
        previousUrl: previousUrl
        paging:
          before: before
          after: after
        accounts:
        - assets:
          - totalStakedCPU: 0.8008281904610115
            blockHash: blockHash
            pendingRefundNetwork: pendingRefundNetwork
            lockedAmount: lockedAmount
            pending: pending
            staked: staked
            rewardsInfo:
              pendingRewards: pendingRewards
            available: available
            frozen: frozen
            selfStakedCPU: selfStakedCPU
            totalStakedNetwork: totalStakedNetwork
            total: total
            balance: balance
            blockHeight: blockHeight
            selfStakedNetwork: selfStakedNetwork
            pendingRefundCPU: pendingRefundCPU
            id: id
          - totalStakedCPU: 0.8008281904610115
            blockHash: blockHash
            pendingRefundNetwork: pendingRefundNetwork
            lockedAmount: lockedAmount
            pending: pending
            staked: staked
            rewardsInfo:
              pendingRewards: pendingRewards
            available: available
            frozen: frozen
            selfStakedCPU: selfStakedCPU
            totalStakedNetwork: totalStakedNetwork
            total: total
            balance: balance
            blockHeight: blockHeight
            selfStakedNetwork: selfStakedNetwork
            pendingRefundCPU: pendingRefundCPU
            id: id
          hiddenOnUI: true
          name: name
          id: id
          customerRefId: customerRefId
          autoFuel: true
        - assets:
          - totalStakedCPU: 0.8008281904610115
            blockHash: blockHash
            pendingRefundNetwork: pendingRefundNetwork
            lockedAmount: lockedAmount
            pending: pending
            staked: staked
            rewardsInfo:
              pendingRewards: pendingRewards
            available: available
            frozen: frozen
            selfStakedCPU: selfStakedCPU
            totalStakedNetwork: totalStakedNetwork
            total: total
            balance: balance
            blockHeight: blockHeight
            selfStakedNetwork: selfStakedNetwork
            pendingRefundCPU: pendingRefundCPU
            id: id
          - totalStakedCPU: 0.8008281904610115
            blockHash: blockHash
            pendingRefundNetwork: pendingRefundNetwork
            lockedAmount: lockedAmount
            pending: pending
            staked: staked
            rewardsInfo:
              pendingRewards: pendingRewards
            available: available
            frozen: frozen
            selfStakedCPU: selfStakedCPU
            totalStakedNetwork: totalStakedNetwork
            total: total
            balance: balance
            blockHeight: blockHeight
            selfStakedNetwork: selfStakedNetwork
            pendingRefundCPU: pendingRefundCPU
            id: id
          hiddenOnUI: true
          name: name
          id: id
          customerRefId: customerRefId
          autoFuel: true
        nextUrl: nextUrl
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/VaultAccount'
          type: array
        paging:
          $ref: '#/components/schemas/VaultAccountsPagedResponse_paging'
        previousUrl:
          type: string
        nextUrl:
          type: string
      type: object
    UpdateVaultAccountRequest:
      example:
        name: name
      properties:
        name:
          description: Account Name
          type: string
      type: object
    RenameVaultAccountResponse:
      example:
        name: name
        id: id
      properties:
        name:
          description: The new name of the vault account
          type: string
        id:
          description: The ID of the vault account
          type: string
      type: object
    AssetWallet:
      example:
        blockHash: blockHash
        total: total
        lockedAmount: lockedAmount
        blockHeight: blockHeight
        vaultId: vaultId
        assetId: assetId
        pending: pending
        staked: staked
        available: available
        creationTimestamp: creationTimestamp
        frozen: frozen
      properties:
        vaultId:
          description: "ID of the vault account. You can [get the vault account by\
            \ this ID](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid)\
            \ to retrieve vault properties such as its name, auto fueling, hidden\
            \ on UI or customer reference ID."
          type: string
        assetId:
          description: "ID of the asset. You can get more information about this asset\
            \ by using the [supported assets API](https://developers.fireblocks.com/reference/get_supported-assets)"
          type: string
        available:
          description: "Available balance, available to use in a transaction."
          type: string
        total:
          description: "Total balance at the asset wallet, as seen at the blockchain\
            \ explorers. This includes balance available, and any kind of unavailable\
            \ balance such as locked, frozen, or others."
          type: string
        pending:
          description: Pending balance.
          type: string
        staked:
          description: Staked balance.
          type: string
        frozen:
          description: Funds frozen due to the anti-money laundering policy at this
            workspace.
          type: string
        lockedAmount:
          description: Locked balance.
          type: string
        blockHeight:
          description: The height (number) of the block of the balance. Can by empty.
          type: string
        blockHash:
          description: The hash of the block of the balance. Can by empty.
          type: string
        creationTimestamp:
          description: Unix timestamp of the time the asset wallet was created.
          type: string
      type: object
    PaginatedAssetWalletResponse:
      example:
        assetWallets:
        - blockHash: blockHash
          total: total
          lockedAmount: lockedAmount
          blockHeight: blockHeight
          vaultId: vaultId
          assetId: assetId
          pending: pending
          staked: staked
          available: available
          creationTimestamp: creationTimestamp
          frozen: frozen
        - blockHash: blockHash
          total: total
          lockedAmount: lockedAmount
          blockHeight: blockHeight
          vaultId: vaultId
          assetId: assetId
          pending: pending
          staked: staked
          available: available
          creationTimestamp: creationTimestamp
          frozen: frozen
        paging:
          before: before
          after: after
      properties:
        assetWallets:
          items:
            $ref: '#/components/schemas/AssetWallet'
          type: array
        paging:
          $ref: '#/components/schemas/PaginatedAssetWalletResponse_paging'
      type: object
    VaultActionStatus:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    CreateVaultAssetResponse:
      example:
        legacyAddress: legacyAddress
        address: address
        activationTxId: activationTxId
        enterpriseAddress: enterpriseAddress
        id: id
        tag: tag
        eosAccountName: eosAccountName
        status: status
      properties:
        id:
          type: string
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        eosAccountName:
          type: string
        status:
          type: string
        activationTxId:
          type: string
      type: object
    SetCustomerRefIdRequest:
      example:
        customerRefId: customerRefId
      properties:
        customerRefId:
          description: Customer reference ID
          type: string
      type: object
    SetAutoFuelRequest:
      example:
        autoFuel: true
      properties:
        autoFuel:
          description: Auto Fuel
          type: boolean
      type: object
    CreateAssetsRequest:
      example:
        eosAccountName: eosAccountName
      properties:
        eosAccountName:
          description: "Optional - when creating an EOS wallet, the account name.\
            \ If not provided, a random name will be generated"
          type: string
      type: object
    VaultWalletAddress:
      example:
        bip44AddressIndex: 0
        legacyAddress: legacyAddress
        address: address
        assetId: assetId
        addressFormat: SEGWIT
        userDefined: true
        enterpriseAddress: enterpriseAddress
        description: description
        tag: tag
        type: type
        customerRefId: customerRefId
      properties:
        assetId:
          type: string
          x-fb-entity: asset
        address:
          type: string
        description:
          type: string
        tag:
          type: string
        type:
          type: string
        customerRefId:
          type: string
        addressFormat:
          enum:
          - SEGWIT
          - LEGACY
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        bip44AddressIndex:
          type: integer
        userDefined:
          type: boolean
      type: object
    GetVaultAccountAssetAddressesResponse:
      items:
        $ref: '#/components/schemas/VaultWalletAddress'
      type: array
    CreateAddressRequest:
      example:
        description: description
        customerRefId: customerRefId
      properties:
        description:
          description: (Optional) Attach a description to the new address
          type: string
        customerRefId:
          description: Optional - Sets a customer reference ID
          type: string
      type: object
    CreateAddressResponse:
      example:
        bip44AddressIndex: 0
        legacyAddress: legacyAddress
        address: address
        enterpriseAddress: enterpriseAddress
        tag: tag
      properties:
        address:
          type: string
        legacyAddress:
          type: string
        enterpriseAddress:
          type: string
        tag:
          type: string
        bip44AddressIndex:
          type: integer
      type: object
    PaginatedAddressResponse:
      example:
        addresses:
        - bip44AddressIndex: 0
          legacyAddress: legacyAddress
          address: address
          assetId: assetId
          addressFormat: SEGWIT
          userDefined: true
          enterpriseAddress: enterpriseAddress
          description: description
          tag: tag
          type: type
          customerRefId: customerRefId
        - bip44AddressIndex: 0
          legacyAddress: legacyAddress
          address: address
          assetId: assetId
          addressFormat: SEGWIT
          userDefined: true
          enterpriseAddress: enterpriseAddress
          description: description
          tag: tag
          type: type
          customerRefId: customerRefId
        paging:
          before: before
          after: after
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/VaultWalletAddress'
          type: array
        paging:
          $ref: '#/components/schemas/PaginatedAddressResponse_paging'
      type: object
    GetMaxSpendableAmountResponse:
      example:
        maxSpendableAmount: maxSpendableAmount
      properties:
        maxSpendableAmount:
          description: The maximum amount that can be spent from the vault account
          type: string
      type: object
    UpdateVaultAccountAssetAddressRequest:
      example:
        description: description
      properties:
        description:
          description: The address description
          type: string
      type: object
    SetCustomerRefIdForAddressRequest:
      example:
        customerRefId: customerRefId
      properties:
        customerRefId:
          description: Customer reference ID
          type: string
      type: object
    UnspentInput:
      example:
        index: 0.8008281904610115
        txHash: txHash
      properties:
        txHash:
          type: string
        index:
          type: number
      type: object
    UnspentInputsResponse:
      example:
        input:
          index: 0.8008281904610115
          txHash: txHash
        amount: amount
        address: address
        confirmations: 6.027456183070403
        status: status
      properties:
        input:
          $ref: '#/components/schemas/UnspentInput'
        address:
          type: string
        amount:
          type: string
        confirmations:
          type: number
        status:
          type: string
      type: object
    GetUnspentInputsResponse:
      items:
        $ref: '#/components/schemas/UnspentInputsResponse'
      type: array
    PublicKeyInformation:
      example:
        derivationPath:
        - 0.8008281904610115
        - 0.8008281904610115
        publicKey: publicKey
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        derivationPath:
          items:
            type: number
          type: array
        publicKey:
          type: string
      type: object
    GetVaultAssetsResponse:
      items:
        $ref: '#/components/schemas/VaultAsset'
      type: array
    CreateAssetsBulkRequest:
      example:
        assetId: assetId
        vaultAccountIdFrom: vaultAccountIdFrom
        vaultAccountIdTo: vaultAccountIdTo
      properties:
        assetId:
          description: The ID of the new asset
          type: string
        vaultAccountIdFrom:
          description: The smallest vault account ID in the range
          type: string
        vaultAccountIdTo:
          description: The largest vault account ID in the range
          type: string
      type: object
    ExchangeType:
      enum:
      - BINANCE
      - BINANCEUS
      - BITFINEX
      - BITHUMB
      - BITMEX
      - BITSO
      - BITSTAMP
      - BITTREX
      - CIRCLE
      - COINBASEPRO
      - COINMETRO
      - COINSPRO
      - CRYPTOCOM
      - DERIBIT
      - FTX
      - FIXUS
      - GEMINI
      - HITBTC
      - HUOBI
      - KORBIT
      - KRAKEN
      - LIQUID
      - POLONIEX
      - OKCOIN
      - OKEX
      - SEEDCX
      type: string
    ExchangeAsset:
      example:
        total: total
        lockedAmount: lockedAmount
        balance: balance
        available: available
        id: id
      properties:
        id:
          type: string
        balance:
          type: string
        lockedAmount:
          type: string
        total:
          type: string
        available:
          type: string
      type: object
    ExchangeTradingAccount:
      example:
        assets:
        - total: total
          lockedAmount: lockedAmount
          balance: balance
          available: available
          id: id
        - total: total
          lockedAmount: lockedAmount
          balance: balance
          available: available
          id: id
        name: name
        type: type
      properties:
        type:
          type: string
        name:
          type: string
        assets:
          items:
            $ref: '#/components/schemas/ExchangeAsset'
          type: array
      type: object
    ExchangeAccount:
      example:
        tradingAccounts:
        - assets:
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          name: name
          type: type
        - assets:
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          name: name
          type: type
        isSubaccount: true
        assets:
        - total: total
          lockedAmount: lockedAmount
          balance: balance
          available: available
          id: id
        - total: total
          lockedAmount: lockedAmount
          balance: balance
          available: available
          id: id
        success: true
        name: name
        id: id
        type: null
        mainAccountId: mainAccountId
        status: status
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ExchangeType'
        name:
          description: Display name of the exchange account
          type: string
        status:
          type: string
        assets:
          items:
            $ref: '#/components/schemas/ExchangeAsset'
          type: array
        success:
          description: Did succeed in retrieve balance data
          type: boolean
        tradingAccounts:
          items:
            $ref: '#/components/schemas/ExchangeTradingAccount'
          type: array
        isSubaccount:
          description: True if the account is a subaccount in an exchange
          type: boolean
        mainAccountId:
          description: "if the account is a sub-account, the ID of the main account"
          type: string
      type: object
    GetExchangeAccountsResponse:
      items:
        $ref: '#/components/schemas/ExchangeAccount'
      type: array
    ExchangeAccountsPaged:
      example:
        prevUrl: prevUrl
        ExchangeAccount:
        - tradingAccounts:
          - assets:
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            name: name
            type: type
          - assets:
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            name: name
            type: type
          isSubaccount: true
          assets:
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          success: true
          name: name
          id: id
          type: null
          mainAccountId: mainAccountId
          status: status
        - tradingAccounts:
          - assets:
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            name: name
            type: type
          - assets:
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            - total: total
              lockedAmount: lockedAmount
              balance: balance
              available: available
              id: id
            name: name
            type: type
          isSubaccount: true
          assets:
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          - total: total
            lockedAmount: lockedAmount
            balance: balance
            available: available
            id: id
          success: true
          name: name
          id: id
          type: null
          mainAccountId: mainAccountId
          status: status
        paging:
          before: before
          after: after
        nextUrl: nextUrl
      properties:
        ExchangeAccount:
          items:
            $ref: '#/components/schemas/ExchangeAccount'
          type: array
        paging:
          $ref: '#/components/schemas/ExchangeAccountsPaged_paging'
        prevUrl:
          type: string
        nextUrl:
          type: string
      type: object
    GetPagedExchangeAccountsResponse:
      items:
        $ref: '#/components/schemas/ExchangeAccountsPaged'
      type: array
    TradingAccountType:
      enum:
      - COIN_FUTURES
      - COIN_MARGINED_SWAP
      - EXCHANGE
      - FUNDING
      - FUNDABLE
      - FUTURES
      - FUTURES_CROSS
      - MARGIN
      - MARGIN_CROSS
      - OPTIONS
      - SPOT
      - USDT_MARGINED_SWAP_CROSS
      - USDT_FUTURES
      - UNIFIED
      type: string
    CreateInternalTransferRequest:
      example:
        amount: amount
        sourceType: null
        asset: asset
        destType: null
      properties:
        asset:
          type: string
        amount:
          type: string
        sourceType:
          $ref: '#/components/schemas/TradingAccountType'
        destType:
          $ref: '#/components/schemas/TradingAccountType'
      type: object
    InternalTransferResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether the transfer was successful
          type: boolean
      required:
      - success
      type: object
    ConvertAssetsRequest:
      example:
        amount: 0.8008281904610115
        destAsset: destAsset
        srcAsset: srcAsset
      properties:
        srcAsset:
          description: Name of the source asset (must be in a currency that is supported
            for conversions in the selected exchange type that corresponds to your
            exchange ID)
          type: string
        destAsset:
          description: Name of the destination asset (must be in a currency that is
            supported for conversions in the selected exchange type that corresponds
            to your exchange ID)
          type: string
        amount:
          description: The amount to transfer (in the currency of the source asset)
          type: number
      required:
      - amount
      - destAsset
      - srcAsset
      type: object
    ConvertAssetsResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether the conversion was successful
          type: boolean
      required:
      - success
      type: object
    FiatAccountType:
      enum:
      - BLINC
      type: string
    FiatAsset:
      example:
        balance: balance
        id: id
      properties:
        id:
          type: string
        balance:
          type: string
      type: object
    FiatAccount:
      example:
        address: address
        assets:
        - balance: balance
          id: id
        - balance: balance
          id: id
        name: name
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/FiatAccountType'
        name:
          description: Display name of the fiat account
          type: string
        address:
          nullable: true
          type: string
        assets:
          items:
            $ref: '#/components/schemas/FiatAsset'
          type: array
      type: object
    GetFiatAccountsResponse:
      items:
        $ref: '#/components/schemas/FiatAccount'
      type: array
    Funds:
      example:
        amount: 0.8008281904610115
      properties:
        amount:
          type: number
      type: object
    RedeemFundsToLinkedDDAResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether the funds were successfully redeemed to the
            linked DDA
          type: boolean
      required:
      - success
      type: object
    DepositFundsFromLinkedDDAResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether the funds were successfully deposited from
            the linked DDA
          type: boolean
      required:
      - success
      type: object
    NetworkChannel:
      deprecated: true
      description: Deprecated in the only used reference - NetworkConnectionResponse
      properties:
        networkId:
          type: string
        name:
          type: string
      type: object
    NetworkConnectionStatus:
      enum:
      - WAITING_FOR_APPROVAL
      - WAITING_FOR_PEER_APPROVAL
      - APPROVED
      - CANCELLED
      - FAILED
      - REJECTED
      - REJECTED_BY_PEER
      - REMOVED
      - REMOVED_BY_PEER
      type: string
    NetworkId:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    CustomRoutingDest:
      example:
        scheme: CUSTOM
        dstId: dstId
        dstType: FIAT_ACCOUNT
      properties:
        scheme:
          description: The network routing logic.
          enum:
          - CUSTOM
          type: string
        dstType:
          description: The account the funds are being sent to.
          enum:
          - FIAT_ACCOUNT
          - VAULT
          - EXCHANGE
          type: string
        dstId:
          description: The ID of the account the funds are being sent to.
          type: string
      required:
      - dstId
      - dstType
      - scheme
      type: object
    DefaultNetworkRoutingDest:
      properties:
        scheme:
          description: The network routing logic.
          enum:
          - DEFAULT
          type: string
      required:
      - scheme
      type: object
    NoneNetworkRoutingDest:
      properties:
        scheme:
          description: No network routing logic.
          enum:
          - NONE
          type: string
      required:
      - scheme
      type: object
    NetworkConnectionRoutingPolicy:
      additionalProperties:
        $ref: '#/components/schemas/NetworkConnectionRoutingPolicy_value'
      type: object
    NetworkConnectionResponse:
      example:
        localNetworkId:
          name: name
          id: id
        remoteNetworkId:
          name: name
          id: id
        remoteChannel: ""
        id: id
        localChannel: ""
        routingPolicy:
          key:
            scheme: CUSTOM
            dstId: dstId
            dstType: FIAT_ACCOUNT
        status: null
      properties:
        id:
          type: string
        localChannel:
          allOf:
          - $ref: '#/components/schemas/NetworkChannel'
          deprecated: true
          description: Deprecated - Replaced by `localNetworkId`
        remoteChannel:
          allOf:
          - $ref: '#/components/schemas/NetworkChannel'
          deprecated: true
          description: Deprecated - Replaced by `remoteNetworkId`
        status:
          $ref: '#/components/schemas/NetworkConnectionStatus'
        localNetworkId:
          $ref: '#/components/schemas/NetworkId'
        remoteNetworkId:
          $ref: '#/components/schemas/NetworkId'
        routingPolicy:
          additionalProperties:
            $ref: '#/components/schemas/NetworkConnectionRoutingPolicy_value'
          type: object
      required:
      - id
      - localNetworkId
      - remoteNetworkId
      - routingPolicy
      - status
      type: object
    GetNetworkConnectionsResponse:
      items:
        $ref: '#/components/schemas/NetworkConnectionResponse'
      type: array
    NetworkConnection:
      example:
        localNetworkId: localNetworkId
        remoteNetworkId: remoteNetworkId
        routingPolicy:
          key:
            scheme: CUSTOM
            dstId: dstId
            dstType: FIAT_ACCOUNT
      properties:
        localNetworkId:
          description: The network ID of the profile trying to create the connection.
          type: string
        remoteNetworkId:
          description: The network ID the profile is attempting to connect to.
          type: string
        routingPolicy:
          additionalProperties:
            $ref: '#/components/schemas/NetworkConnectionRoutingPolicy_value'
          type: object
      required:
      - localNetworkId
      - remoteNetworkId
      type: object
    SetRoutingPolicyRequest:
      example:
        routingPolicy:
          key:
            scheme: CUSTOM
            dstId: dstId
            dstType: FIAT_ACCOUNT
      properties:
        routingPolicy:
          additionalProperties:
            $ref: '#/components/schemas/NetworkConnectionRoutingPolicy_value'
          type: object
      required:
      - routingPolicy
      type: object
    SetRoutingPolicyResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    ThirdPartyRouting:
      example:
        isThirdPartyRouting: true
        description: description
      properties:
        isThirdPartyRouting:
          type: boolean
        description:
          type: string
      type: object
    DeleteNetworkConnectionResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    NetworkIdRoutingPolicy:
      additionalProperties:
        $ref: '#/components/schemas/NetworkIdRoutingPolicy_value'
      type: object
    NetworkIdResponse:
      allOf:
      - $ref: '#/components/schemas/NetworkId'
      - properties:
          routingPolicy:
            $ref: '#/components/schemas/NetworkIdRoutingPolicy'
          isDiscoverable:
            description: The specific network is discoverable.
            type: boolean
        type: object
      example:
        name: name
        isDiscoverable: true
        id: id
        routingPolicy: null
    GetNetworkIdsResponse:
      items:
        allOf:
        - $ref: '#/components/schemas/NetworkIdResponse'
      type: array
    CreateNetworkIdRequest:
      example:
        name: name
        routingPolicy:
          key:
            scheme: CUSTOM
            dstId: dstId
            dstType: FIAT_ACCOUNT
      properties:
        name:
          type: string
        routingPolicy:
          additionalProperties:
            $ref: '#/components/schemas/NetworkIdRoutingPolicy_value'
          type: object
      required:
      - name
      type: object
    GetRoutingPolicyAssetGroupsResponse:
      items:
        type: string
      type: array
    DeleteNetworkIdResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    SetNetworkIdRoutingPolicyRequest:
      example:
        routingPolicy:
          key:
            scheme: CUSTOM
            dstId: dstId
            dstType: FIAT_ACCOUNT
      properties:
        routingPolicy:
          additionalProperties:
            $ref: '#/components/schemas/NetworkIdRoutingPolicy_value'
          type: object
      required:
      - routingPolicy
      type: object
    SetNetworkIdResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    SetNetworkIdDiscoverabilityRequest:
      example:
        isDiscoverable: true
      properties:
        isDiscoverable:
          type: boolean
      required:
      - isDiscoverable
      type: object
    SetNetworkIdNameRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    ConfigChangeRequestStatus:
      enum:
      - WAITING_FOR_APPROVAL
      - APPROVED
      - CANCELLED
      - REJECTED
      - FAILED
      type: string
    WalletAsset:
      example:
        lockedAmount: lockedAmount
        address: address
        balance: balance
        id: id
        tag: tag
        activationTime: activationTime
        status: null
      properties:
        id:
          type: string
        balance:
          type: string
        lockedAmount:
          type: string
        status:
          $ref: '#/components/schemas/ConfigChangeRequestStatus'
        address:
          type: string
        tag:
          type: string
        activationTime:
          type: string
      type: object
    UnmanagedWallet:
      example:
        assets:
        - lockedAmount: lockedAmount
          address: address
          balance: balance
          id: id
          tag: tag
          activationTime: activationTime
          status: null
        - lockedAmount: lockedAmount
          address: address
          balance: balance
          id: id
          tag: tag
          activationTime: activationTime
          status: null
        name: name
        id: id
        customerRefId: customerRefId
      properties:
        id:
          type: string
        name:
          type: string
        customerRefId:
          type: string
        assets:
          items:
            $ref: '#/components/schemas/WalletAsset'
          type: array
      required:
      - assets
      - id
      - name
      type: object
    GetInternalWalletsResponse:
      items:
        $ref: '#/components/schemas/UnmanagedWallet'
      type: array
    CreateWalletRequest:
      example:
        name: name
        customerRefId: customerRefId
      properties:
        name:
          description: the wallet's display name
          type: string
        customerRefId:
          description: Optional - Sets a customer reference ID
          type: string
      type: object
    CreateInternalWalletAssetRequest:
      example:
        address: address
        tag: tag
      properties:
        address:
          description: "The wallet's address or, for EOS wallets, the account name"
          type: string
        tag:
          description: "for XRP wallets, the destination tag; for EOS, the memo; for\
            \ the fiat providers (BLINC by BCB Group), the Bank Transfer Description"
          type: string
      required:
      - address
      type: object
    SigningKeyDto:
      example:
        createdAt: 124757537
        signingDeviceKeyId: MyKey1
        publicKeyPem: '-----BEGIN PUBLIC KEY ... END PUBLIC KEY-----'
        agentUserId: d18847b5-1df6-4c46-8f99-5cce47284529
        keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
        vaultAccountId: 10
        enabled: true
        algorithm: ECDSA_SECP256K1
      properties:
        keyId:
          description: External signing key id set by Fireblocks.
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          maxLength: 36
          minLength: 36
          type: string
        signingDeviceKeyId:
          description: "The ID, name or label of the key specified on the customer's\
            \ signing device."
          example: MyKey1
          maxLength: 256
          type: string
        publicKeyPem:
          description: PEM encoded public key
          example: '-----BEGIN PUBLIC KEY ... END PUBLIC KEY-----'
          type: string
        algorithm:
          description: "Algorithm and curve used for the signature. Can be: ECDSA_SECP256K1\
            \ or EDDSA_ED25519"
          example: ECDSA_SECP256K1
          type: string
        enabled:
          description: True if the signing key is enabled
          example: true
          type: boolean
        vaultAccountId:
          description: Id of the vault account which this key is linked to
          example: 10
          nullable: true
          type: number
        agentUserId:
          description: Id of user that represent agent servers that can sign with
            the key
          example: d18847b5-1df6-4c46-8f99-5cce47284529
          maxLength: 36
          minLength: 36
          type: string
        createdAt:
          description: Creation date (timestamp) in milliseconds.
          example: 124757537
          type: number
      required:
      - agentUserId
      - algorithm
      - createdAt
      - enabled
      - keyId
      - publicKeyPem
      - signingDeviceKeyId
      - vaultAccountId
      type: object
    GetSigningKeyResponseDto:
      example:
        next: next
        data:
        - createdAt: 124757537
          signingDeviceKeyId: MyKey1
          publicKeyPem: '-----BEGIN PUBLIC KEY ... END PUBLIC KEY-----'
          agentUserId: d18847b5-1df6-4c46-8f99-5cce47284529
          keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
          vaultAccountId: 10
          enabled: true
          algorithm: ECDSA_SECP256K1
        - createdAt: 124757537
          signingDeviceKeyId: MyKey1
          publicKeyPem: '-----BEGIN PUBLIC KEY ... END PUBLIC KEY-----'
          agentUserId: d18847b5-1df6-4c46-8f99-5cce47284529
          keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
          vaultAccountId: 10
          enabled: true
          algorithm: ECDSA_SECP256K1
      properties:
        data:
          description: Response object for getting external signing keys.
          items:
            $ref: '#/components/schemas/SigningKeyDto'
          type: array
        next:
          description: The ID of the next page
          type: string
      required:
      - data
      type: object
    CreateSigningKeyDto:
      example:
        signingDeviceKeyId: MyKey1
        agentUserId: d18847b5-1df6-4c46-8f99-5cce47284529
        signedCertPem: '-----BEGIN CERTIFICATE ... END CERTIFICATE-----'
      properties:
        signingDeviceKeyId:
          description: "The ID, name or label of the key specified on the customer's\
            \ signing device."
          example: MyKey1
          maxLength: 256
          type: string
        signedCertPem:
          description: "The signed certificate that includes the public key PEM of\
            \ the signing key, signed by a validation key."
          example: '-----BEGIN CERTIFICATE ... END CERTIFICATE-----'
          type: string
        agentUserId:
          description: Id of user to which this key belongs
          example: d18847b5-1df6-4c46-8f99-5cce47284529
          maxLength: 36
          minLength: 36
          type: string
      required:
      - agentUserId
      - signedCertPem
      - signingDeviceKeyId
      type: object
    ModifySigningKeyDto:
      example:
        vaultAccountId: 123
      properties:
        vaultAccountId:
          example: 123
          minimum: 1
          type: number
      required:
      - vaultAccountId
      type: object
    ModifySigningKeyAgentIdDto:
      example:
        agentUserId: d18847b5-1df6-4c46-8f99-5cce47284529
      properties:
        agentUserId:
          description: Id of user that represent agent servers which signs with the
            key
          example: d18847b5-1df6-4c46-8f99-5cce47284529
          maxLength: 36
          minLength: 36
          type: string
      required:
      - agentUserId
      type: object
    ValidationKeyDto:
      example:
        createdAt: 12345633
        publicKeyPem: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
        daysTillExpired: 365
        keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
        enabled: false
      properties:
        keyId:
          description: External validation key id set by Fireblocks.
          example: 46a92767-5f93-4a46-9eed-f012196bb4fc
          maxLength: 36
          minLength: 36
          type: string
        publicKeyPem:
          description: PEM encoded public key used for the validation.
          example: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
          type: string
        daysTillExpired:
          example: 365
          minimum: 1
          type: number
        enabled:
          description: True if the validation key is enabled.
          example: false
          type: boolean
        createdAt:
          description: Creation date (timestamp) in milliseconds.
          example: 12345633
          type: number
      required:
      - createdAt
      - daysTillExpired
      - enabled
      - keyId
      - publicKeyPem
      type: object
    GetValidationKeyResponseDto:
      example:
        next: next
        data:
        - createdAt: 12345633
          publicKeyPem: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
          daysTillExpired: 365
          keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
          enabled: false
        - createdAt: 12345633
          publicKeyPem: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
          daysTillExpired: 365
          keyId: 46a92767-5f93-4a46-9eed-f012196bb4fc
          enabled: false
      properties:
        data:
          description: Response object for getting external validation keys.
          items:
            $ref: '#/components/schemas/ValidationKeyDto'
          type: array
        next:
          description: The ID of the next page
          type: string
      required:
      - data
      type: object
    CreateValidationKeyDto:
      example:
        publicKeyPem: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
        daysTillExpired: 365
      properties:
        publicKeyPem:
          description: The PEM encoded public key of the validation key being added
          example: '-----BEGIN PUBLIC KEY ...  END PUBLIC KEY-----'
          type: string
        daysTillExpired:
          description: The number of days from the date the validation key was added
            until it expires
          example: 365
          minimum: 1
          type: number
      required:
      - daysTillExpired
      - publicKeyPem
      type: object
    CreateValidationKeyResponseDto:
      example:
        approvalThreshold: 0
        requestId: 1234
        validationKey: ""
        admins:
        - admins
        - admins
      properties:
        validationKey:
          allOf:
          - $ref: '#/components/schemas/ValidationKeyDto'
          description: Created validation key
        admins:
          description: Admins who have to approve the validation key addition
          items:
            type: string
          type: array
        approvalThreshold:
          description: Minimal number of approvers required. 0 for all
          example: 0
          minimum: 0
          type: number
        requestId:
          description: Approval request id. Can be cancelled
          example: 1234
          type: number
      required:
      - admins
      - approvalThreshold
      - requestId
      - validationKey
      type: object
    ModifyValidationKeyDto:
      example:
        enabled: false
      properties:
        enabled:
          description: Disable validation key
          example: false
          type: boolean
      required:
      - enabled
      type: object
    GetExternalWalletsResponse:
      items:
        $ref: '#/components/schemas/UnmanagedWallet'
      type: array
    WalletAssetAdditionalInfo:
      example:
        accountHolderCity: accountHolderCity
        ibanCity: ibanCity
        abaRoutingNumber: abaRoutingNumber
        accountHolderCountry: accountHolderCountry
        accountHolderGivenName: accountHolderGivenName
        speiName: speiName
        accountHolderDistrict: accountHolderDistrict
        abaAccountNumber: abaAccountNumber
        accountHolderSurname: accountHolderSurname
        accountHolderPostalCode: accountHolderPostalCode
        iban: iban
        ibanCountry: ibanCountry
        accountHolderAddress2: accountHolderAddress2
        accountHolderAddress1: accountHolderAddress1
        speiClabe: speiClabe
        abaCountry: abaCountry
      properties:
        accountHolderGivenName:
          type: string
        accountHolderSurname:
          type: string
        accountHolderCity:
          type: string
        accountHolderCountry:
          type: string
        accountHolderAddress1:
          type: string
        accountHolderAddress2:
          type: string
        accountHolderDistrict:
          type: string
        accountHolderPostalCode:
          type: string
        abaRoutingNumber:
          type: string
        abaAccountNumber:
          type: string
        abaCountry:
          type: string
        iban:
          type: string
        ibanCity:
          type: string
        ibanCountry:
          type: string
        speiClabe:
          type: string
        speiName:
          type: string
      type: object
    ExternalWalletAsset:
      example:
        address: address
        lockedAmount: lockedAmount
        balance: balance
        additionalInfo:
        - accountHolderCity: accountHolderCity
          ibanCity: ibanCity
          abaRoutingNumber: abaRoutingNumber
          accountHolderCountry: accountHolderCountry
          accountHolderGivenName: accountHolderGivenName
          speiName: speiName
          accountHolderDistrict: accountHolderDistrict
          abaAccountNumber: abaAccountNumber
          accountHolderSurname: accountHolderSurname
          accountHolderPostalCode: accountHolderPostalCode
          iban: iban
          ibanCountry: ibanCountry
          accountHolderAddress2: accountHolderAddress2
          accountHolderAddress1: accountHolderAddress1
          speiClabe: speiClabe
          abaCountry: abaCountry
        - accountHolderCity: accountHolderCity
          ibanCity: ibanCity
          abaRoutingNumber: abaRoutingNumber
          accountHolderCountry: accountHolderCountry
          accountHolderGivenName: accountHolderGivenName
          speiName: speiName
          accountHolderDistrict: accountHolderDistrict
          abaAccountNumber: abaAccountNumber
          accountHolderSurname: accountHolderSurname
          accountHolderPostalCode: accountHolderPostalCode
          iban: iban
          ibanCountry: ibanCountry
          accountHolderAddress2: accountHolderAddress2
          accountHolderAddress1: accountHolderAddress1
          speiClabe: speiClabe
          abaCountry: abaCountry
        id: id
        tag: tag
        activationTime: activationTime
        status: null
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/ConfigChangeRequestStatus'
        address:
          type: string
        balance:
          type: string
        lockedAmount:
          type: string
        tag:
          type: string
        activationTime:
          type: string
        additionalInfo:
          items:
            $ref: '#/components/schemas/WalletAssetAdditionalInfo'
          type: array
      type: object
    AddAssetToExternalWalletRequest:
      oneOf:
      - $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf'
      - $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf_1'
    GetContractsResponse:
      items:
        $ref: '#/components/schemas/UnmanagedWallet'
      type: array
    CreateContractRequest:
      example:
        name: name
      properties:
        name:
          description: the contract's display name
          type: string
      type: object
    AddContractAssetRequest:
      example:
        address: address
        tag: tag
      properties:
        address:
          description: The contract's address (or xpub) of the wallet
          type: string
        tag:
          description: "The destination tag, for XRP wallets"
          type: string
      required:
      - address
      type: object
    AssetTypeResponse:
      example:
        nativeAsset: nativeAsset
        decimals: 0.8008281904610115
        name: name
        contractAddress: contractAddress
        id: id
        type: type
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        contractAddress:
          type: string
        nativeAsset:
          type: string
        decimals:
          type: number
      required:
      - id
      - name
      - type
      type: object
    GetSupportedAssetsResponse:
      items:
        $ref: '#/components/schemas/AssetTypeResponse'
      type: array
    RegisterNewAssetRequest:
      example:
        symbol: TST3
        address: 0xe7A9as1oa38bc4da0248s179E30aa94CcF453991
        blockchainId: "(ETH, ETH_TEST5, MATIC_POLYGON)"
      properties:
        blockchainId:
          description: Native asset ID of the blockchain
          example: "(ETH, ETH_TEST5, MATIC_POLYGON)"
          type: string
        address:
          description: |
            Asset address.
            - EVM-based chains: token contract address
            - Stellar (XLM): issuer address
            - Algorand (ALGO): asset ID
            - TRON (TRX): token contract address
            - NEAR: token address
            - Solana: token's mint account address
          example: 0xe7A9as1oa38bc4da0248s179E30aa94CcF453991
          type: string
        symbol:
          description: "Required for Stellar only, asset code is expected."
          example: TST3
          type: string
      required:
      - address
      - blockchainId
      type: object
    AssetResponse:
      example:
        metadata:
          scope: Global
          deprecated: false
        legacyId: TST3_ETH
        assetClass: FT
        onchain:
          standard: ERC20
          symbol: TST3
          address: 0xe7A9as1oa38bc4da0248s179E30aa94CcF453991
          decimals: 18
          name: Test 3
      properties:
        legacyId:
          example: TST3_ETH
          type: string
        assetClass:
          enum:
          - NATIVE
          - FT
          - NFT
          - SFT
          example: FT
          type: string
        onchain:
          $ref: '#/components/schemas/AssetResponse_onchain'
        metadata:
          $ref: '#/components/schemas/AssetResponse_metadata'
      required:
      - assetClass
      - legacyId
      - metadata
      - onchain
      type: object
    AssetBadRequestErrorResponse:
      example:
        code: "3001"
        message: Listing an asset on the requested blockchain is not supported
      properties:
        message:
          description: Bad request error code
          example: Listing an asset on the requested blockchain is not supported
          type: string
        code:
          description: Error code
          example: "3001"
          type: string
      required:
      - code
      - message
      type: object
    AssetForbiddenErrorResponse:
      example:
        code: "3006"
        message: Asset creation quota reached
      properties:
        message:
          description: Forbidden error code
          example: Asset creation quota reached
          type: string
        code:
          description: Error code
          example: "3006"
          type: string
      required:
      - code
      - message
      type: object
    AssetNotFoundErrorResponse:
      example:
        code: "3009"
        message: "Invalid address, could not get asset information"
      properties:
        message:
          description: Not found error code
          example: "Invalid address, could not get asset information"
          type: string
        code:
          description: Error code
          example: "3009"
          type: string
      required:
      - code
      - message
      type: object
    AssetConflictErrorResponse:
      example:
        code: "3002"
        message: Asset already listed
      properties:
        message:
          description: Conflict error code
          example: Asset already listed
          type: string
        code:
          description: Error code
          example: "3002"
          type: string
      required:
      - code
      - message
      type: object
    AssetInternalServerErrorResponse:
      example:
        code: "3005"
        message: Internal server error
      properties:
        message:
          description: Internal server error code
          example: Internal server error
          type: string
        code:
          description: Error code
          example: "3005"
          type: string
      required:
      - code
      - message
      type: object
    GetTransactionOperation:
      description: |
        * `TRANSFER` - Transfers funds from one account to another. UTXO blockchains allow multi-input and multi-output transfers. All other blockchains allow transfers with one source address and one destination address.
        * `MINT` - Mints new tokens. Supported for Stellar, Ripple and EVM-based blockchains.
        * `BURN` - Burns tokens. Supported for Stellar, Ripple and EVM-based blockchains.
        * `CONTRACT_CALL` - Calls a smart contract method for web3 operations on any EVM blockchain. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for building contract call transactions.
        * `TYPED_MESSAGE` - An off-chain message in either Ethereum Personal Message or EIP712 format. Use it to sign specific readable messages that are not actual transactions. [Learn more about typed messages](https://developers.fireblocks.com/docs/typed-message-signing).
        * `RAW` - An off-chain message with no predefined format. Use it to sign any message with your private key, including protocols such as blockchains and custom transaction types that are not natively supported by Fireblocks. [Learn more about raw signing transactions.](https://developers.fireblocks.com/docs/raw-message-signing)
        * `ENABLE_ASSET` - Algorand, DigitalBits, Solana, and Stellar require an on-chain transaction to create an asset wallet and enable the deposit address. This transaction is automatically created when adding assets on these blockchains at a vault account.
        * `STAKE` - Assign assets to a staking pool managed by a staking validator. Supported for Stellar and EVM-based blockchains. This transaction is automatically created when performing staking operations.
        * `UNSTAKE` - Remove assets from a staking pool managed by a staking validator. Supported for Stellar and EVM-based blockchains. This transaction is automatically created when performing staking operations.
        * `WITHDRAW` - Transfer assets from a dedicated staking vault account to another address. Supported for Stellar and EVM-based blockchains. This transaction is automatically created when performing staking operations.

            **Note:** Fireblocks will rename this type from `WITHDRAW` to a different type name soon. There will be a 7-day notice regarding the new type name.

        * `SUPPLY_TO_COMPOUND` - Deprecated since April 1st, 2023. Older transactions may have this as their operation, in case users in the workspace have used the direct integration between Fireblocks and the Compound DeFI protocol.
        * `REDEEM_FROM_COMPOUND` - Deprecated since April 1st, 2023. Older transactions may have this as their operation, in case users in the workspace have used the direct integration between Fireblocks and the Compound DeFI protocol.
      enum:
      - TRANSFER
      - BURN
      - CONTRACT_CALL
      - MINT
      - RAW
      - TYPED_MESSAGE
      - ENABLE_ASSET
      - STAKE
      - UNSTAKE
      - WITHDRAW
      - REDEEM_FROM_COMPOUND
      - SUPPLY_TO_COMPOUND
      type: string
    TransferPeerPathType:
      enum:
      - VAULT_ACCOUNT
      - EXCHANGE_ACCOUNT
      - INTERNAL_WALLET
      - EXTERNAL_WALLET
      - CONTRACT
      - NETWORK_CONNECTION
      - FIAT_ACCOUNT
      - COMPOUND
      - GAS_STATION
      - ONE_TIME_ADDRESS
      - UNKNOWN
      - END_USER_WALLET
      type: string
    SourceTransferPeerPathResponse:
      description: Source of the transaction.
      example:
        walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subType: subType
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TransferPeerPathType'
        subType:
          description: "In case the type is set to `EXCHANGE_ACCOUNT` or `FIAT_ACCOUNT`,\
            \ the specific exchange vendor name or fiat vendor name. In case the type\
            \ is set to `INTERNAL_WALLET` or `EXTERNAL_WALLET`, the subType is set\
            \ to `Internal` or `External`."
          type: string
        id:
          description: "The ID of the peer. You can retrieve the ID of each venue\
            \ object using the endpoints for [listing vault accounts](https://developers.fireblocks.com/reference/get_vault-accounts-paged),\
            \ [listing exchange account](https://developers.fireblocks.com/reference/get_exchange-accounts),\
            \ [listing fiat accounts](https://developers.fireblocks.com/reference/get_fiat-accounts),\
            \ [listing internal wallets](https://developers.fireblocks.com/reference/get_internal-wallets),\
            \ [listing external wallets](https://developers.fireblocks.com/reference/get_external-wallets),\
            \ [listing network connections](https://developers.fireblocks.com/reference/get_network-connections).\
            \ For the other types, this parameter is not needed."
          nullable: true
          type: string
        name:
          description: The name of the peer.
          type: string
        walletId:
          format: uuid
          type: string
      required:
      - type
      type: object
    DestinationTransferPeerPathResponse:
      description: |-
        Destination of the transaction.

        **Note:** In case the transaction is sent to multiple destinations, the `destinations` parameter is be used instead of this.
      example:
        walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subType: subType
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TransferPeerPathType'
        subType:
          description: "In case the type is set to `EXCHANGE_ACCOUNT` or `FIAT_ACCOUNT`,\
            \ the specific exchange vendor name or fiat vendor name.In case the type\
            \ is set to `INTERNAL_WALLET` or `EXTERNAL_WALLET`, the subType is set\
            \ to `Internal` or `External`."
          type: string
        id:
          description: "The ID of the peer. You can retrieve the ID of each venue\
            \ object using the endpoints for [listing vault accounts](https://developers.fireblocks.com/reference/get_vault-accounts-paged),\
            \ [listing exchange account](https://developers.fireblocks.com/reference/get_exchange-accounts),\
            \ [listing fiat accounts](https://developers.fireblocks.com/reference/get_fiat-accounts),\
            \ [listing internal wallets](https://developers.fireblocks.com/reference/get_internal-wallets),\
            \ [listing external wallets](https://developers.fireblocks.com/reference/get_external-wallets),\
            \ [listing network connections](https://developers.fireblocks.com/reference/get_network-connections).\
            \ For the other types, this parameter is not needed."
          nullable: true
          type: string
        name:
          description: The name of the peer.
          type: string
        walletId:
          format: uuid
          type: string
      required:
      - type
      type: object
    AmlScreeningResult:
      description: The result of the AML screening.
      example:
        provider: provider
        payload: "{}"
      properties:
        provider:
          type: string
        payload:
          type: object
      type: object
    AuthorizationGroups:
      example:
        th: 0.8008281904610115
        users:
          key: PENDING_AUTHORIZATION
      properties:
        th:
          type: number
        users:
          additionalProperties:
            enum:
            - PENDING_AUTHORIZATION
            - APPROVED
            - REJECTED
            - NA
            type: string
          type: object
      type: object
    AuthorizationInfo:
      description: "The information about your [Transaction Authorization Policy (TAP).](https://developers.fireblocks.com/docs/capabilities#transaction-authorization-policy-tap)"
      example:
        allowOperatorAsAuthorizer: true
        groups:
        - th: 0.8008281904610115
          users:
            key: PENDING_AUTHORIZATION
        - th: 0.8008281904610115
          users:
            key: PENDING_AUTHORIZATION
        logic: AND
      properties:
        allowOperatorAsAuthorizer:
          type: boolean
        logic:
          enum:
          - AND
          - OR
          type: string
        groups:
          items:
            $ref: '#/components/schemas/AuthorizationGroups'
          type: array
      type: object
    TransactionResponseDestination:
      example:
        amount: amount
        amountUSD: amountUSD
        authorizationInfo:
          allowOperatorAsAuthorizer: true
          groups:
          - th: 0.8008281904610115
            users:
              key: PENDING_AUTHORIZATION
          - th: 0.8008281904610115
            users:
              key: PENDING_AUTHORIZATION
          logic: AND
        destinationAddress: ""
        amlScreeningResult:
          provider: provider
          payload: "{}"
        destination:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: subType
          id: id
          type: null
        destinationAddressDescription: ""
      properties:
        destinationAddress:
          description: Address where the asset was transferred.
        destinationAddressDescription:
          description: Description of the address.
        amount:
          description: The amount to be sent to this destination.
          type: string
        amountUSD:
          description: The USD value of the requested amount.
          type: string
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPathResponse'
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
      type: object
    AmountInfo:
      description: The details of the requested amount to transfer.
      example:
        amount: amount
        amountUSD: amountUSD
        netAmount: netAmount
        requestedAmount: requestedAmount
      properties:
        amount:
          description: "If the transfer is a withdrawal from an exchange, the actual\
            \ amount that was requested to be transferred. Otherwise, the requested\
            \ amount."
          type: string
        requestedAmount:
          description: The amount requested by the user.
          type: string
        netAmount:
          description: "The net amount of the transaction, after fee deduction."
          type: string
        amountUSD:
          description: The USD value of the requested amount.
          type: string
      type: object
    FeeInfo:
      description: Details of the transaction's fee.
      example:
        serviceFee: serviceFee
        networkFee: networkFee
        gasPrice: gasPrice
      properties:
        networkFee:
          description: The fee paid to the network
          type: string
        serviceFee:
          description: The total fee deducted by the exchange from the actual requested
            amount (serviceFee = amount - netAmount)
          type: string
        gasPrice:
          type: string
      type: object
    RewardInfo:
      description: "This field is relevant only for Algorand transactions. Both `srcRewards`\
        \ and `destRewards` will appear only for Vault to Vault transactions, otherwise\
        \ you will receive only the Fireblocks’ side of the transaction."
      example:
        destRewards: destRewards
        srcRewards: srcRewards
      properties:
        srcRewards:
          type: string
        destRewards:
          type: string
      type: object
    NetworkRecord:
      example:
        amountUSD: amountUSD
        destinationAddress: destinationAddress
        sourceAddress: sourceAddress
        netAmount: netAmount
        networkFee: networkFee
        destination:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: subType
          id: id
          type: null
        index: 6.027456183070403
        source:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: subType
          id: id
          type: null
        type: type
        isDropped: true
        rewardInfo:
          destRewards: destRewards
          srcRewards: srcRewards
        assetId: assetId
        txHash: txHash
      properties:
        source:
          $ref: '#/components/schemas/SourceTransferPeerPathResponse'
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPathResponse'
        txHash:
          type: string
        networkFee:
          type: string
        assetId:
          type: string
          x-fb-entity: asset
        netAmount:
          description: "The net amount of the transaction, after fee deduction"
          type: string
        isDropped:
          type: boolean
        type:
          type: string
        destinationAddress:
          type: string
        sourceAddress:
          type: string
        amountUSD:
          type: string
        index:
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
      type: object
    ComplianceScreeningResult:
      example:
        provider: provider
        payload: "{}"
        bypassReason: bypassReason
        screeningStatus: COMPLETED
        timestamp: 5.637376656633329
      properties:
        provider:
          type: string
        payload:
          description: |
            The payload of the screening result.
            The payload is a JSON object that contains the screening result.
            The payload is different for each screening provider.
          type: object
        bypassReason:
          type: string
        screeningStatus:
          enum:
          - COMPLETED
          - PENDING
          - BYPASSED
          - FAILED
          - FROZEN
          type: string
        timestamp:
          format: date-time
          type: number
      type: object
    AmlRegistrationResult:
      example:
        provider: provider
        success: true
        timestamp: 2.3021358869347655
      properties:
        provider:
          type: string
        success:
          type: boolean
        timestamp:
          type: number
      type: object
    ComplianceResult:
      description: The result of the Compliance AML/Travel Rule screening.
      example:
        aml:
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        amlRegistration:
        - provider: provider
          success: true
          timestamp: 2.3021358869347655
        - provider: provider
          success: true
          timestamp: 2.3021358869347655
        amlList:
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        tr:
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        - provider: provider
          payload: "{}"
          bypassReason: bypassReason
          screeningStatus: COMPLETED
          timestamp: 5.637376656633329
        status: Started
      properties:
        aml:
          description: The end result of the AML screening.
          items:
            $ref: '#/components/schemas/ComplianceScreeningResult'
          type: array
        tr:
          description: The result of the Travel Rule screening.
          items:
            $ref: '#/components/schemas/ComplianceScreeningResult'
          type: array
        amlList:
          description: The list of all results of the AML screening.
          items:
            $ref: '#/components/schemas/ComplianceScreeningResult'
          type: array
        status:
          description: Status of compliance result screening.
          enum:
          - Started
          - AMLStarted
          - AMLCompleted
          - AMLFailed
          - AMLInBackground
          - TRStarted
          - TRCompleted
          - TRFailed
          - Completed
          - RegistrationStarted
          - AMLRegistrationStarted
          - AMLRegistrationCompleted
          - TRUpdateStarted
          - TRUpdateCompleted
          - UpdateCompleted
          - IncomingStarted
          - AMLIncomingStarted
          - AMLIncomingCompleted
          - AMLIncomingFailed
          - AMLIncomingInBackground
          - TRIncomingStarted
          - TRIncomingCompleted
          - TRIncomingFailed
          - IncomingCompleted
          type: string
        amlRegistration:
          description: The results of the AML address registration.
          items:
            $ref: '#/components/schemas/AmlRegistrationResult'
          type: array
      type: object
    ExtraParameters:
      description: |
        Additional protocol / operation specific key-value parameters:

        For UTXO-based blockchain input selection, add the key `inputsSelection` with the value set the [input selection structure.](https://developers.fireblocks.com/reference/transaction-objects#inputsselection) The inputs can be retrieved from the [Retrieve Unspent Inputs endpoint.](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid-assetid-unspent-inputs)

        For `RAW` operations, add the key `rawMessageData` with the value set to the [raw message data structure.](https://developers.fireblocks.com/reference/raw-signing-objects#rawmessagedata)

        For `CONTRACT_CALL` operations, add the key `contractCallData` with the value set to the Ethereum smart contract Application Binary Interface (ABI) payload. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for building contract call transactions.
      properties: {}
      type: object
    SignedMessage:
      description: A list of signed messages returned for raw signing.
      example:
        derivationPath:
        - 7.061401241503109
        - 7.061401241503109
        signature:
          r: r
          s: s
          fullSig: fullSig
          v: 9.301444243932576
        publicKey: publicKey
        content: content
        algorithm: MPC_ECDSA_SECP256K1
      properties:
        content:
          type: string
        algorithm:
          enum:
          - MPC_ECDSA_SECP256K1
          - MPC_EDDSA_ED25519
          type: string
        derivationPath:
          items:
            type: number
          type: array
        signature:
          $ref: '#/components/schemas/SignedMessage_signature'
        publicKey:
          type: string
      type: object
    SignedMessages:
      items:
        $ref: '#/components/schemas/SignedMessage'
      type: array
    BlockInfo:
      description: |-
        The block hash and height of the block that this transaction was mined in.
             **Note**: If an outgoing transaction uses the destinations object with more than one value in the array, blockHash is set to null.
      example:
        blockHash: blockHash
        blockHeight: blockHeight
      properties:
        blockHeight:
          type: string
        blockHash:
          nullable: true
          type: string
      type: object
    SystemMessageInfo:
      example:
        type: WARN
        message: Slow transaction processing. Outgoing transactions might be stuck.
      properties:
        type:
          enum:
          - WARN
          - BLOCK
          type: string
        message:
          description: "A response from Fireblocks that communicates a message about\
            \ the health of the process being performed. If this object is returned\
            \ with data, you should expect potential delays or incomplete transaction\
            \ statuses."
          example: Slow transaction processing. Outgoing transactions might be stuck.
          type: string
      type: object
    TransactionResponse:
      example:
        note: note
        authorizationInfo:
          allowOperatorAsAuthorizer: true
          groups:
          - th: 0.8008281904610115
            users:
              key: PENDING_AUTHORIZATION
          - th: 0.8008281904610115
            users:
              key: PENDING_AUTHORIZATION
          logic: AND
        amountUSD: 1.0246457001441578
        destinationAddress: destinationAddress
        contractCallDecodedData:
          functionCalls:
          - "{}"
          - "{}"
          contractName: contractName
        errorDescription: errorDescription
        signedBy:
        - signedBy
        - signedBy
        destinationTag: destinationTag
        networkFee: 7.457744773683766
        fee: 6.84685269835264
        destination:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: subType
          id: id
          type: null
        feeCurrency: feeCurrency
        extraParameters: "{}"
        source:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: subType
          id: id
          type: null
        externalTxId: externalTxId
        networkRecords:
        - amountUSD: amountUSD
          destinationAddress: destinationAddress
          sourceAddress: sourceAddress
          netAmount: netAmount
          networkFee: networkFee
          destination:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          index: 6.027456183070403
          source:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          type: type
          isDropped: true
          rewardInfo:
            destRewards: destRewards
            srcRewards: srcRewards
          assetId: assetId
          txHash: txHash
        - amountUSD: amountUSD
          destinationAddress: destinationAddress
          sourceAddress: sourceAddress
          netAmount: netAmount
          networkFee: networkFee
          destination:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          index: 6.027456183070403
          source:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          type: type
          isDropped: true
          rewardInfo:
            destRewards: destRewards
            srcRewards: srcRewards
          assetId: assetId
          txHash: txHash
        createdAt: 1.4658129805029452
        lastUpdated: 5.962133916683182
        feeInfo:
          serviceFee: serviceFee
          networkFee: networkFee
          gasPrice: gasPrice
        assetId: assetId
        id: id
        tag: tag
        txHash: txHash
        blockInfo:
          blockHash: blockHash
          blockHeight: blockHeight
        serviceFee: 1.4894159098541704
        amount: 7.386281948385884
        sourceAddress: sourceAddress
        netAmount: 1.2315135367772556
        addressType: ""
        destinations:
        - amount: amount
          amountUSD: amountUSD
          authorizationInfo:
            allowOperatorAsAuthorizer: true
            groups:
            - th: 0.8008281904610115
              users:
                key: PENDING_AUTHORIZATION
            - th: 0.8008281904610115
              users:
                key: PENDING_AUTHORIZATION
            logic: AND
          destinationAddress: ""
          amlScreeningResult:
            provider: provider
            payload: "{}"
          destination:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          destinationAddressDescription: ""
        - amount: amount
          amountUSD: amountUSD
          authorizationInfo:
            allowOperatorAsAuthorizer: true
            groups:
            - th: 0.8008281904610115
              users:
                key: PENDING_AUTHORIZATION
            - th: 0.8008281904610115
              users:
                key: PENDING_AUTHORIZATION
            logic: AND
          destinationAddress: ""
          amlScreeningResult:
            provider: provider
            payload: "{}"
          destination:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: subType
            id: id
            type: null
          destinationAddressDescription: ""
        signedMessages:
        - derivationPath:
          - 7.061401241503109
          - 7.061401241503109
          signature:
            r: r
            s: s
            fullSig: fullSig
            v: 9.301444243932576
          publicKey: publicKey
          content: content
          algorithm: MPC_ECDSA_SECP256K1
        - derivationPath:
          - 7.061401241503109
          - 7.061401241503109
          signature:
            r: r
            s: s
            fullSig: fullSig
            v: 9.301444243932576
          publicKey: publicKey
          content: content
          algorithm: MPC_ECDSA_SECP256K1
        index: 2.027123023002322
        amountInfo:
          amount: amount
          amountUSD: amountUSD
          netAmount: netAmount
          requestedAmount: requestedAmount
        customerRefId: customerRefId
        subStatus: subStatus
        treatAsGrossAmount: true
        systemMessages:
          type: WARN
          message: Slow transaction processing. Outgoing transactions might be stuck.
        rejectedBy: rejectedBy
        numOfConfirmations: 3.616076749251911
        createdBy: createdBy
        exchangeTxId: exchangeTxId
        rewardInfo:
          destRewards: destRewards
          srcRewards: srcRewards
        amlScreeningResult:
          provider: provider
          payload: "{}"
        destinationAddressDescription: destinationAddressDescription
        requestedAmount: 4.145608029883936
        complianceResult:
          aml:
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          amlRegistration:
          - provider: provider
            success: true
            timestamp: 2.3021358869347655
          - provider: provider
            success: true
            timestamp: 2.3021358869347655
          amlList:
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          tr:
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          - provider: provider
            payload: "{}"
            bypassReason: bypassReason
            screeningStatus: COMPLETED
            timestamp: 5.637376656633329
          status: Started
        operation: null
        status: status
      properties:
        id:
          description: ID of the transaction.
          type: string
        externalTxId:
          description: "Unique transaction ID provided by the user. Fireblocks highly\
            \ recommends setting an `externalTxId` for every transaction created,\
            \ to avoid submitting the same transaction twice."
          type: string
        status:
          description: "The primary status of the transaction. For details, see [Primary\
            \ transaction statuses](https://developers.fireblocks.com/reference/primary-transaction-statuses)."
          type: string
        subStatus:
          description: "See [Transaction substatuses](https://developers.fireblocks.com/reference/transaction-substatuses)\
            \ for the list of transaction sub statuses."
          type: string
        txHash:
          description: |-
            The hash of the transaction on the blockchain.
             * This parameter exists if at least one of the following conditions is met:

                 1. The transaction’s source type is `UNKNOWN`, `WHITELISTED_ADDRESS`, `NETWORK_CONNECTION`, `ONE_TIME_ADDRESS`, `FIAT_ACCOUNT` or `GAS_STATION`.

                 2. The transaction’s source type is `VAULT` and the status is either: `CONFIRMING`, `COMPLETED`, or was in any of these statuses prior to changing to `FAILED` or `REJECTED`. In some instances, transactions in status `BROADCASTING` will include the txHash as well.

                 3. The transaction’s source type is `EXCHANGE_ACCOUNT` and the transaction’s destination type is `VAULT`, and the status is either: `CONFIRMING`, `COMPLETED`, or was in any of these status prior to changing to `FAILED`.


            * In addition, the following conditions must be met:

                1. The asset is a crypto asset (not fiat).

                2. The transaction operation is not RAW or `TYPED_MESSAGE`.
          type: string
        operation:
          $ref: '#/components/schemas/GetTransactionOperation'
        note:
          description: "Custom note, not sent to the blockchain, that describes the\
            \ transaction at your Fireblocks workspace."
          type: string
        assetId:
          description: "The ID of the asset to transfer, for `TRANSFER`, `MINT`, `BURN`,\
            \ `ENABLE_ASSET`,`STAKE` ,`UNSTAKE` or `WITHDRAW` operations. [See the\
            \ list of supported assets and their IDs on Fireblocks.](https://developers.fireblocks.com/reference/get_supported-assets)"
          type: string
          x-fb-entity: asset
        source:
          $ref: '#/components/schemas/SourceTransferPeerPathResponse'
        sourceAddress:
          description: |-
            For account based assets only, the source address of the transaction.
            **Note:** If the status is `CONFIRMING`, `COMPLETED`, or has been `CONFIRMING`; then moved forward to `FAILED` or `REJECTED`, then this parameter will contain the source address. In any other case, this parameter will be empty.
          type: string
        tag:
          description: "Source address tag for XRP, used as memo for EOS/XLM, or Bank\
            \ Transfer Description for the fiat provider BLINC (by BCB Group)."
          type: string
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPathResponse'
        destinations:
          description: |-
            The transaction’s destinations.
            **Note:** In case the transaction is sent to a single destination, the `destination` parameter is used instead of this.
          items:
            $ref: '#/components/schemas/TransactionResponseDestination'
          type: array
        destinationAddress:
          description: |-
            Address where the asset were transferred.
            Notes:
              - For [Multi destination transactions](https://support.fireblocks.io/hc/en-us/articles/360018447980-Multi-destination-transactions), this parameter will be empty. In this case, you should refer to the destinations field.
              - If the status is `CONFIRMING`, `COMPLETED`, or has been `CONFIRMING`; then moved forward to `FAILED` or `REJECTED`, then this parameter will contain the destination address. In any other case, this parameter will be empty.
          type: string
        destinationAddressDescription:
          description: Description of the address.
          type: string
        destinationTag:
          description: "Destination address tag for XRP, used as memo for EOS/XLM,\
            \ or Bank Transfer Description for the fiat provider BLINC (by BCB Group)."
          type: string
        contractCallDecodedData:
          $ref: '#/components/schemas/TransactionResponse_contractCallDecodedData'
        amountInfo:
          $ref: '#/components/schemas/AmountInfo'
        treatAsGrossAmount:
          description: |-
            For transactions initiated via this Fireblocks workspace, when set to `true`, the fee is deducted from the requested amount.

            **Note**: This parameter can only be considered if a transaction's asset is a base asset, such as ETH or MATIC. If the asset can't be used for transaction fees, like USDC, this parameter is ignored and the fee is deducted from the relevant base asset wallet in the source account.
          type: boolean
        feeInfo:
          $ref: '#/components/schemas/FeeInfo'
        feeCurrency:
          description: "The asset which was withdrawn to pay the transaction fee,\
            \ for example ETH for EVM-based blockchains, BTC for Tether Omni."
          type: string
        networkRecords:
          description: "In case a single transaction resulted with multiple transfers,\
            \ for example a result of a contract call, then this parameter specifies\
            \ each transfer that took place on the blockchain. In case of a single\
            \ transfer transaction, this parameter is empty."
          items:
            $ref: '#/components/schemas/NetworkRecord'
          type: array
        createdAt:
          description: "The transaction’s creation date and time, in unix timestamp."
          type: number
        lastUpdated:
          description: "The transaction’s last update date and time, in unix timestamp."
          type: number
        createdBy:
          description: User ID of the initiator of the transaction.
          type: string
        signedBy:
          description: User ID’s of the signers of the transaction.
          items:
            type: string
          type: array
        rejectedBy:
          description: User ID of the user that rejected the transaction (in case
            it was rejected).
          type: string
        authorizationInfo:
          $ref: '#/components/schemas/AuthorizationInfo'
        exchangeTxId:
          description: "If the transaction originated from an exchange, this is the\
            \ ID of this transaction at the exchange."
          type: string
        customerRefId:
          description: The ID for AML providers to associate the owner of funds with
            transactions.
          type: string
        amlScreeningResult:
          $ref: '#/components/schemas/AmlScreeningResult'
        complianceResult:
          $ref: '#/components/schemas/ComplianceResult'
        extraParameters:
          description: |
            Additional protocol / operation specific key-value parameters:

            For UTXO-based blockchain input selection, add the key `inputsSelection` with the value set the [input selection structure.](https://developers.fireblocks.com/reference/transaction-objects#inputsselection) The inputs can be retrieved from the [Retrieve Unspent Inputs endpoint.](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid-assetid-unspent-inputs)

            For `RAW` operations, add the key `rawMessageData` with the value set to the [raw message data structure.](https://developers.fireblocks.com/reference/raw-signing-objects#rawmessagedata)

            For `CONTRACT_CALL` operations, add the key `contractCallData` with the value set to the Ethereum smart contract Application Binary Interface (ABI) payload. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for building contract call transactions.
          properties: {}
          type: object
        signedMessages:
          items:
            $ref: '#/components/schemas/SignedMessage'
          type: array
        numOfConfirmations:
          description: The number of confirmations of the transaction. The number
            will increase until the transaction will be considered completed according
            to the confirmation policy.
          type: number
        blockInfo:
          $ref: '#/components/schemas/BlockInfo'
        index:
          description: |-
            For UTXO based assets this is the vOut, for Ethereum based, this is the index of the event of the contract call.
             **Note:** This field is not returned if a transaction uses the `destinations` object with more than one value.
          type: number
        rewardInfo:
          $ref: '#/components/schemas/RewardInfo'
        systemMessages:
          $ref: '#/components/schemas/SystemMessageInfo'
        addressType:
          enum:
          - ""
          - WHITELISTED
          - ONE_TIME
          type: string
        requestedAmount:
          deprecated: true
          description: The amount requested by the user. Deprecated - please use the
            `amountInfo` field for accuracy.
          type: number
        amount:
          deprecated: true
          description: "If the transfer is a withdrawal from an exchange, the actual\
            \ amount that was requested to be transferred. Otherwise, the requested\
            \ amount. Deprecated - please use the `amountInfo` field for accuracy."
          type: number
        netAmount:
          deprecated: true
          description: "The net amount of the transaction, after fee deduction. Deprecated\
            \ - please use the `amountInfo` field for accuracy."
          type: number
        amountUSD:
          deprecated: true
          description: The USD value of the requested amount. Deprecated - please
            use the `amountInfo` field for accuracy.
          nullable: true
          type: number
        serviceFee:
          deprecated: true
          description: The total fee deducted by the exchange from the actual requested
            amount (`serviceFee` = `amount` - `netAmount`). Deprecated - please use
            the `feeInfo` field for accuracy.
          type: number
        fee:
          deprecated: true
          description: Deprecated - please use the `feeInfo` field for accuracy.
          type: number
        networkFee:
          deprecated: true
          description: The fee paid to the network. Deprecated - please use the `feeInfo`
            field for accuracy.
          type: number
        errorDescription:
          description: The transaction's revert reason. This field will be returned
            when  `subStatus` =  'SMART_CONTRACT_EXECUTION_FAILED'.
          type: string
      type: object
    GetTransactionsResponse:
      items:
        $ref: '#/components/schemas/TransactionResponse'
      type: array
    TransactionOperation:
      default: TRANSFER
      description: |
        * `TRANSFER` - The default value for an operation. Transfers funds from one account to another. UTXO blockchains allow multi-input and multi-output transfers. All other blockchains allow transfers with one source address and one destination address.
        * `MINT` - Mints new tokens. Supported for Stellar, Ripple and EVM-based blockchains.
        * `BURN` - Burns tokens. Supported for Stellar, Ripple and EVM-based blockchains.
        * `CONTRACT_CALL` - Calls a smart contract method for web3 operations on any EVM blockchain. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for building contract call transactions.
        * `TYPED_MESSAGE` - An off-chain message in either Ethereum Personal Message or EIP712 format. Use it to sign specific readable messages that are not actual transactions. [Learn more about typed messages](https://developers.fireblocks.com/docs/typed-message-signing).
        * `RAW` - An off-chain message with no predefined format. Use it to sign any message with your private key, including protocols such as blockchains and custom transaction types that are not natively supported by Fireblocks. [Learn more about raw signing transactions.](https://developers.fireblocks.com/docs/raw-message-signing)
      enum:
      - TRANSFER
      - BURN
      - CONTRACT_CALL
      - MINT
      - RAW
      - TYPED_MESSAGE
      type: string
    TransferPeerPathSubType:
      enum:
      - BINANCE
      - BINANCEUS
      - BITFINEX
      - BITHUMB
      - BITMEX
      - BITSO
      - BITSTAMP
      - BITTREX
      - BLINC
      - BYBIT
      - CIRCLE
      - COINBASEEXCHANGE
      - COINBASEPRO
      - COINMETRO
      - COINSPRO
      - CRYPTOCOM
      - DERIBIT
      - GEMINI
      - HITBTC
      - HUOBI
      - INDEPENDENTRESERVE
      - KORBIT
      - KRAKEN
      - KRAKENINTL
      - KUCOIN
      - LIQUID
      - OKCOIN
      - OKEX
      - PAXOS
      - POLONIEX
      - External
      - Internal
      type: string
    SourceTransferPeerPath:
      description: The source of the transaction.
      example:
        walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subType: null
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TransferPeerPathType'
        subType:
          $ref: '#/components/schemas/TransferPeerPathSubType'
        id:
          type: string
        name:
          type: string
        walletId:
          format: uuid
          type: string
      required:
      - type
      type: object
    OneTimeAddress:
      example:
        address: address
        tag: tag
      properties:
        address:
          type: string
        tag:
          type: string
      required:
      - address
      type: object
    DestinationTransferPeerPath:
      description: The destination of the transaction.
      example:
        oneTimeAddress:
          address: address
          tag: tag
        walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subType: null
        id: id
        type: null
      properties:
        type:
          $ref: '#/components/schemas/TransferPeerPathType'
        subType:
          $ref: '#/components/schemas/TransferPeerPathSubType'
        id:
          type: string
        name:
          type: string
        walletId:
          format: uuid
          type: string
        oneTimeAddress:
          $ref: '#/components/schemas/OneTimeAddress'
      required:
      - type
      type: object
    TransactionRequestDestination:
      example:
        amount: amount
        destination:
          oneTimeAddress:
            address: address
            tag: tag
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: null
          id: id
          type: null
      properties:
        amount:
          type: string
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
      type: object
    TravelRuleTransactionBlockchainInfo:
      properties:
        txHash:
          type: string
        origin:
          type: string
        destination:
          type: string
      type: object
    TravelRulePiiIVMS:
      properties:
        fullName:
          type: string
        dateOfBirth:
          type: string
        placeOfBirth:
          type: string
        address:
          type: string
        identificationNumber:
          type: string
        nationality:
          type: string
        countryOfResidence:
          type: string
        taxIdentificationNumber:
          type: string
        customerNumber:
          type: string
      type: object
    TravelRuleOwnershipProof:
      properties:
        type:
          description: Type of ownership proof
          example: passport
          type: string
        proof:
          description: Identification number
          example: "123456789"
          type: string
      type: object
    TravelRuleCreateTransactionRequest:
      example:
        originatorProof: ""
        originator: ""
        beneficiaryVASPname: beneficiaryVASPname
        pii: ""
        protocol: protocol
        skipBeneficiaryDataValidation: true
        beneficiary: ""
        encrypted: encrypted
        travelRuleBehavior: true
        transactionBlockchainInfo: ""
        beneficiaryProof: ""
        originatorVASPdid: originatorVASPdid
        beneficiaryVASPdid: beneficiaryVASPdid
      properties:
        originatorVASPdid:
          description: The VASP ID of the transaction originator
          type: string
        beneficiaryVASPdid:
          description: The VASP ID of the transaction beneficiary
          type: string
        beneficiaryVASPname:
          description: The name of the VASP acting as the beneficiary
          type: string
        transactionBlockchainInfo:
          allOf:
          - $ref: '#/components/schemas/TravelRuleTransactionBlockchainInfo'
          description: Information about the blockchain transaction
        originator:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Information about the originator of the transaction
        beneficiary:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Information about the beneficiary of the transaction
        encrypted:
          description: Encrypted data related to the transaction
          type: string
        protocol:
          description: The protocol used to perform the travel rule
          type: string
        skipBeneficiaryDataValidation:
          description: Whether to skip validation of beneficiary data
          type: boolean
        travelRuleBehavior:
          description: Whether to check if the transaction is a TRAVEL_RULE in the
            beneficiary VASP's jurisdiction
          type: boolean
        originatorProof:
          allOf:
          - $ref: '#/components/schemas/TravelRuleOwnershipProof'
          description: Ownership proof related to the originator of the transaction
        beneficiaryProof:
          allOf:
          - $ref: '#/components/schemas/TravelRuleOwnershipProof'
          description: Ownership proof related to the beneficiary of the transaction
        pii:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Personal identifiable information related to the transaction
      required:
      - beneficiary
      - originator
      type: object
    TransactionRequest:
      example:
        note: Ticket 123
        priorityFee: "2"
        networkFee: TransactionRequest_networkFee
        fee: TransactionRequest_fee
        destination:
          oneTimeAddress:
            address: address
            tag: tag
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: null
          id: id
          type: null
        extraParameters: "{}"
        source:
          walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          subType: null
          id: id
          type: null
        maxFee: "120"
        externalTxId: 00000000-0000-0000-0000-000000000000
        cpuStaking: null
        gasLimit: "21000"
        failOnLowFee: true
        assetId: ETH
        feeLevel: MEDIUM
        gasPrice: TransactionRequest_gasPrice
        forceSweep: false
        amount: "0.02"
        destinations:
        - amount: amount
          destination:
            oneTimeAddress:
              address: address
              tag: tag
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
        - amount: amount
          destination:
            oneTimeAddress:
              address: address
              tag: tag
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
        travelRuleMessage:
          originatorProof: ""
          originator: ""
          beneficiaryVASPname: beneficiaryVASPname
          pii: ""
          protocol: protocol
          skipBeneficiaryDataValidation: true
          beneficiary: ""
          encrypted: encrypted
          travelRuleBehavior: true
          transactionBlockchainInfo: ""
          beneficiaryProof: ""
          originatorVASPdid: originatorVASPdid
          beneficiaryVASPdid: beneficiaryVASPdid
        customerRefId: abcdef
        treatAsGrossAmount: false
        networkStaking: TransactionRequest_networkStaking
        autoStaking: true
        operation: null
        replaceTxByHash: 00000000-0000-0000-0000-000000000000
      properties:
        operation:
          $ref: '#/components/schemas/TransactionOperation'
        note:
          description: "Custom note, not sent to the blockchain, to describe the transaction\
            \ at your Fireblocks workspace."
          example: Ticket 123
          type: string
        externalTxId:
          description: "An optional but highly recommended parameter. Fireblocks will\
            \ reject future transactions with same ID. \nYou should set this to a\
            \ unique ID representing the transaction, to avoid submitting the same\
            \ transaction twice. This helps with cases where submitting the transaction\
            \ responds with an error code due to Internet interruptions, but the transaction\
            \ was actually sent and processed. To validate whether a transaction has\
            \ been processed, [Find a specific transaction by external transaction\
            \ ID](https://developers.fireblocks.com/reference/get_transactions-external-tx-id-externaltxid).\n\
            There is no specific format required for this parameter."
          example: 00000000-0000-0000-0000-000000000000
          type: string
        assetId:
          description: "The ID of the asset to transfer, for `TRANSFER`, `MINT` or\
            \ `BURN` operations. [See the list of supported assets and their IDs on\
            \ Fireblocks.](https://developers.fireblocks.com/reference/get_supported-assets)"
          example: ETH
          type: string
          x-fb-entity: asset
        source:
          $ref: '#/components/schemas/SourceTransferPeerPath'
        destination:
          $ref: '#/components/schemas/DestinationTransferPeerPath'
        destinations:
          description: "For UTXO based blockchains, you can send a single transaction\
            \ to multiple destinations."
          items:
            $ref: '#/components/schemas/TransactionRequestDestination'
          type: array
        amount:
          $ref: '#/components/schemas/TransactionRequest_amount'
        treatAsGrossAmount:
          description: |-
            "When set to `true`, the fee will be deducted from the requested amount."

            **Note**: This parameter can only be considered if a transaction’s asset is a base asset, such as ETH or MATIC. If the asset can’t be used for transaction fees, like USDC, this parameter is ignored and the fee is deducted from the relevant base asset wallet in the source account.
          example: false
          type: boolean
        forceSweep:
          description: |-
            For Polkadot, Kusama and Westend transactions only. When set to true, Fireblocks will empty the asset wallet.

               **Note:** If set to true when the source account is exactly 1 DOT, the transaction will fail. Any amount more or less than 1 DOT succeeds. This is a Polkadot blockchain limitation.
          example: false
          type: boolean
        feeLevel:
          description: "For UTXO or EVM-based blockchains only. Defines the blockchain\
            \ fee level which will be payed for the transaction. Alternatively, specific\
            \ fee estimation parameters exist below."
          enum:
          - LOW
          - MEDIUM
          - HIGH
          example: MEDIUM
          type: string
        fee:
          $ref: '#/components/schemas/TransactionRequest_fee'
        priorityFee:
          $ref: '#/components/schemas/TransactionRequest_priorityFee'
        failOnLowFee:
          description: "When set to `true`, in case the current `MEDIUM` fee level\
            \ is higher than the one specified in the transaction, the transaction\
            \ will fail to avoid getting stuck with no confirmations."
          type: boolean
        maxFee:
          description: The maximum fee (gas price or fee per byte) that should be
            payed for the transaction.  In case the current value of the requested
            `feeLevel` is higher than this requested maximum fee.  Represented by
            a numeric string for accurate precision.
          example: "120"
          type: string
        gasLimit:
          $ref: '#/components/schemas/TransactionRequest_gasLimit'
        gasPrice:
          $ref: '#/components/schemas/TransactionRequest_gasPrice'
        networkFee:
          $ref: '#/components/schemas/TransactionRequest_networkFee'
        replaceTxByHash:
          description: "For EVM-based blockchains only. In case a transaction is stuck,\
            \ specify the hash of the stuck transaction to replace it by this transaction\
            \ with a higher fee, or to replace it with this transaction with a zero\
            \ fee and drop it from the blockchain."
          example: 00000000-0000-0000-0000-000000000000
          type: string
        extraParameters:
          description: |
            Additional protocol / operation specific key-value parameters:

            For UTXO-based blockchain input selection, add the key `inputsSelection` with the value set the [input selection structure.](https://developers.fireblocks.com/reference/transaction-objects#inputsselection) The inputs can be retrieved from the [Retrieve Unspent Inputs endpoint.](https://developers.fireblocks.com/reference/get_vault-accounts-vaultaccountid-assetid-unspent-inputs)

            For `RAW` operations, add the key `rawMessageData` with the value set to the [raw message data structure.](https://developers.fireblocks.com/reference/raw-signing-objects#rawmessagedata)

            For `CONTRACT_CALL` operations, add the key `contractCallData` with the value set to the Ethereum smart contract Application Binary Interface (ABI) payload. The Fireblocks [development libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries) are recommended for building contract call transactions.
          properties: {}
          type: object
        customerRefId:
          description: The ID for AML providers to associate the owner of funds with
            transactions.
          example: abcdef
          type: string
        travelRuleMessage:
          $ref: '#/components/schemas/TravelRuleCreateTransactionRequest'
        autoStaking:
          deprecated: true
          description: This feature is no longer supported.
          type: boolean
        networkStaking:
          $ref: '#/components/schemas/TransactionRequest_networkStaking'
        cpuStaking:
          $ref: '#/components/schemas/TransactionRequest_networkStaking'
      type: object
    CreateTransactionResponse:
      example:
        systemMessages:
          type: WARN
          message: Slow transaction processing. Outgoing transactions might be stuck.
        id: id
        status: status
      properties:
        id:
          description: The ID of the transaction.
          type: string
        status:
          description: "The primary status of the transaction. For details, see [Primary\
            \ transaction statuses.] (https://developers.fireblocks.com/reference/primary-transaction-statuses)"
          type: string
        systemMessages:
          $ref: '#/components/schemas/SystemMessageInfo'
      type: object
    TransactionFee:
      example:
        gasLimit: gasLimit
        feePerByte: feePerByte
        networkFee: networkFee
        priorityFee: 1.4658129805029452
        l1Fee: l1Fee
        baseFee: 6.027456183070403
        gasPrice: 0.8008281904610115
        maxFeePerGasDelta: maxFeePerGasDelta
      properties:
        feePerByte:
          type: string
        gasPrice:
          type: number
        gasLimit:
          type: string
        networkFee:
          type: string
        baseFee:
          description: (optional) Base Fee according to EIP-1559 (ETH assets)
          type: number
        priorityFee:
          description: (optional) Priority Fee according to EIP-1559 (ETH assets)
          type: number
        maxFeePerGasDelta:
          description: Max Fee Per Gas Delta added only for EIP-1559 (ETH assets)
          type: string
        l1Fee:
          description: Layer 1 fee for Layer 2 chains
          type: string
      type: object
    EstimatedTransactionFeeResponse:
      example:
        high:
          gasLimit: gasLimit
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: 1.4658129805029452
          l1Fee: l1Fee
          baseFee: 6.027456183070403
          gasPrice: 0.8008281904610115
          maxFeePerGasDelta: maxFeePerGasDelta
        low:
          gasLimit: gasLimit
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: 1.4658129805029452
          l1Fee: l1Fee
          baseFee: 6.027456183070403
          gasPrice: 0.8008281904610115
          maxFeePerGasDelta: maxFeePerGasDelta
        medium:
          gasLimit: gasLimit
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: 1.4658129805029452
          l1Fee: l1Fee
          baseFee: 6.027456183070403
          gasPrice: 0.8008281904610115
          maxFeePerGasDelta: maxFeePerGasDelta
      properties:
        low:
          $ref: '#/components/schemas/TransactionFee'
        medium:
          $ref: '#/components/schemas/TransactionFee'
        high:
          $ref: '#/components/schemas/TransactionFee'
      required:
      - high
      - low
      - medium
      type: object
    SetConfirmationsThresholdRequest:
      example:
        numOfConfirmations: 0.8008281904610115
      properties:
        numOfConfirmations:
          type: number
      type: object
    SetConfirmationsThresholdResponse:
      example:
        success: true
        transactions:
        - transactions
        - transactions
      properties:
        success:
          type: boolean
        transactions:
          items:
            type: string
          type: array
      type: object
    DropTransactionRequest:
      example:
        txId: txId
        feeLevel: feeLevel
        gasPrice: gasPrice
      properties:
        txId:
          type: string
        feeLevel:
          type: string
        gasPrice:
          type: string
      type: object
    DropTransactionResponse:
      example:
        txStatus: txStatus
        txId: txId
        replacedTxHash: replacedTxHash
      properties:
        txStatus:
          type: string
        txId:
          type: string
        replacedTxHash:
          type: string
      type: object
    CancelTransactionResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    FreezeTransactionResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    UnfreezeTransactionResponse:
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    ValidateAddressResponse:
      example:
        isValid: true
        requiresTag: true
        isActive: true
      properties:
        isValid:
          type: boolean
        isActive:
          type: boolean
        requiresTag:
          type: boolean
      type: object
    NetworkFee:
      example:
        feePerByte: feePerByte
        networkFee: networkFee
        priorityFee: priorityFee
        baseFee: baseFee
        gasPrice: gasPrice
      properties:
        feePerByte:
          type: string
        gasPrice:
          type: string
        networkFee:
          type: string
        baseFee:
          description: (optional) Base Fee according to EIP-1559 (ETH assets)
          type: string
        priorityFee:
          description: (optional) Priority Fee according to EIP-1559 (ETH assets)
          type: string
      type: object
    EstimatedNetworkFeeResponse:
      example:
        high:
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: priorityFee
          baseFee: baseFee
          gasPrice: gasPrice
        low:
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: priorityFee
          baseFee: baseFee
          gasPrice: gasPrice
        medium:
          feePerByte: feePerByte
          networkFee: networkFee
          priorityFee: priorityFee
          baseFee: baseFee
          gasPrice: gasPrice
      properties:
        low:
          $ref: '#/components/schemas/NetworkFee'
        medium:
          $ref: '#/components/schemas/NetworkFee'
        high:
          $ref: '#/components/schemas/NetworkFee'
      required:
      - high
      - low
      - medium
      type: object
    PaymentAccountType:
      enum:
      - VAULT_ACCOUNT
      - EXCHANGE_ACCOUNT
      - FIAT_ACCOUNT
      type: string
    PaymentAccount:
      example:
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/PaymentAccountType'
      required:
      - id
      - type
      type: object
    PayeeAccountType:
      description: "- VAULT_ACCOUNT  \ta native Fireblocks vault account\n- EXCHANGE_ACCOUNT\
        \ \ta third-party exchange account\n- INTERNAL_WALLET \ta whitelisted address\
        \ marked as internal to the workspace/organization\n- EXTERNAL_WALLET\ta whitelisted\
        \ address marked as external\n- NETWORK_CONNECTION\ta member of the Fireblocks\
        \ network\n- FIAT_ACCOUNT\ta third-party account of a fiat bank (Signature,\
        \ BCB, etc)\n"
      enum:
      - VAULT_ACCOUNT
      - EXCHANGE_ACCOUNT
      - INTERNAL_WALLET
      - EXTERNAL_WALLET
      - NETWORK_CONNECTION
      - FIAT_ACCOUNT
      type: string
    PayeeAccount:
      example:
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/PayeeAccountType'
      required:
      - id
      - type
      type: object
    InstructionAmount:
      example:
        amount: amount
        assetId: assetId
      properties:
        amount:
          type: string
        assetId:
          type: string
      required:
      - amount
      - assetId
      type: object
    PayoutInstruction:
      example:
        amount:
          amount: amount
          assetId: assetId
        id: id
        payeeAccount:
          id: id
          type: null
      properties:
        id:
          type: string
        payeeAccount:
          $ref: '#/components/schemas/PayeeAccount'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
      required:
      - amount
      - payeeAccount
      type: object
    CreatePayoutRequest:
      example:
        instructionSet:
        - amount:
            amount: amount
            assetId: assetId
          id: id
          payeeAccount:
            id: id
            type: null
        - amount:
            amount: amount
            assetId: assetId
          id: id
          payeeAccount:
            id: id
            type: null
        paymentAccount:
          id: id
          type: null
      properties:
        paymentAccount:
          $ref: '#/components/schemas/PaymentAccount'
        instructionSet:
          items:
            $ref: '#/components/schemas/PayoutInstruction'
          type: array
      required:
      - instructionSet
      - paymentAccount
      type: object
    PaymentAccountResponse:
      example:
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/PaymentAccountType'
      type: object
    PayoutState:
      description: |
        - CREATED - payout instruction set created with all its details
        - FILE_FOUND - new file found in the FTP
        - REQUESTED - payout requested with all its details
        - TRANSLATED - payout instruction account IDs identified and translated
        - PROCESSING - payout instruction set executed and is processing
        - SUBMITTED - transactions submitted for payout instructions
        - FINALIZED - payout finished processing, all transactions processed successfully
        - INSUFFICIENT_BALANCE - insufficient balance in the payment account (can be a temporary state)
        - FAILED - one or more of the payout instructions failed
      enum:
      - CREATED
      - FILE_FOUND
      - REQUESTED
      - TRANSLATED
      - PROCESSING
      - SUBMITTED
      - FINALIZED
      - INSUFFICIENT_BALANCE
      - FAILED
      type: string
    PayoutStatus:
      description: "- REQUESTED\tpayout requested with all its details\n- VERIFIED\t\
        payout instruction set details were verified\n- PROCESSING\tpayout instruction\
        \ set executed and is processing\n- FINALIZED\tpayout done (all payout instructions\
        \ completed successfully)\n- INSUFFICIENT_BALANCE\tinsufficient balance in\
        \ the payment account (can be a temporary state)\n- FAILED\tone or more of\
        \ the payout instructions failed\n"
      enum:
      - REGISTERED
      - VERIFYING
      - IN_PROGRESS
      - DONE
      - INSUFFICIENT_BALANCE
      - FAILED
      type: string
    PayoutInitMethod:
      enum:
      - FILE
      - API
      type: string
    PayeeAccountResponse:
      example:
        id: id
        type: null
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/PayeeAccountType'
      type: object
    PayoutInstructionState:
      description: "- NOT_STARTED\t- waiting to start\n- TRANSACTION_SENT - an underlying\
        \ transaction was sent\n- COMPLETED\t- completed successfully\n- FAILED -\
        \ failed\n- TRANSLATION_ERROR -lookup of the destination failed (due to changes\
        \ in the underlying whitelisted external wallet or similar)\n- SKIPPED- no\
        \ transaction(s) created for this instruction\n"
      enum:
      - NOT_STARTED
      - TRANSACTION_SENT
      - COMPLETED
      - FAILED
      - TRANSLATION_ERROR
      - SKIPPED
      type: string
    Transaction:
      example:
        instructionId: instructionId
        id: id
        state: SUBMITTED
        timestamp: 6.027456183070403
      properties:
        id:
          type: string
        state:
          enum:
          - SUBMITTED
          - QUEUED
          - PENDING_AUTHORIZATION
          - PENDING_SIGNATURE
          - BROADCASTING
          - PENDING_3RD_PARTY_MANUAL_APPROVAL
          - PENDING_3RD_PARTY
          - PENDING
          - CONFIRMING
          - CONFIRMED
          - COMPLETED
          - PARTIALLY_COMPLETED
          - PENDING_AML_SCREENING
          - CANCELLING
          - CANCELLED
          - REJECTED
          - BLOCKED
          - FAILED
          - TIMEOUT
          type: string
        timestamp:
          format: date-time
          type: number
        instructionId:
          type: string
      required:
      - id
      - state
      type: object
    PayoutInstructionResponse:
      example:
        amount:
          amount: amount
          assetId: assetId
        id: id
        state: null
        payeeAccount:
          id: id
          type: null
        transactions:
        - instructionId: instructionId
          id: id
          state: SUBMITTED
          timestamp: 6.027456183070403
        - instructionId: instructionId
          id: id
          state: SUBMITTED
          timestamp: 6.027456183070403
      properties:
        id:
          type: string
        payeeAccount:
          $ref: '#/components/schemas/PayeeAccountResponse'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        state:
          $ref: '#/components/schemas/PayoutInstructionState'
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - amount
      - payeeAccount
      - state
      - transactions
      type: object
    PayoutResponse:
      example:
        createdAt: 0.8008281904610115
        initMethod: null
        reasonOfFailure: reasonOfFailure
        instructionSet:
        - amount:
            amount: amount
            assetId: assetId
          id: id
          state: null
          payeeAccount:
            id: id
            type: null
          transactions:
          - instructionId: instructionId
            id: id
            state: SUBMITTED
            timestamp: 6.027456183070403
          - instructionId: instructionId
            id: id
            state: SUBMITTED
            timestamp: 6.027456183070403
        - amount:
            amount: amount
            assetId: assetId
          id: id
          state: null
          payeeAccount:
            id: id
            type: null
          transactions:
          - instructionId: instructionId
            id: id
            state: SUBMITTED
            timestamp: 6.027456183070403
          - instructionId: instructionId
            id: id
            state: SUBMITTED
            timestamp: 6.027456183070403
        state: null
        reportUrl: reportUrl
        payoutId: payoutId
        paymentAccount:
          id: id
          type: null
        status: null
      properties:
        payoutId:
          type: string
        paymentAccount:
          $ref: '#/components/schemas/PaymentAccountResponse'
        createdAt:
          type: number
        state:
          $ref: '#/components/schemas/PayoutState'
        status:
          $ref: '#/components/schemas/PayoutStatus'
        reasonOfFailure:
          description: "<ul> \n<li> INSUFFICIENT_BALANCE</li>\n<li> SOURCE_TRANSLATION</li>\n\
            <li> SOURCE_NOT_UNIQUE</li>\n<li> SOURCE_NOT_FOUND</li>\n<li> SOURCE_TYPE_NOT_SUPPORTED</li>\n\
            <li> EMPTY_SOURCE</li>\n<li> DESTINATION_TRANSLATION</li>\n<li> DESTINATION_NOT_UNIQUE</li>\n\
            <li> DESTINATION_NOT_FOUND</li>\n<li> EMPTY_DESTINATION</li>\n<li> PARSING\
            \ </li>\n<li> UNKNOWN</li>\n<li> FIREBLOCKS_CLIENT</li>\n<li> TRANSACTION_SUBMISSION</li>\n\
            </ul>\n"
          type: string
        initMethod:
          $ref: '#/components/schemas/PayoutInitMethod'
        instructionSet:
          items:
            $ref: '#/components/schemas/PayoutInstructionResponse'
          type: array
        reportUrl:
          type: string
      required:
      - createdAt
      - instructionSet
      - paymentAccount
      - payoutId
      - state
      - status
      type: object
    ErrorResponse:
      example:
        error:
          type: INTERNAL
          message: message
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
      required:
      - error
      type: object
    DispatchPayoutResponse:
      example:
        payoutId: payoutId
      properties:
        payoutId:
          type: string
      required:
      - payoutId
      type: object
    PreScreening:
      properties:
        enabled:
          type: boolean
      required:
      - enabled
      type: object
    ConversionOperationType:
      enum:
      - CONVERSION
      type: string
    ConversionOperationConfigParams:
      properties:
        amount:
          type: string
        accountId:
          type: string
        srcAssetId:
          type: string
        destAssetId:
          type: string
        slippageBasisPoints:
          maximum: 10000
          minimum: 0
          type: integer
      required:
      - destAssetId
      type: object
    CreateConversionConfigOperationRequest:
      properties:
        type:
          $ref: '#/components/schemas/ConversionOperationType'
        params:
          $ref: '#/components/schemas/ConversionOperationConfigParams'
      required:
      - params
      - type
      type: object
    TransferOperationType:
      enum:
      - TRANSFER
      type: string
    AccountType:
      enum:
      - EXCHANGE_ACCOUNT
      - UNMANAGED_WALLET
      - VAULT_ACCOUNT
      - NETWORK_CONNECTION
      - FIAT_ACCOUNT
      type: string
    Account:
      properties:
        accountId:
          type: string
        accountType:
          $ref: '#/components/schemas/AccountType'
      required:
      - accountId
      - accountType
      type: object
    OneTimeAddressAccount:
      properties:
        oneTimeAddress:
          type: string
        tag:
          type: string
      required:
      - oneTimeAddress
      type: object
    Destination:
      oneOf:
      - $ref: '#/components/schemas/Account'
      - $ref: '#/components/schemas/OneTimeAddressAccount'
    TransferOperationConfigParams:
      properties:
        amount:
          type: string
        assetId:
          type: string
        source:
          $ref: '#/components/schemas/Account'
        destination:
          $ref: '#/components/schemas/Destination'
      required:
      - destination
      type: object
    CreateTransferConfigOperationRequest:
      properties:
        type:
          $ref: '#/components/schemas/TransferOperationType'
        params:
          $ref: '#/components/schemas/TransferOperationConfigParams'
      required:
      - params
      - type
      type: object
    DisbursementOperationType:
      enum:
      - DISBURSEMENT
      type: string
    DisbursementAmountInstruction:
      properties:
        payeeAccount:
          $ref: '#/components/schemas/Destination'
        assetId:
          type: string
        amount:
          type: string
      required:
      - amount
      - assetId
      - payeeAccount
      type: object
    DisbursementPercentageInstruction:
      properties:
        payeeAccount:
          $ref: '#/components/schemas/Destination'
        assetId:
          type: string
        percentage:
          type: string
      required:
      - assetId
      - payeeAccount
      - percentage
      type: object
    DisbursementInstruction:
      oneOf:
      - $ref: '#/components/schemas/DisbursementAmountInstruction'
      - $ref: '#/components/schemas/DisbursementPercentageInstruction'
    DisbursementOperationConfigParams:
      properties:
        paymentAccount:
          $ref: '#/components/schemas/Account'
        instructionSet:
          items:
            $ref: '#/components/schemas/DisbursementInstruction'
          type: array
      required:
      - instructionSet
      type: object
    CreateDisbursementConfigOperationRequest:
      properties:
        type:
          $ref: '#/components/schemas/DisbursementOperationType'
        params:
          $ref: '#/components/schemas/DisbursementOperationConfigParams'
      required:
      - params
      - type
      type: object
    CreateConfigOperationRequest:
      oneOf:
      - $ref: '#/components/schemas/CreateConversionConfigOperationRequest'
      - $ref: '#/components/schemas/CreateTransferConfigOperationRequest'
      - $ref: '#/components/schemas/CreateDisbursementConfigOperationRequest'
    CorrelationData:
      oneOf:
      - additionalProperties:
          type: string
        type: object
      - type: string
      x-internal: true
    CreateWorkflowConfigurationRequest:
      properties:
        configName:
          type: string
        preScreening:
          $ref: '#/components/schemas/PreScreening'
        configOperations:
          items:
            $ref: '#/components/schemas/CreateConfigOperationRequest'
          type: array
        externalCorrelationData:
          $ref: '#/components/schemas/CorrelationData'
      required:
      - configName
      - configOperations
      type: object
      x-internal: true
    WorkflowConfigStatus:
      enum:
      - PENDING
      - VALIDATION_IN_PROGRESS
      - VALIDATION_FAILED
      - READY_FOR_EXECUTION
      type: string
    ConfigOperationStatus:
      enum:
      - PENDING
      - VALIDATION_IN_PROGRESS
      - READY_FOR_EXECUTION
      - VALIDATION_FAILED
      type: string
    ConversionValidationFailure:
      properties:
        reason:
          enum:
          - ACCOUNT_NOT_FOUND
          - ACCOUNT_TYPE_NOT_SUPPORTED
          - INSUFFICIENT_BALANCE
          - ASSET_NOT_FOUND
          - ASSETS_CONTINUITY_MISMATCH
          - EXCHANGE_BASKETS_MISMATCH
          - ACCOUNTS_CONTINUITY_MISMATCH
          - ONE_TIME_ADDRESS_CONTINUITY_NOT_ALLOWED
          - EQUAL_ACCOUNTS_NOT_ALLOWED
          - EQUAL_ASSETS_NOT_ALLOWED
          - INVALID_AMOUNT
          - UNMANAGED_WALLET_AS_SOURCE_NOT_ALLOWED
          - MANAGED_OPERATION_PARAMS_INVALID_SCHEMA
          - ACCOUNT_IS_NOT_EXCHANGE
          - UNSUPPORTED_TRADING_METHOD
          - ASSETS_CAN_NOT_CONVERTED
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - reason
      type: object
    ConversionConfigOperation:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/ConversionOperationType'
        params:
          $ref: '#/components/schemas/ConversionOperationConfigParams'
        status:
          $ref: '#/components/schemas/ConfigOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/ConversionValidationFailure'
      required:
      - operationId
      - params
      - status
      - type
      type: object
    TransferValidationFailure:
      properties:
        reason:
          enum:
          - ACCOUNT_NOT_FOUND
          - ACCOUNT_TYPE_NOT_SUPPORTED
          - INSUFFICIENT_BALANCE
          - ASSET_NOT_FOUND
          - ASSETS_CONTINUITY_MISMATCH
          - EXCHANGE_BASKETS_MISMATCH
          - ACCOUNTS_CONTINUITY_MISMATCH
          - ONE_TIME_ADDRESS_CONTINUITY_NOT_ALLOWED
          - EQUAL_ACCOUNTS_NOT_ALLOWED
          - EQUAL_ASSETS_NOT_ALLOWED
          - INVALID_AMOUNT
          - UNMANAGED_WALLET_AS_SOURCE_NOT_ALLOWED
          - MANAGED_OPERATION_PARAMS_INVALID_SCHEMA
          type: string
        data:
          additionalProperties: true
          type: object
      required:
      - reason
      type: object
    TransferConfigOperation:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/TransferOperationType'
        params:
          $ref: '#/components/schemas/TransferOperationConfigParams'
        status:
          $ref: '#/components/schemas/ConfigOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/TransferValidationFailure'
      required:
      - operationId
      - params
      - status
      - type
      type: object
    DisbursementValidationFailure:
      properties:
        reason:
          enum:
          - ACCOUNT_NOT_FOUND
          - ACCOUNT_TYPE_NOT_SUPPORTED
          - INSUFFICIENT_BALANCE
          - ASSET_NOT_FOUND
          - ASSETS_CONTINUITY_MISMATCH
          - EXCHANGE_BASKETS_MISMATCH
          - ACCOUNTS_CONTINUITY_MISMATCH
          - ONE_TIME_ADDRESS_CONTINUITY_NOT_ALLOWED
          - EQUAL_ACCOUNTS_NOT_ALLOWED
          - EQUAL_ASSETS_NOT_ALLOWED
          - INVALID_AMOUNT
          - UNMANAGED_WALLET_AS_SOURCE_NOT_ALLOWED
          - MANAGED_OPERATION_PARAMS_INVALID_SCHEMA
          - INSTRUCTIONS_EXCEED_HUNDRED_PERCENT
          - INSTRUCTIONS_ARRAY_EMPTY
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - reason
      type: object
    DisbursementConfigOperation:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/DisbursementOperationType'
        params:
          $ref: '#/components/schemas/DisbursementOperationConfigParams'
        status:
          $ref: '#/components/schemas/ConfigOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/DisbursementValidationFailure'
      required:
      - operationId
      - params
      - status
      - type
      type: object
    ConfigOperation:
      oneOf:
      - $ref: '#/components/schemas/ConversionConfigOperation'
      - $ref: '#/components/schemas/TransferConfigOperation'
      - $ref: '#/components/schemas/DisbursementConfigOperation'
    WorkflowConfiguration:
      properties:
        configId:
          type: string
        configName:
          type: string
        preScreening:
          $ref: '#/components/schemas/PreScreening'
        status:
          $ref: '#/components/schemas/WorkflowConfigStatus'
        createdAt:
          type: number
        configOperations:
          items:
            $ref: '#/components/schemas/ConfigOperation'
          type: array
        externalCorrelationData:
          $ref: '#/components/schemas/CorrelationData'
      required:
      - configId
      - configName
      - configOperations
      - createdAt
      - status
      type: object
      x-internal: true
    WorkflowConfigurationId:
      properties:
        configId:
          type: string
      required:
      - configId
      type: object
    ConversionOperationExecutionParams:
      properties:
        configOperationId:
          type: string
        executionParams:
          $ref: '#/components/schemas/ConversionOperationExecutionParams_executionParams'
      required:
      - configOperationId
      type: object
    TransferOperationExecutionParams:
      properties:
        configOperationId:
          type: string
        executionParams:
          $ref: '#/components/schemas/TransferOperationExecutionParams_executionParams'
      required:
      - configOperationId
      type: object
    DisbursementOperationExecutionParams:
      properties:
        configOperationId:
          type: string
        executionParams:
          $ref: '#/components/schemas/DisbursementOperationExecutionParams_executionParams'
      required:
      - configOperationId
      type: object
    CreateWorkflowExecutionRequest:
      properties:
        configId:
          type: string
        preScreening:
          $ref: '#/components/schemas/PreScreening'
        params:
          items:
            $ref: '#/components/schemas/CreateWorkflowExecutionRequest_params_inner'
          type: array
        externalCorrelationData:
          $ref: '#/components/schemas/CorrelationData'
      required:
      - configId
      - params
      type: object
      x-internal: true
    ConfigConversionOperationSnapshot:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/ConversionOperationType'
        params:
          $ref: '#/components/schemas/ConversionOperationConfigParams'
      required:
      - operationId
      - params
      - type
      type: object
    ConfigTransferOperationSnapshot:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/TransferOperationType'
        params:
          $ref: '#/components/schemas/TransferOperationConfigParams'
      required:
      - operationId
      - params
      - type
      type: object
    ConfigDisbursementOperationSnapshot:
      properties:
        operationId:
          type: string
        type:
          $ref: '#/components/schemas/DisbursementOperationType'
        params:
          $ref: '#/components/schemas/DisbursementOperationConfigParams'
      required:
      - operationId
      - params
      - type
      type: object
    ConfigOperationSnapshot:
      oneOf:
      - $ref: '#/components/schemas/ConfigConversionOperationSnapshot'
      - $ref: '#/components/schemas/ConfigTransferOperationSnapshot'
      - $ref: '#/components/schemas/ConfigDisbursementOperationSnapshot'
    WorkflowConfigurationSnapshot:
      properties:
        configId:
          type: string
        configName:
          type: string
        createdAt:
          type: number
        configOperations:
          items:
            $ref: '#/components/schemas/ConfigOperationSnapshot'
          type: array
        externalCorrelationData:
          $ref: '#/components/schemas/CorrelationData'
      required:
      - configId
      - configName
      - configOperations
      - createdAt
      type: object
      x-internal: true
    ExecutionOperationStatus:
      enum:
      - PENDING
      - VALIDATION_IN_PROGRESS
      - VALIDATION_FAILED
      - VALIDATION_COMPLETED
      - PREVIEW_REQUESTED
      - PREVIEW_IN_PROGRESS
      - PREVIEW_FAILED
      - READY_FOR_LAUNCH
      - EXECUTION_REQUESTED
      - EXECUTION_IN_PROGRESS
      - EXECUTION_COMPLETED
      - EXECUTION_FAILED
      type: string
    ScreeningOperationType:
      enum:
      - SCREENING
      type: string
    ScreeningValidationFailure:
      properties:
        reason:
          enum:
          - SCREENING_DISABLED_IN_TENANT
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - reason
      type: object
    ScreeningVerdict:
      properties:
        verdict:
          enum:
          - PASSED
          - PASSED_WITH_ALERT
          - REJECTED
          - FAILED
          - BYPASSED
          type: string
        executionOperationId:
          type: string
        account:
          $ref: '#/components/schemas/Destination'
        assetId:
          type: string
        amount:
          type: string
        matchedRule:
          $ref: '#/components/schemas/ScreeningVerdict_matchedRule'
      required:
      - account
      - amount
      - assetId
      - executionOperationId
      - verdict
      type: object
    ScreeningOperationExecutionOutput:
      properties:
        verdicts:
          items:
            $ref: '#/components/schemas/ScreeningVerdict'
          type: array
      required:
      - verdicts
      type: object
    ScreeningOperationFailure:
      properties:
        reason:
          enum:
          - AML_PROCESS_FAILED
          - SCREENING_REJECTED
          type: string
        data:
          $ref: '#/components/schemas/ScreeningOperationExecutionOutput'
      required:
      - reason
      type: object
    ScreeningOperationExecution:
      properties:
        output:
          $ref: '#/components/schemas/ScreeningOperationExecutionOutput'
        startedAt:
          type: number
        finishedAt:
          type: number
        failure:
          $ref: '#/components/schemas/ScreeningOperationFailure'
      required:
      - startedAt
      type: object
    ExecutionScreeningOperation:
      properties:
        operationId:
          type: string
        status:
          $ref: '#/components/schemas/ExecutionOperationStatus'
        operationType:
          $ref: '#/components/schemas/ScreeningOperationType'
        validationFailure:
          $ref: '#/components/schemas/ScreeningValidationFailure'
        execution:
          $ref: '#/components/schemas/ScreeningOperationExecution'
      required:
      - operationId
      - operationType
      - status
      type: object
    AssetAmount:
      properties:
        amount:
          type: string
        assetId:
          type: string
      required:
      - amount
      - assetId
      type: object
    ConversionOperationPreviewOutput:
      properties:
        amount:
          $ref: '#/components/schemas/AssetAmount'
        fee:
          $ref: '#/components/schemas/AssetAmount'
        conversionRate:
          type: string
        timeSeconds:
          type: number
      required:
      - amount
      - conversionRate
      - fee
      - timeSeconds
      type: object
    ConversionOperationFailure:
      properties:
        reason:
          enum:
          - INVALID_AMOUNT
          - SLIPPAGE_EXCEEDED
          - AMOUNT_TOO_SMALL
          - INSUFFICIENT_FUNDS
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - reason
      type: object
    ConversionOperationPreview:
      properties:
        input:
          $ref: '#/components/schemas/ConversionOperationConfigParams'
        output:
          $ref: '#/components/schemas/ConversionOperationPreviewOutput'
        failure:
          $ref: '#/components/schemas/ConversionOperationFailure'
      required:
      - input
      type: object
    ConversionOperationExecutionOutput:
      properties:
        amount:
          $ref: '#/components/schemas/AssetAmount'
        fee:
          $ref: '#/components/schemas/AssetAmount'
        conversionRate:
          type: string
      required:
      - amount
      - conversionRate
      - fee
      type: object
    ConversionOperationExecution:
      properties:
        input:
          $ref: '#/components/schemas/ConversionOperationConfigParams'
        output:
          $ref: '#/components/schemas/ConversionOperationExecutionOutput'
        startedAt:
          type: number
        finishedAt:
          type: number
        failure:
          $ref: '#/components/schemas/ConversionOperationFailure'
      required:
      - input
      - startedAt
      type: object
    ExecutionConversionOperation:
      properties:
        operationId:
          type: string
        status:
          $ref: '#/components/schemas/ExecutionOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/ConversionValidationFailure'
        operationType:
          $ref: '#/components/schemas/ConversionOperationType'
        preview:
          $ref: '#/components/schemas/ConversionOperationPreview'
        execution:
          $ref: '#/components/schemas/ConversionOperationExecution'
      required:
      - operationId
      - operationType
      - status
      type: object
    TransferOperationPreviewOutput:
      properties:
        amount:
          $ref: '#/components/schemas/AssetAmount'
        fee:
          $ref: '#/components/schemas/AssetAmount'
        isSignRequired:
          type: boolean
        timeSeconds:
          type: number
      required:
      - amount
      - fee
      - isSignRequired
      - timeSeconds
      type: object
    TransferOperationFailure:
      properties:
        reason:
          enum:
          - INVALID_AMOUNT
          - SUBMISSION_FAILED
          - TRANSACTION_FAILED
          type: string
        data:
          $ref: '#/components/schemas/TransferOperationFailure_data'
      required:
      - reason
      type: object
    TransferOperationPreview:
      properties:
        input:
          $ref: '#/components/schemas/TransferOperationConfigParams'
        output:
          $ref: '#/components/schemas/TransferOperationPreviewOutput'
        failure:
          $ref: '#/components/schemas/TransferOperationFailure'
      required:
      - input
      type: object
    TransferOperationExecutionOutput:
      properties:
        amount:
          $ref: '#/components/schemas/AssetAmount'
        fee:
          $ref: '#/components/schemas/AssetAmount'
      required:
      - amount
      - fee
      type: object
    TransferOperationExecution:
      properties:
        input:
          $ref: '#/components/schemas/TransferOperationConfigParams'
        output:
          $ref: '#/components/schemas/TransferOperationExecutionOutput'
        txId:
          type: string
        startedAt:
          type: number
        finishedAt:
          type: number
        failure:
          $ref: '#/components/schemas/TransferOperationFailure'
      required:
      - input
      - startedAt
      type: object
    ExecutionTransferOperation:
      properties:
        operationId:
          type: string
        status:
          $ref: '#/components/schemas/ExecutionOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/TransferValidationFailure'
        operationType:
          $ref: '#/components/schemas/TransferOperationType'
        preview:
          $ref: '#/components/schemas/TransferOperationPreview'
        execution:
          $ref: '#/components/schemas/TransferOperationExecution'
      required:
      - operationId
      - operationType
      - status
      type: object
    DisbursementOperationInput:
      properties:
        amount:
          type: string
        paymentAccount:
          $ref: '#/components/schemas/Account'
        instructionSet:
          items:
            $ref: '#/components/schemas/DisbursementInstruction'
          type: array
      required:
      - instructionSet
      - paymentAccount
      type: object
    DisbursementInstructionOutput:
      properties:
        amount:
          $ref: '#/components/schemas/AssetAmount'
        fee:
          $ref: '#/components/schemas/AssetAmount'
        payeeAccount:
          $ref: '#/components/schemas/Destination'
      required:
      - amount
      - fee
      - payeeAccount
      type: object
    DisbursementOperationPreviewOutput:
      properties:
        instructionSet:
          items:
            $ref: '#/components/schemas/DisbursementOperationPreviewOutput_instructionSet_inner'
          type: array
      required:
      - instructionSet
      type: object
    OperationExecutionFailure:
      properties:
        reason:
          type: string
        data:
          additionalProperties: {}
          type: object
      required:
      - reason
      type: object
    DisbursementOperationPreview:
      properties:
        input:
          $ref: '#/components/schemas/DisbursementOperationInput'
        output:
          $ref: '#/components/schemas/DisbursementOperationPreviewOutput'
        failure:
          $ref: '#/components/schemas/OperationExecutionFailure'
      required:
      - input
      type: object
    DisbursementOperationExecutionOutput:
      properties:
        instructionSet:
          items:
            $ref: '#/components/schemas/DisbursementInstructionOutput'
          type: array
      required:
      - instructionSet
      type: object
    DisbursementOperationExecution:
      properties:
        input:
          $ref: '#/components/schemas/DisbursementOperationInput'
        output:
          $ref: '#/components/schemas/DisbursementOperationExecutionOutput'
        payoutId:
          type: string
        startedAt:
          type: number
        finishedAt:
          type: number
        failure:
          $ref: '#/components/schemas/OperationExecutionFailure'
      required:
      - input
      - startedAt
      type: object
    ExecutionDisbursementOperation:
      properties:
        operationId:
          type: string
        status:
          $ref: '#/components/schemas/ExecutionOperationStatus'
        validationFailure:
          $ref: '#/components/schemas/DisbursementValidationFailure'
        operationType:
          $ref: '#/components/schemas/DisbursementOperationType'
        preview:
          $ref: '#/components/schemas/DisbursementOperationPreview'
        execution:
          $ref: '#/components/schemas/DisbursementOperationExecution'
      required:
      - operationId
      - operationType
      - status
      type: object
    WorkflowExecutionOperation:
      oneOf:
      - $ref: '#/components/schemas/ExecutionScreeningOperation'
      - $ref: '#/components/schemas/ExecutionConversionOperation'
      - $ref: '#/components/schemas/ExecutionTransferOperation'
      - $ref: '#/components/schemas/ExecutionDisbursementOperation'
    WorkflowExecution:
      properties:
        executionId:
          type: string
        preScreening:
          $ref: '#/components/schemas/PreScreening'
        configSnapshot:
          $ref: '#/components/schemas/WorkflowConfigurationSnapshot'
        executionOperations:
          items:
            $ref: '#/components/schemas/WorkflowExecutionOperation'
          type: array
        status:
          enum:
          - PENDING
          - VALIDATION_IN_PROGRESS
          - VALIDATION_FAILED
          - VALIDATION_COMPLETED
          - PREVIEW_IN_PROGRESS
          - PREVIEW_FAILED
          - READY_FOR_LAUNCH
          - EXECUTION_IN_PROGRESS
          - EXECUTION_COMPLETED
          - EXECUTION_FAILED
          type: string
        triggeredBy:
          type: string
        triggeredAt:
          type: number
        finishedAt:
          type: number
        externalCorrelationData:
          $ref: '#/components/schemas/CorrelationData'
      required:
      - configSnapshot
      - executionId
      - executionOperations
      - status
      type: object
      x-internal: true
    GasStationConfigurationResponse:
      example:
        gasThreshold: gasThreshold
        maxGasPrice: maxGasPrice
        gasCap: gasCap
      properties:
        gasThreshold:
          type: string
        gasCap:
          type: string
        maxGasPrice:
          nullable: true
          type: string
      type: object
    GasStationPropertiesResponse:
      example:
        balance: "{}"
        configuration:
          gasThreshold: gasThreshold
          maxGasPrice: maxGasPrice
          gasCap: gasCap
      properties:
        balance:
          type: object
        configuration:
          $ref: '#/components/schemas/GasStationConfigurationResponse'
      type: object
    GasStationConfiguration:
      example:
        gasThreshold: gasThreshold
        maxGasPrice: maxGasPrice
        gasCap: gasCap
      properties:
        gasThreshold:
          type: string
        gasCap:
          type: string
        maxGasPrice:
          type: string
      type: object
    EditGasStationConfigurationResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether editing the gas station configuration was
            successful
          type: boolean
      required:
      - success
      type: object
    UserGroupResponse:
      example:
        name: name
        id: id
        memberIds:
        - memberIds
        - memberIds
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
        memberIds:
          items:
            type: string
          type: array
      type: object
    UserGroupsResponse:
      items:
        $ref: '#/components/schemas/UserGroupResponse'
      type: array
    UserGroupCreateRequest:
      example:
        groupName: groupName
        memberIds:
        - memberIds
        - memberIds
      properties:
        groupName:
          type: string
        memberIds:
          items:
            type: string
          type: array
      type: object
    CreateUserGroupResponse:
      example:
        name: name
        id: id
        memberIds:
        - memberIds
        - memberIds
        status: status
      properties:
        id:
          type: string
        name:
          type: string
        memberIds:
          items:
            type: string
          type: array
        status:
          type: string
      type: object
    UserGroupUpdateRequest:
      example:
        groupName: groupName
        memberIds:
        - memberIds
        - memberIds
      properties:
        groupName:
          type: string
        memberIds:
          items:
            type: string
          type: array
      type: object
    UserGroupCreateResponse:
      example:
        name: name
        id: id
        memberIds:
        - memberIds
        - memberIds
        status: status
      properties:
        name:
          type: string
        id:
          type: string
        memberIds:
          items:
            type: string
          type: array
        status:
          type: string
      type: object
    UserResponse:
      example:
        firstName: firstName
        lastName: lastName
        role: role
        id: id
        email: email
        enabled: true
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        email:
          type: string
        enabled:
          type: boolean
      type: object
    GetUsersResponse:
      items:
        $ref: '#/components/schemas/UserResponse'
      type: array
    GetAuditLogsResponseDTO:
      example:
        cursor: cursor
        total: 0.8008281904610115
        data:
        - "{}"
        - "{}"
      properties:
        data:
          items:
            type: object
          type: array
        total:
          type: number
        cursor:
          nullable: true
          type: string
      type: object
    AuditLogData:
      example:
        createdAt: createdAt
        subject: subject
        tenantId: tenantId
        id: id
        event: event
        user: user
        userId: userId
        timestamp: timestamp
      properties:
        id:
          description: The unique identifier of the audit log
          type: string
        timestamp:
          description: The timestamp of the audit log
          type: string
        createdAt:
          description: The timestamp of the audit log creation
          type: string
        user:
          description: The user who performed the action
          type: string
        subject:
          description: The subject of the action
          type: string
        event:
          description: The event that was performed
          type: string
        tenantId:
          description: The tenant ID of the audit log
          type: string
        userId:
          description: The user ID of the audit log
          type: string
      type: object
    AuditLogsData:
      items:
        $ref: '#/components/schemas/AuditLogData'
      type: array
    GetAuditLogsResponse:
      example:
        cursor: cursor
        total: 0.8008281904610115
        data:
        - createdAt: createdAt
          subject: subject
          tenantId: tenantId
          id: id
          event: event
          user: user
          userId: userId
          timestamp: timestamp
        - createdAt: createdAt
          subject: subject
          tenantId: tenantId
          id: id
          event: event
          user: user
          userId: userId
          timestamp: timestamp
      properties:
        data:
          items:
            $ref: '#/components/schemas/AuditLogData'
          type: array
        cursor:
          description: The next id to start fetch audit logs from
          nullable: true
          type: string
        total:
          description: The total number of audit logs
          type: number
      type: object
    AddCollateralRequestBody:
      example:
        isSrcCollateral: true
        transactionRequest:
          note: Ticket 123
          priorityFee: "2"
          networkFee: TransactionRequest_networkFee
          fee: TransactionRequest_fee
          destination:
            oneTimeAddress:
              address: address
              tag: tag
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
          extraParameters: "{}"
          source:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
          maxFee: "120"
          externalTxId: 00000000-0000-0000-0000-000000000000
          cpuStaking: null
          gasLimit: "21000"
          failOnLowFee: true
          assetId: ETH
          feeLevel: MEDIUM
          gasPrice: TransactionRequest_gasPrice
          forceSweep: false
          amount: "0.02"
          destinations:
          - amount: amount
            destination:
              oneTimeAddress:
                address: address
                tag: tag
              walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              subType: null
              id: id
              type: null
          - amount: amount
            destination:
              oneTimeAddress:
                address: address
                tag: tag
              walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              subType: null
              id: id
              type: null
          travelRuleMessage:
            originatorProof: ""
            originator: ""
            beneficiaryVASPname: beneficiaryVASPname
            pii: ""
            protocol: protocol
            skipBeneficiaryDataValidation: true
            beneficiary: ""
            encrypted: encrypted
            travelRuleBehavior: true
            transactionBlockchainInfo: ""
            beneficiaryProof: ""
            originatorVASPdid: originatorVASPdid
            beneficiaryVASPdid: beneficiaryVASPdid
          customerRefId: abcdef
          treatAsGrossAmount: false
          networkStaking: TransactionRequest_networkStaking
          autoStaking: true
          operation: null
          replaceTxByHash: 00000000-0000-0000-0000-000000000000
      properties:
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
        isSrcCollateral:
          description: optional
          type: boolean
      type: object
    RemoveCollateralRequestBody:
      example:
        transactionRequest:
          note: Ticket 123
          priorityFee: "2"
          networkFee: TransactionRequest_networkFee
          fee: TransactionRequest_fee
          destination:
            oneTimeAddress:
              address: address
              tag: tag
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
          extraParameters: "{}"
          source:
            walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
            subType: null
            id: id
            type: null
          maxFee: "120"
          externalTxId: 00000000-0000-0000-0000-000000000000
          cpuStaking: null
          gasLimit: "21000"
          failOnLowFee: true
          assetId: ETH
          feeLevel: MEDIUM
          gasPrice: TransactionRequest_gasPrice
          forceSweep: false
          amount: "0.02"
          destinations:
          - amount: amount
            destination:
              oneTimeAddress:
                address: address
                tag: tag
              walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              subType: null
              id: id
              type: null
          - amount: amount
            destination:
              oneTimeAddress:
                address: address
                tag: tag
              walletId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              name: name
              subType: null
              id: id
              type: null
          travelRuleMessage:
            originatorProof: ""
            originator: ""
            beneficiaryVASPname: beneficiaryVASPname
            pii: ""
            protocol: protocol
            skipBeneficiaryDataValidation: true
            beneficiary: ""
            encrypted: encrypted
            travelRuleBehavior: true
            transactionBlockchainInfo: ""
            beneficiaryProof: ""
            originatorVASPdid: originatorVASPdid
            beneficiaryVASPdid: beneficiaryVASPdid
          customerRefId: abcdef
          treatAsGrossAmount: false
          networkStaking: TransactionRequest_networkStaking
          autoStaking: true
          operation: null
          replaceTxByHash: 00000000-0000-0000-0000-000000000000
        isDstCollateral: true
      properties:
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
        isDstCollateral:
          description: optional
          type: boolean
      type: object
    SettlementRequestBody:
      example:
        mainExchangeAccountId: mainExchangeAccountId
      properties:
        mainExchangeAccountId:
          type: string
      type: object
    ToExchangeTransaction:
      example:
        amount: amount
        assetId: assetId
        dstAddress: dstAddress
        dstTag: dstTag
      properties:
        assetId:
          type: string
        amount:
          type: string
        dstAddress:
          type: string
        dstTag:
          description: optional
          type: string
      type: object
    ToCollateralTransaction:
      example:
        amount: amount
        srcTag: srcTag
        fee: fee
        srcAddress: srcAddress
        asset: asset
      properties:
        asset:
          type: string
        amount:
          type: string
        srcAddress:
          type: string
        srcTag:
          description: optional
          type: string
        fee:
          description: optional
          type: string
      type: object
    ExchangeSettlementTransactionsResponse:
      example:
        toCollateral:
        - amount: amount
          srcTag: srcTag
          fee: fee
          srcAddress: srcAddress
          asset: asset
        - amount: amount
          srcTag: srcTag
          fee: fee
          srcAddress: srcAddress
          asset: asset
        toExchange:
        - amount: amount
          assetId: assetId
          dstAddress: dstAddress
          dstTag: dstTag
        - amount: amount
          assetId: assetId
          dstAddress: dstAddress
          dstTag: dstTag
      properties:
        toExchange:
          items:
            $ref: '#/components/schemas/ToExchangeTransaction'
          type: array
        toCollateral:
          items:
            $ref: '#/components/schemas/ToCollateralTransaction'
          type: array
      type: object
    SettlementResponse:
      example:
        fireblocksInitiatedTransactions: "{}"
        initiator: initiator
        exchangeRequestedTransactions:
          toCollateral:
          - amount: amount
            srcTag: srcTag
            fee: fee
            srcAddress: srcAddress
            asset: asset
          - amount: amount
            srcTag: srcTag
            fee: fee
            srcAddress: srcAddress
            asset: asset
          toExchange:
          - amount: amount
            assetId: assetId
            dstAddress: dstAddress
            dstTag: dstTag
          - amount: amount
            assetId: assetId
            dstAddress: dstAddress
            dstTag: dstTag
        id: id
        exchangeReply: exchangeReply
      properties:
        id:
          type: string
        initiator:
          type: string
        exchangeReply:
          type: string
        fireblocksInitiatedTransactions:
          type: object
        exchangeRequestedTransactions:
          $ref: '#/components/schemas/ExchangeSettlementTransactionsResponse'
      type: object
    ResendWebhooksResponse:
      example:
        messagesCount: 0.8008281904610115
      properties:
        messagesCount:
          type: number
      type: object
    ResendTransactionWebhooksRequest:
      example:
        resendCreated: true
        resendStatusUpdated: true
      properties:
        resendCreated:
          type: boolean
        resendStatusUpdated:
          type: boolean
      type: object
    ResendWebhooksByTransactionIdResponse:
      example:
        success: true
      properties:
        success:
          description: Indicates whether the webhooks were successfully resent
          type: boolean
      required:
      - success
      type: object
    AuditorData:
      properties:
        name:
          type: string
        imageURL:
          type: string
        link:
          type: string
      required:
      - imageURL
      - link
      - name
      type: object
    ContractAttributes:
      properties:
        useCases:
          items:
            type: string
          type: array
        standards:
          items:
            type: string
          type: array
        auditor:
          $ref: '#/components/schemas/AuditorData'
      required:
      - auditor
      - standards
      - useCases
      type: object
    VendorDto:
      properties:
        id:
          description: The unique identifier of the vendor of this contract template
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b4453
          type: string
        name:
          description: The name of the vendor of this contract template
          example: Fireblocks
          type: string
      required:
      - id
      - name
      type: object
    LeanContractDto:
      example:
        owner: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        canDeploy: true
        vendor: ""
        name: My Contract
        description: an ERC20 implementation
        isPublic: true
        attributes:
          useCases:
          - Stablecoin
          - CBDC
          standards:
          - ERC-20
          - ERC-1400
          auditor:
            name: MyAuditor
            imageURL: https://my-images.com/my-image.jpg
            link: https://my-auditor.com/my-audit-report
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        type: FUNGIBLE_TOKEN
      properties:
        id:
          description: The unique identifier of the contract template
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        name:
          description: The name of the contract template
          example: My Contract
          type: string
        description:
          description: A short description of the contract template
          example: an ERC20 implementation
          type: string
        attributes:
          allOf:
          - $ref: '#/components/schemas/ContractAttributes'
          description: The attributes related to this contract template. It will be
            displayed in the tokenization page
          example:
            useCases:
            - Stablecoin
            - CBDC
            standards:
            - ERC-20
            - ERC-1400
            auditor:
              name: MyAuditor
              imageURL: https://my-images.com/my-image.jpg
              link: https://my-auditor.com/my-audit-report
        isPublic:
          description: Is this a contract that is viewable by all fireblocks's users
            or is it visible only for this workspace
          example: true
          type: boolean
        canDeploy:
          description: "True if the workspace allowed to deploy this contract, false\
            \ otherwise"
          example: true
          type: boolean
        owner:
          description: "The workspace id of the owner of this contract template. If\
            \ it's a private contract, only this workspace will be allowed to deploy\
            \ it"
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/VendorDto'
          description: The details of the vendor of this contract template. Applicable
            only for public contract templates
        type:
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - NON_TOKEN
          - TOKEN_EXTENSION
          - TOKEN_UTILITY
          type: string
      required:
      - description
      - id
      - isPublic
      - name
      type: object
    TemplatesPaginatedResponse:
      example:
        next: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
        data:
        - owner: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          canDeploy: true
          vendor: ""
          name: My Contract
          description: an ERC20 implementation
          isPublic: true
          attributes:
            useCases:
            - Stablecoin
            - CBDC
            standards:
            - ERC-20
            - ERC-1400
            auditor:
              name: MyAuditor
              imageURL: https://my-images.com/my-image.jpg
              link: https://my-auditor.com/my-audit-report
          id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: FUNGIBLE_TOKEN
        - owner: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          canDeploy: true
          vendor: ""
          name: My Contract
          description: an ERC20 implementation
          isPublic: true
          attributes:
            useCases:
            - Stablecoin
            - CBDC
            standards:
            - ERC-20
            - ERC-1400
            auditor:
              name: MyAuditor
              imageURL: https://my-images.com/my-image.jpg
              link: https://my-auditor.com/my-audit-report
          id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: FUNGIBLE_TOKEN
      properties:
        data:
          description: The data of the current page
          items:
            $ref: '#/components/schemas/LeanContractDto'
          type: array
        next:
          description: The ID of the next page
          example: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
          nullable: true
          type: string
      required:
      - data
      type: object
    FunctionDoc:
      properties:
        details:
          description: A description of the function
          type: string
        params:
          additionalProperties:
            type: string
          description: A description of the function parameters
          type: object
        returns:
          additionalProperties:
            type: string
          description: A description of the function return values. only for read
            functions
          type: object
      type: object
    ContractDoc:
      properties:
        details:
          description: A description of the contract
          example: A token that can be minted and burned
          type: string
        events:
          description: A description of the contract`s events
          example: "Upgraded(address): {\"details\": \"Emitted when the implementation\
            \ is upgraded.\"}"
          type: string
        kind:
          description: Is it devdoc or userdoc
          example: dev
          type: string
        methods:
          additionalProperties:
            $ref: '#/components/schemas/FunctionDoc'
          description: The description of the contract functions
          example:
            constructor:
              details: Initializes the contract
          type: object
        version:
          description: The version of the contract
          example: "1"
          type: string
      required:
      - kind
      - methods
      - version
      type: object
    Parameter:
      example:
        components:
        - null
        - null
        name: _name
        description: The name of the token
        internalType: string
        type: string
      properties:
        name:
          description: The name of the parameter as it appears in the ABI
          example: _name
          type: string
        description:
          description: "A description of the parameter, fetched from the devdoc of\
            \ this contract"
          example: The name of the token
          type: string
        internalType:
          description: The internal type of the parameter as it appears in the ABI
          example: string
          type: string
        type:
          description: The type of the parameter as it appears in the ABI
          example: string
          type: string
        components:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
      required:
      - name
      - type
      type: object
    AbiFunction:
      example:
        outputs:
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        inputs:
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        name: mint
        stateMutability: pure
        description: description
        type: constructor
      properties:
        name:
          description: The name of the contract function as it appears in the ABI
          example: mint
          type: string
        stateMutability:
          description: The state mutability of the contract function as it appears
            in the ABI
          enum:
          - pure
          - view
          - nonpayable
          - payable
          example: pure
          type: string
        type:
          description: The type if the function
          enum:
          - function
          - constructor
          example: constructor
          type: string
        inputs:
          description: The parameters that this function/constructor posses
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        outputs:
          description: The parameters that this 'read' function returns
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        description:
          description: The documentation of this function (if has any)
          type: string
      required:
      - inputs
      - type
      type: object
    ContractUploadRequest:
      example:
        longDescription: |
          a full ERC20 implementation, containing the following:

           - mint
           - burn
        bytecode: bytecode
        docs:
          details: "This contract implements an upgradeable proxy. It is upgradeable\
            \ because calls are delegated to an implementation address that can be\
            \ changed. This address is stored in storage in the location specified\
            \ by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't\
            \ conflict with the storage layout of the implementation behind the proxy."
          errors:
            ERC1967NonPayable():
            - details: An upgrade function sees `msg.value > 0` that may be lost.
          events:
            Upgraded(address):
              details: Emitted when the implementation is upgraded.
          kind: dev
          methods:
            constructor:
              details: "Initializes the upgradeable proxy with an initial implementation\
                \ specified by `implementation`. If `_data` is nonempty, it's used\
                \ as data in a delegate call to `implementation`. This will typically\
                \ be an encoded function call, and allows initializing the storage\
                \ of the proxy like a Solidity constructor. Requirements: - If `data`\
                \ is empty, `msg.value` must be zero."
          version: 1
        name: My Contract
        description: an ERC20 implementation
        abi:
        - - inputs:
            - internalType: address
              name: implementation
              type: address
            - internalType: bytes
              name: _data
              type: bytes
            stateMutability: payable
            type: constructor
        - - inputs:
            - internalType: address
              name: implementation
              type: address
            - internalType: bytes
              name: _data
              type: bytes
            stateMutability: payable
            type: constructor
        attributes:
          useCases:
          - Stablecoin
          - CBDC
          standards:
          - ERC-20
          - ERC-1400
          auditor:
            name: MyAuditor
            imageURL: https://my-images.com/my-image.jpg
            link: https://my-auditor.com/my-audit-report
        type: FUNGIBLE_TOKEN
        sourcecode: sourcecode
      properties:
        name:
          description: The name of the contract template
          example: My Contract
          type: string
        description:
          description: A short description of the contract template
          example: an ERC20 implementation
          type: string
        longDescription:
          description: "A full description of the contract template. May contain \n\
            \ to break the lines"
          example: |
            a full ERC20 implementation, containing the following:

             - mint
             - burn
          type: string
        bytecode:
          description: The compiled artifact of this smart contract. Used for deployment
            of this contract template
          type: string
        sourcecode:
          description: The source code of the contract. Optional.
          type: string
        type:
          description: The type of the contract template
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - NON_TOKEN
          - TOKEN_EXTENSION
          - TOKEN_UTILITY
          example: FUNGIBLE_TOKEN
          type: string
        docs:
          allOf:
          - $ref: '#/components/schemas/ContractDoc'
          description: A `natspec` compliant documentation json. Can be retrieved
            from the output json after compilation
          example:
            details: "This contract implements an upgradeable proxy. It is upgradeable\
              \ because calls are delegated to an implementation address that can\
              \ be changed. This address is stored in storage in the location specified\
              \ by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't\
              \ conflict with the storage layout of the implementation behind the\
              \ proxy."
            errors:
              ERC1967NonPayable():
              - details: An upgrade function sees `msg.value > 0` that may be lost.
            events:
              Upgraded(address):
                details: Emitted when the implementation is upgraded.
            kind: dev
            methods:
              constructor:
                details: "Initializes the upgradeable proxy with an initial implementation\
                  \ specified by `implementation`. If `_data` is nonempty, it's used\
                  \ as data in a delegate call to `implementation`. This will typically\
                  \ be an encoded function call, and allows initializing the storage\
                  \ of the proxy like a Solidity constructor. Requirements: - If `data`\
                  \ is empty, `msg.value` must be zero."
            version: 1
        abi:
          items:
            description: The abi of the contract template. Necessary for displaying
              and for after deployment encoding
            example:
            - inputs:
              - internalType: address
                name: implementation
                type: address
              - internalType: bytes
                name: _data
                type: bytes
              stateMutability: payable
              type: constructor
            items:
              $ref: '#/components/schemas/AbiFunction'
            type: array
          type: array
        attributes:
          allOf:
          - $ref: '#/components/schemas/ContractAttributes'
          description: The attributes related to this contract template. It will be
            displayed in the tokenization page
          example:
            useCases:
            - Stablecoin
            - CBDC
            standards:
            - ERC-20
            - ERC-1400
            auditor:
              name: MyAuditor
              imageURL: https://my-images.com/my-image.jpg
              link: https://my-auditor.com/my-audit-report
      required:
      - abi
      - bytecode
      - description
      - name
      type: object
    ContractTemplateDto:
      example:
        longDescription: |
          a full ERC20 implementation, containing the following:

           - mint
           - burn
        owner: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        description: an ERC20 implementation
        abi:
        - - inputs:
            - internalType: address
              name: implementation
              type: address
            - internalType: bytes
              name: _data
              type: bytes
            stateMutability: payable
            type: constructor
        - - inputs:
            - internalType: address
              name: implementation
              type: address
            - internalType: bytes
              name: _data
              type: bytes
            stateMutability: payable
            type: constructor
        initializationPhase: ON_DEPLOYMENT
        type: FUNGIBLE_TOKEN
        docs:
          details: "This contract implements an upgradeable proxy. It is upgradeable\
            \ because calls are delegated to an implementation address that can be\
            \ changed. This address is stored in storage in the location specified\
            \ by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't\
            \ conflict with the storage layout of the implementation behind the proxy."
          errors:
            ERC1967NonPayable():
            - details: An upgrade function sees `msg.value > 0` that may be lost.
          events:
            Upgraded(address):
              details: Emitted when the implementation is upgraded.
          kind: dev
          methods:
            constructor:
              details: "Initializes the upgradeable proxy with an initial implementation\
                \ specified by `implementation`. If `_data` is nonempty, it's used\
                \ as data in a delegate call to `implementation`. This will typically\
                \ be an encoded function call, and allows initializing the storage\
                \ of the proxy like a Solidity constructor. Requirements: - If `data`\
                \ is empty, `msg.value` must be zero."
          version: 1
        canDeploy: true
        vendor: ""
        name: My Contract
        implementationContractId: implementationContractId
        isPublic: true
        attributes:
          useCases:
          - Stablecoin
          - CBDC
          standards:
          - ERC-20
          - ERC-1400
          auditor:
            name: MyAuditor
            imageURL: https://my-images.com/my-image.jpg
            link: https://my-auditor.com/my-audit-report
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
      properties:
        id:
          description: The unique identifier of the contract template
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        name:
          description: The name of the contract template
          example: My Contract
          type: string
        description:
          description: A short description of the contract template
          example: an ERC20 implementation
          type: string
        longDescription:
          description: "A full description of the contract template. May contain \n\
            \ to break the lines"
          example: |
            a full ERC20 implementation, containing the following:

             - mint
             - burn
          type: string
        abi:
          items:
            description: The abi of the contract template. Necessary for displaying
              and for after deployment encoding
            example:
            - inputs:
              - internalType: address
                name: implementation
                type: address
              - internalType: bytes
                name: _data
                type: bytes
              stateMutability: payable
              type: constructor
            items:
              $ref: '#/components/schemas/AbiFunction'
            type: array
          type: array
        attributes:
          allOf:
          - $ref: '#/components/schemas/ContractAttributes'
          description: The attributes related to this contract template. It will be
            displayed in the tokenization page
          example:
            useCases:
            - Stablecoin
            - CBDC
            standards:
            - ERC-20
            - ERC-1400
            auditor:
              name: MyAuditor
              imageURL: https://my-images.com/my-image.jpg
              link: https://my-auditor.com/my-audit-report
        docs:
          allOf:
          - $ref: '#/components/schemas/ContractDoc'
          description: A `natspec` compliant documentation json. Can be retrieved
            from the output json after compilation
          example:
            details: "This contract implements an upgradeable proxy. It is upgradeable\
              \ because calls are delegated to an implementation address that can\
              \ be changed. This address is stored in storage in the location specified\
              \ by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't\
              \ conflict with the storage layout of the implementation behind the\
              \ proxy."
            errors:
              ERC1967NonPayable():
              - details: An upgrade function sees `msg.value > 0` that may be lost.
            events:
              Upgraded(address):
                details: Emitted when the implementation is upgraded.
            kind: dev
            methods:
              constructor:
                details: "Initializes the upgradeable proxy with an initial implementation\
                  \ specified by `implementation`. If `_data` is nonempty, it's used\
                  \ as data in a delegate call to `implementation`. This will typically\
                  \ be an encoded function call, and allows initializing the storage\
                  \ of the proxy like a Solidity constructor. Requirements: - If `data`\
                  \ is empty, `msg.value` must be zero."
            version: 1
        owner:
          description: "The workspace id of the owner of this contract template. If\
            \ it's a private contract, only this workspace will be allowed to deploy\
            \ it"
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/VendorDto'
          description: The details of the vendor of this contract template. Applicable
            only for public contract templates
        isPublic:
          description: Is this a contract that is viewable by all fireblocks's users
            or is it visible only for this workspace
          example: true
          type: boolean
        canDeploy:
          description: "True if the workspace allowed to deploy this contract, false\
            \ otherwise"
          example: true
          type: boolean
        type:
          description: The type of the contract template
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - NON_TOKEN
          - TOKEN_EXTENSION
          - TOKEN_UTILITY
          example: FUNGIBLE_TOKEN
          type: string
        implementationContractId:
          type: string
        initializationPhase:
          enum:
          - ON_DEPLOYMENT
          - POST_DEPLOYMENT
          type: string
      required:
      - abi
      - description
      - id
      - initializationPhase
      - isPublic
      - name
      type: object
    HttpContractDoesNotExistError:
      example:
        code: "404"
        message: Contract does not exist
      properties:
        message:
          description: Not Found error code
          example: Contract does not exist
          type: string
        code:
          description: Error code
          example: "404"
          type: string
      type: object
    ParameterWithValue:
      example:
        components:
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        - components:
          - null
          - null
          name: _name
          description: The name of the token
          internalType: string
          type: string
        name: _name
        description: The name of the token
        functionValue: ""
        internalType: string
        type: string
        value: "true"
      properties:
        name:
          description: The name of the parameter as it appears in the ABI
          example: _name
          type: string
        description:
          description: "A description of the parameter, fetched from the devdoc of\
            \ this contract"
          example: The name of the token
          type: string
        internalType:
          description: The  internal type of the parameter as it appears in the ABI
          example: string
          type: string
        type:
          description: The type of the parameter as it appears in the ABI
          example: string
          type: string
        components:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        value:
          description: The value of the parameter. can also be ParameterWithValue
          example: "true"
          type: string
        functionValue:
          allOf:
          - $ref: '#/components/schemas/LeanAbiFunction'
          description: "The function value of this param (if has one). If this is\
            \ set, the `value` shouldn`t be. Used for proxies"
      required:
      - name
      - type
      type: object
    LeanAbiFunction:
      properties:
        name:
          description: The function name
          example: initialize
          type: string
        inputs:
          description: The function inputs
          items:
            $ref: '#/components/schemas/ParameterWithValue'
          type: array
      required:
      - inputs
      type: object
    ContractDeployRequest:
      example:
        assetId: ETH_TEST5
        constructorParameters:
        - internalType: string
          name: name_
          type: string
          value: TokenName
        - internalType: string
          name: symbol_
          type: string
          value: TokenSymbol
        vaultAccountId: "0"
      properties:
        assetId:
          description: The base asset identifier of the blockchain you want to deploy
            to
          example: ETH_TEST5
          type: string
        vaultAccountId:
          description: The vault account id you wish to deploy from
          example: "0"
          type: string
        constructorParameters:
          description: The constructor parameters of this contract
          example:
          - internalType: string
            name: name_
            type: string
            value: TokenName
          - internalType: string
            name: symbol_
            type: string
            value: TokenSymbol
          items:
            $ref: '#/components/schemas/ParameterWithValue'
          type: array
      required:
      - assetId
      - vaultAccountId
      type: object
    ContractDeployResponse:
      example:
        txId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
      properties:
        txId:
          description: The transaction id of the deployment request
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
      required:
      - txId
      type: object
    LeanDeployedContractResponseDto:
      example:
        contractTemplateId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        contractAddress: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        blockchainId: blockchainId
      properties:
        id:
          description: The deployed contract data identifier
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        contractAddress:
          description: The contract's onchain address
          example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
          type: string
        contractTemplateId:
          description: The contract template identifier
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        blockchainId:
          type: string
      required:
      - blockchainId
      - contractAddress
      - contractTemplateId
      - id
      type: object
    DeployedContractsPaginatedResponse:
      example:
        next: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
        data:
        - contractTemplateId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          contractAddress: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
          id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          blockchainId: blockchainId
        - contractTemplateId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          contractAddress: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
          id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          blockchainId: blockchainId
      properties:
        data:
          description: The data of the current page
          items:
            $ref: '#/components/schemas/LeanDeployedContractResponseDto'
          type: array
        next:
          description: The ID of the next page
          example: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
          nullable: true
          type: string
      required:
      - data
      type: object
    DeployedContractResponseDto:
      example:
        contractTemplateId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        contractAddress: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
        vaultAccountId: "0"
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        blockchainId: blockchainId
      properties:
        id:
          description: The deployed contract data identifier
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        contractAddress:
          description: The contract's onchain address
          example: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
          type: string
        contractTemplateId:
          description: The contract template identifier
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        vaultAccountId:
          description: The vault account id this contract was deploy from
          example: "0"
          type: string
        blockchainId:
          type: string
      required:
      - blockchainId
      - contractAddress
      - contractTemplateId
      - id
      type: object
    AssetMetadataDto:
      example:
        symbol: MYT
        holdersCount: 6
        totalSupply: "1000000000000000"
        contractAddress: 0x1234567890abcdef1234567890abcdef12345678
        vaultAccountId: "0"
        type: ERC20
        blockchain: ETH_TEST5
        assetId: BQ5R_MY_TOKEN
        issuerAddress: rGyXjc5d7s17vvt3NtKKascvJrnSxV21kQ
        decimals: 18
        name: MyToken
        testnet: true
        networkProtocol: ETH
      properties:
        assetId:
          description: The Fireblocks` asset id
          example: BQ5R_MY_TOKEN
          type: string
        name:
          description: The name of the token
          example: MyToken
          type: string
        symbol:
          description: The symbol of the token
          example: MYT
          type: string
        networkProtocol:
          description: The network protocol of the token
          example: ETH
          type: string
        totalSupply:
          description: The total supply of the token
          example: "1000000000000000"
          type: string
        holdersCount:
          description: The number of holders of the token
          example: 6
          type: number
        type:
          description: The type of the token
          example: ERC20
          type: string
        contractAddress:
          description: The address of the token contract
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        issuerAddress:
          description: "In case of Stellar or Ripple, the address of the issuer of\
            \ the token"
          example: rGyXjc5d7s17vvt3NtKKascvJrnSxV21kQ
          type: string
        testnet:
          description: Is it deployed on testnet or to mainnet
          example: true
          type: boolean
        blockchain:
          description: The blockchain native asset id which the token is deployed
            on
          example: ETH_TEST5
          type: string
        decimals:
          description: The number of decimals of the token
          example: 18
          type: number
        vaultAccountId:
          description: The id of the vault account that initiated the request to issue
            the token. Will be empty if token was issued outside of Fireblocks.
          example: "0"
          type: string
      required:
      - assetId
      type: object
    CollectionMetadataDto:
      properties:
        fbCollectionId:
          description: Fireblocks collection id
          example: 911fe739f0d4d123c98fd366c3bed35c6e30c00e
          type: string
        name:
          description: Collection name
          example: Rarible
          type: string
        symbol:
          description: Collection symbol
          example: RARI
          type: string
        standard:
          description: Collection contract standard
          example: ERC721
          type: string
        blockchainDescriptor:
          description: Collection's blockchain
          example: ETH_TEST5
          type: string
        contractAddress:
          description: Collection contract address
          example: 0x1723017329a804564bC8d215496C89eaBf1F3211
          type: string
      required:
      - blockchainDescriptor
      - fbCollectionId
      type: object
    ContractMetadataDto:
      properties:
        id:
          description: The deployed contract ID
          example: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
          type: string
        blockchainId:
          description: The blockchain ID
          example: B7QG017M
          type: string
        contractAddress:
          description: The address of the token contract
          example: 0x1234567890abcdef1234567890abcdef12345678
          type: string
        contractTemplateId:
          description: The contract template ID
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        vaultAccountId:
          description: The vault account ID that initiated the request to issue the
            token
          example: "0"
          type: string
      required:
      - blockchainId
      - contractAddress
      - contractTemplateId
      - id
      type: object
    TokenLinkDto:
      example:
        displayName: My Simple ERC20 Token
        id: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
        refId: BQ5R_MY_TOKEN
        type: FUNGIBLE_TOKEN
        tokenMetadata:
          symbol: MYT
          holdersCount: 6
          totalSupply: "1000000000000000"
          contractAddress: 0x1234567890abcdef1234567890abcdef12345678
          vaultAccountId: "0"
          type: ERC20
          blockchain: ETH_TEST5
          assetId: BQ5R_MY_TOKEN
          issuerAddress: rGyXjc5d7s17vvt3NtKKascvJrnSxV21kQ
          decimals: 18
          name: MyToken
          testnet: true
          networkProtocol: ETH
        status: COMPLETED
      properties:
        id:
          description: The token link id
          example: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
          type: string
        status:
          description: The token status
          enum:
          - PENDING
          - COMPLETED
          example: COMPLETED
          type: string
        type:
          description: The type of token
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - TOKEN_UTILITY
          - TOKEN_EXTENSION
          example: FUNGIBLE_TOKEN
          type: string
        refId:
          description: "The Fireblocks' reference id. Can be a Fireblocks' supported\
            \ asset, collectionId or contractId"
          example: BQ5R_MY_TOKEN
          type: string
        displayName:
          description: "The token display name. If was not provided, would be taken\
            \ from the contract template name"
          example: My Simple ERC20 Token
          type: string
        tokenMetadata:
          $ref: '#/components/schemas/TokenLinkDto_tokenMetadata'
      required:
      - id
      - status
      type: object
    TokensPaginatedResponse:
      example:
        next: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
        data:
        - displayName: My Simple ERC20 Token
          id: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
          refId: BQ5R_MY_TOKEN
          type: FUNGIBLE_TOKEN
          tokenMetadata:
            symbol: MYT
            holdersCount: 6
            totalSupply: "1000000000000000"
            contractAddress: 0x1234567890abcdef1234567890abcdef12345678
            vaultAccountId: "0"
            type: ERC20
            blockchain: ETH_TEST5
            assetId: BQ5R_MY_TOKEN
            issuerAddress: rGyXjc5d7s17vvt3NtKKascvJrnSxV21kQ
            decimals: 18
            name: MyToken
            testnet: true
            networkProtocol: ETH
          status: COMPLETED
        - displayName: My Simple ERC20 Token
          id: fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb
          refId: BQ5R_MY_TOKEN
          type: FUNGIBLE_TOKEN
          tokenMetadata:
            symbol: MYT
            holdersCount: 6
            totalSupply: "1000000000000000"
            contractAddress: 0x1234567890abcdef1234567890abcdef12345678
            vaultAccountId: "0"
            type: ERC20
            blockchain: ETH_TEST5
            assetId: BQ5R_MY_TOKEN
            issuerAddress: rGyXjc5d7s17vvt3NtKKascvJrnSxV21kQ
            decimals: 18
            name: MyToken
            testnet: true
            networkProtocol: ETH
          status: COMPLETED
      properties:
        data:
          description: The data of the current page
          items:
            $ref: '#/components/schemas/TokenLinkDto'
          type: array
        next:
          description: The ID of the next page
          example: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
          nullable: true
          type: string
      required:
      - data
      type: object
    EVMTokenCreateParamsDto:
      example:
        contractId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
        constructorParams:
        - internalType: string
          name: name
          type: string
          value: name
        - internalType: string
          name: symbol
          type: string
          value: symbol
        - components:
          - internalType: bool
            name: _isMintable
            type: bool
          internalType: struct MyStruct
          name: customConfigProps
          type: tuple
          value:
          - internalType: bool
            name: _isMintable
            type: bool
            value: false
      properties:
        contractId:
          description: The id of the contract template that will be used to create
            the token
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
        constructorParams:
          description: The constructor parameters and values of the contract template
          example:
          - internalType: string
            name: name
            type: string
            value: name
          - internalType: string
            name: symbol
            type: string
            value: symbol
          - components:
            - internalType: bool
              name: _isMintable
              type: bool
            internalType: struct MyStruct
            name: customConfigProps
            type: tuple
            value:
            - internalType: bool
              name: _isMintable
              type: bool
              value: false
          items:
            items:
              $ref: '#/components/schemas/ParameterWithValue'
            type: array
          type: array
      required:
      - contractId
      type: object
    StellarRippleCreateParamsDto:
      properties:
        symbol:
          description: The symbol of the token
          example: MyUSDT
          type: string
        name:
          description: The name of the token
          example: My USD Tether
          type: string
        issuerAddress:
          description: The address of the issuer of this token. Will be part of the
            identifier of this token on chain.
          example: rnDV4JiwgRNhudPY2sm65AzECpRXaasL4r
          type: string
      required:
      - issuerAddress
      - name
      - symbol
      type: object
    CreateTokenRequestDto:
      example:
        assetId: ETH_TEST5
        displayName: displayName
        vaultAccountId: "0"
        blockchainId: B7QG017M
        createParams:
          contractId: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          constructorParams:
          - internalType: string
            name: name
            type: string
            value: name
          - internalType: string
            name: symbol
            type: string
            value: symbol
          - components:
            - internalType: bool
              name: _isMintable
              type: bool
            internalType: struct MyStruct
            name: customConfigProps
            type: tuple
            value:
            - internalType: bool
              name: _isMintable
              type: bool
              value: false
      properties:
        blockchainId:
          description: The id of the blockchain the request was initiated on
          example: B7QG017M
          type: string
        assetId:
          description: The base asset identifier of the blockchain you want to deploy
            to
          example: ETH_TEST5
          type: string
        vaultAccountId:
          description: The id of the vault account that initiated the request to issue
            the token
          example: "0"
          type: string
        createParams:
          $ref: '#/components/schemas/CreateTokenRequestDto_createParams'
        displayName:
          type: string
      required:
      - createParams
      - vaultAccountId
      type: object
    AssetAlreadyExistHttpError:
      example:
        message: message
        error: Conflict
        statusCode: 409
      properties:
        statusCode:
          description: HTTP status code
          example: 409
          format: int32
          type: integer
        message:
          description: Error message
          type: string
        error:
          description: Short description of the HTTP error
          example: Conflict
          type: string
      type: object
    TokenLinkRequestDto:
      example:
        displayName: My Simple ERC20 Token
        refId: USDC_ETH_TEST5_1XF5
        type: FUNGIBLE_TOKEN
      properties:
        type:
          description: The type of token being linked
          enum:
          - FUNGIBLE_TOKEN
          - NON_FUNGIBLE_TOKEN
          - TOKEN_UTILITY
          - TOKEN_EXTENSION
          type: string
        refId:
          description: "The Fireblocks' token link reference id. For example, 'BQ5R_BDESC_ABC'\
            \ if it's a fungible \n\t\t\t\t\tasset"
          example: USDC_ETH_TEST5_1XF5
          type: string
        displayName:
          description: The token display name
          example: My Simple ERC20 Token
          type: string
      required:
      - refId
      - type
      type: object
    AssetDoesNotExistHttpError:
      example:
        message: message
        error: Not Found
        statusCode: 404
      properties:
        statusCode:
          description: HTTP status code
          example: 404
          format: int32
          type: integer
        message:
          description: Error message
          type: string
        error:
          description: Short description of the HTTP error
          example: Not Found
          type: string
      type: object
    TokenLinkExistsHttpError:
      example:
        message: message
        error: Conflict
        statusCode: 409
      properties:
        statusCode:
          description: HTTP status code
          example: 409
          format: int32
          type: integer
        message:
          description: Error message
          type: string
        error:
          description: Short description of the HTTP error
          example: Conflict
          type: string
      type: object
    NotFoundException:
      example:
        message: message
        error: Not Found
        statusCode: 404
      properties:
        statusCode:
          description: HTTP status code
          example: 404
          format: int32
          type: integer
        message:
          description: Error message
          type: string
        error:
          description: Short description of the HTTP error
          example: Not Found
          type: string
      type: object
    ContractAbiResponseDto:
      example:
        abi:
        - inputs:
          - internalType: address
            name: implementation
            type: address
          - internalType: bytes
            name: _data
            type: bytes
          stateMutability: nonpayable
          type: constructor
        implementationAbi:
        - inputs:
          - internalType: address
            name: to
            type: address
          - internalType: uint256
            name: amount
            type: uint256
          stateMutability: nonpayable
          type: function
          name: mint
      properties:
        abi:
          description: The abi of the contract
          example:
          - inputs:
            - internalType: address
              name: implementation
              type: address
            - internalType: bytes
              name: _data
              type: bytes
            stateMutability: nonpayable
            type: constructor
          items:
            $ref: '#/components/schemas/AbiFunction'
          type: array
        implementationAbi:
          description: The abi of the implementation contract if exists. Relevant
            only for proxy patterns
          example:
          - inputs:
            - internalType: address
              name: to
              type: address
            - internalType: uint256
              name: amount
              type: uint256
            stateMutability: nonpayable
            type: function
            name: mint
          items:
            $ref: '#/components/schemas/AbiFunction'
          type: array
      required:
      - abi
      type: object
    ReadAbiFunction:
      properties:
        stateMutability:
          enum:
          - pure
          - view
          example: pure
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        name:
          type: string
        type:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/ParameterWithValue'
          type: array
        description:
          type: string
      required:
      - inputs
      - stateMutability
      - type
      type: object
    ReadCallFunctionDto:
      example:
        abiFunction:
        - inputs: []
          stateMutability: view
          type: function
          name: decimals
          outputs:
          - name: ""
            type: uint8
            internalType: uint8
      properties:
        abiFunction:
          description: The abi of the read function you wish to call
          example:
          - inputs: []
            stateMutability: view
            type: function
            name: decimals
            outputs:
            - name: ""
              type: uint8
              internalType: uint8
          items:
            $ref: '#/components/schemas/ReadAbiFunction'
          type: array
      required:
      - abiFunction
      type: object
    ParameterWithValueList:
      items:
        $ref: '#/components/schemas/ParameterWithValue'
      type: array
    WriteAbiFunction:
      properties:
        stateMutability:
          enum:
          - payable
          - nonpayable
          example: nonpayable
          type: string
        outputs:
          items:
            $ref: '#/components/schemas/Parameter'
          type: array
        type:
          enum:
          - function
          type: string
        name:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/ParameterWithValue'
          type: array
        description:
          type: string
      required:
      - inputs
      - stateMutability
      - type
      type: object
    WriteCallFunctionDto:
      example:
        abiFunction:
        - inputs:
          - name: to
            type: address
            internalType: address
            value: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
          - name: amount
            type: uint256
            internalType: uint256
            value: 1000000
          stateMutability: nonpayable
          type: function
          name: mint
        note: note
        amount: "12.345"
        fee: "2000"
        vaultAccountId: "0"
        feeLevel: MEDIUM
      properties:
        vaultAccountId:
          description: The vault account id this contract was deploy from
          example: "0"
          type: string
        abiFunction:
          description: The abi of the read function you wish to call
          example:
          - inputs:
            - name: to
              type: address
              internalType: address
              value: 0xC2c4e1Db41F0bB97996D0eD0542D2170d146FB66
            - name: amount
              type: uint256
              internalType: uint256
              value: 1000000
            stateMutability: nonpayable
            type: function
            name: mint
          items:
            $ref: '#/components/schemas/WriteAbiFunction'
          type: array
        amount:
          description: Amount in base asset. Being used in payable functions
          example: "12.345"
          type: string
        feeLevel:
          description: Fee level for the write function transaction. interchangeable
            with the 'fee' field
          enum:
          - LOW
          - MEDIUM
          - HIGH
          example: MEDIUM
          type: string
        fee:
          description: Max fee amount for the write function transaction. interchangeable
            with the 'feeLevel' field
          example: "2000"
          type: string
        note:
          description: "Custom note, not sent to the blockchain, that describes the\
            \ transaction at your Fireblocks workspace"
          type: string
      required:
      - abiFunction
      - vaultAccountId
      type: object
    WriteCallFunctionResponseDto:
      example:
        txId: txId
      properties:
        txId:
          type: string
      required:
      - txId
      type: object
    StakingGetChainsResponse:
      items:
        type: string
      type: array
    AdditionalInfoDto:
      properties:
        estimatedAnnualReward:
          description: "The estimated annual reward rate for the blockchain, represented\
            \ as a decimal percentage value."
          example: 6.48
          type: number
        lockupPeriod:
          description: "The duration of the lockup period for certain actions on the\
            \ blockchain, measured in milliseconds."
          example: 172800000
          type: number
        activationPeriod:
          description: "The duration of the activation period for certain actions\
            \ on the blockchain, measured in milliseconds."
          example: 172800000
          type: number
      required:
      - activationPeriod
      - estimatedAnnualReward
      - lockupPeriod
      type: object
    ChainInfoResponseDto:
      example:
        chainDescriptor: SOL
        epochElapsed: 0.31
        epochDuration: 172800000
        additionalInfo: ""
        currentEpoch: 483
      properties:
        chainDescriptor:
          description: The protocol identifier (e.g. "ETH"/"SOL").
          example: SOL
          type: string
        currentEpoch:
          description: The current epoch number of the blockchain network.
          example: 483
          type: number
        epochElapsed:
          description: "The percentage of time that has elapsed within the current\
            \ epoch, represented as a decimal value between 0 and 1."
          example: 0.31
          type: number
        epochDuration:
          description: The total duration in milliseconds of a single epoch.
          example: 172800000
          type: number
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoDto'
          description: Additional information related to the blockchain. This may
            include extra details about the blockchain network.
      required:
      - additionalInfo
      - chainDescriptor
      - currentEpoch
      - epochDuration
      - epochElapsed
      type: object
    StakeRequestDto:
      example:
        stakeAmount: "32"
        txNote: stake request id CcaHc2L43ZWjwCHART3oZoJvHLAe9hzT2DJNUpBzoTN1 of 32ETH
          created on 02.04.23
        providerId: kiln
        fee: "7"
        vaultAccountId: "22"
        feeLevel: MEDIUM
      properties:
        vaultAccountId:
          description: The source vault account to stake from
          example: "22"
          type: string
        providerId:
          description: The ID of the provider
          example: kiln
          type: string
        stakeAmount:
          description: Amount of tokens to stake
          example: "32"
          type: string
        txNote:
          description: The note to associate with the stake transactions.
          example: stake request id CcaHc2L43ZWjwCHART3oZoJvHLAe9hzT2DJNUpBzoTN1 of
            32ETH created on 02.04.23
          type: string
        fee:
          description: "Represents the fee for a transaction, which can be specified\
            \ as a percentage value. Only one of fee/feeLevel is required."
          example: "7"
          type: string
        feeLevel:
          description: "Represents the fee level for a transaction, which can be set\
            \ as slow, medium, or fast. Only one of fee/feeLevel is required."
          example: MEDIUM
          type: string
      required:
      - providerId
      - stakeAmount
      - vaultAccountId
      type: object
    UnstakeRequestDto:
      properties:
        id:
          description: id of position to unstake
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850e
          type: string
        fee:
          description: "Represents the fee for a transaction, which can be specified\
            \ as a percentage value. Only one of fee/feeLevel is required."
          example: "7"
          type: string
        feeLevel:
          description: "Represents the fee level for a transaction, which can be set\
            \ as slow, medium, or fast. Only one of fee/feeLevel is required."
          example: MEDIUM
          type: string
        txNote:
          description: The note to associate with the transactions.
          example: "unstake request id b70701f4-d7b1-4795-a8ee-b09cdb5b850d #ETH"
          type: string
      required:
      - id
      type: object
    WithdrawRequestDto:
      properties:
        id:
          description: id of position to withdraw
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850f
          type: string
        fee:
          description: "Represents the fee for a transaction, which can be specified\
            \ as a percentage value. Only one of fee/feeLevel is required."
          example: "7"
          type: string
        feeLevel:
          description: "Represents the fee level for a transaction, which can be set\
            \ as slow, medium, or fast. Only one of fee/feeLevel is required."
          example: MEDIUM
          type: string
        txNote:
          description: The note to associate with the transactions.
          example: "withdraw request id b70701f4-d7b1-4795-a8ee-b09cdb5b850d #ETH"
          type: string
      required:
      - id
      type: object
    ExecuteActionRequest:
      oneOf:
      - $ref: '#/components/schemas/StakeRequestDto'
      - $ref: '#/components/schemas/UnstakeRequestDto'
      - $ref: '#/components/schemas/WithdrawRequestDto'
    StakeResponseDto:
      example:
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
      properties:
        id:
          description: The unique identifier of the staking position
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850d
          type: string
      required:
      - id
      type: object
    UnstakeResponseDto:
      properties: {}
      type: object
    WithdrawResponseDto:
      properties: {}
      type: object
    ExecuteActionResponse:
      oneOf:
      - $ref: '#/components/schemas/StakeResponseDto'
      - $ref: '#/components/schemas/UnstakeResponseDto'
      - $ref: '#/components/schemas/WithdrawResponseDto'
    RelatedTransactionDto:
      properties:
        txId:
          description: The transaction ID
          example: b70601f4-d7b1-4795-a8ee-b09cdb4r850d
          type: string
        completed:
          description: Is the transaction completed or not
          example: true
          type: boolean
      required:
      - completed
      - txId
      type: object
    SolanaBlockchainDataDto:
      properties:
        stakeAccountAddress:
          description: The stake account address matching the stakeAccountId.
          example: 3Ru67FyzMTcdENmmRL4Eve4dtPd6AdpuypR21q5EQCdq
          type: string
      required:
      - stakeAccountAddress
      type: object
    DelegationDto:
      example:
        availableActions:
        - unstake
        blockchainPositionInfo:
          stakeAccountAddress: 3Ru67FyzMTcdENmmRL4Eve4dtPd6AdpuypR21q5EQCdq
        chainDescriptor: SOL
        amount: "0.05"
        inProgress: true
        inProgressTxId: c80601f4-d7b1-4795-a8ee-b09cdb5b450c
        validatorAddress: FwR3PbjS5iyqzLiLugrBqKSa5EKZ4vK9SKs7eQXtT59f
        vaultAccountId: "2"
        rewardsAmount: "0.000856038"
        dateCreated: 2023-07-13T15:55:34.256Z
        providerId: kiln
        validatorName: FwR3P......tT59f
        id: b70701f4-d7b1-4795-a8ee-b09cdb5b850a
        relatedTransactions:
        - txId: b70601f4-d7b1-4795-a8ee-b09cdb4r850d
          completed: true
        - txId: c80601f4-d7b1-4795-a8ee-b09cdb5b450c
          completed: false
        providerName: Kiln
        status: active
      properties:
        id:
          description: The unique identifier of the staking position
          example: b70701f4-d7b1-4795-a8ee-b09cdb5b850a
          type: string
        vaultAccountId:
          description: The source vault account to stake from
          example: "2"
          type: string
        validatorName:
          description: The destination validator address name
          example: FwR3P......tT59f
          type: string
        providerName:
          description: The destination validator provider name
          example: Kiln
          type: string
        chainDescriptor:
          description: The protocol identifier (e.g. "ETH"/ "SOL") to use
          example: SOL
          type: string
        amount:
          description: "Amount of tokens to stake, measured in the staked asset unit."
          example: "0.05"
          type: string
        rewardsAmount:
          description: "The amount staked in the position, measured in the staked\
            \ asset unit."
          example: "0.000856038"
          type: string
        dateCreated:
          description: When was the request made (ISO Date).
          example: 2023-07-13T15:55:34.256Z
          type: string
        status:
          description: The current status.
          example: active
          type: string
        relatedTransactions:
          description: An array of transaction objects related to this position. Each
            object includes a 'txId' representing the transaction ID and a 'completed'
            boolean indicating if the transaction was completed.
          example:
          - txId: b70601f4-d7b1-4795-a8ee-b09cdb4r850d
            completed: true
          - txId: c80601f4-d7b1-4795-a8ee-b09cdb5b450c
            completed: false
          items:
            $ref: '#/components/schemas/RelatedTransactionDto'
          type: array
        validatorAddress:
          description: The destination address of the staking transaction.
          example: FwR3PbjS5iyqzLiLugrBqKSa5EKZ4vK9SKs7eQXtT59f
          type: string
        providerId:
          description: The unique identifier of the staking provider
          example: kiln
          type: string
        availableActions:
          description: "An array of available actions that can be performed. for example,\
            \ actions like \"unstake\" or \"withdraw\"."
          example:
          - unstake
          items:
            type: string
          type: array
        inProgress:
          description: "Indicates whether there is an ongoing action for this position\
            \ (true if ongoing, false if not)."
          example: true
          type: boolean
        inProgressTxId:
          description: The transaction ID of the ongoing request
          example: c80601f4-d7b1-4795-a8ee-b09cdb5b450c
          type: string
        blockchainPositionInfo:
          allOf:
          - $ref: '#/components/schemas/SolanaBlockchainDataDto'
          description: "Additional fields per blockchain - can be empty or missing\
            \ if not initialized or no additional info exists. The type depends on\
            \ the chainDescriptor value. For Solana (SOL), stake account address.\
            \ For Ethereum (ETH), an empty object is returned as no specific data\
            \ is available."
          example:
            stakeAccountAddress: 3Ru67FyzMTcdENmmRL4Eve4dtPd6AdpuypR21q5EQCdq
      required:
      - amount
      - availableActions
      - blockchainPositionInfo
      - chainDescriptor
      - dateCreated
      - id
      - inProgress
      - providerId
      - providerName
      - relatedTransactions
      - rewardsAmount
      - status
      - validatorAddress
      - validatorName
      - vaultAccountId
      type: object
    StakingGetAllDelegationsResponse:
      items:
        $ref: '#/components/schemas/DelegationDto'
      type: array
    AmountAndChainDescriptor:
      example:
        chainDescriptor: ETH
        amount: "32.007149606"
      properties:
        chainDescriptor:
          description: The protocol identifier (e.g. "ETH"/"SOL") for summary
          example: ETH
          type: string
        amount:
          description: Cryptocurrency quantity
          example: "32.007149606"
          type: string
      required:
      - amount
      - chainDescriptor
      type: object
    DelegationSummaryDto:
      example:
        rewardsAmount:
        - chainDescriptor: ETH
          amount: "32.007149606"
        - chainDescriptor: ETH
          amount: "32.007149606"
        inactive:
        - chainDescriptor: ETH
          amount: "32.007149606"
        - chainDescriptor: ETH
          amount: "32.007149606"
        active:
        - chainDescriptor: ETH
          amount: "32.007149606"
        - chainDescriptor: ETH
          amount: "32.007149606"
        totalStaked:
        - chainDescriptor: ETH
          amount: "32.007149606"
        - chainDescriptor: ETH
          amount: "32.007149606"
      properties:
        active:
          description: "An array of objects containing chain descriptors and associated\
            \ amounts, representing active positions."
          items:
            $ref: '#/components/schemas/AmountAndChainDescriptor'
          type: array
        inactive:
          description: "An array of objects containing chain descriptors and associated\
            \ amounts, representing inactive positions."
          items:
            $ref: '#/components/schemas/AmountAndChainDescriptor'
          type: array
        rewardsAmount:
          description: "An array of objects containing chain descriptors and associated\
            \ amounts, representing rewards positions."
          items:
            $ref: '#/components/schemas/AmountAndChainDescriptor'
          type: array
        totalStaked:
          description: "An array of objects with chain descriptors and total staked\
            \ amounts, representing the combined staked totals of active and inactive\
            \ positions."
          items:
            $ref: '#/components/schemas/AmountAndChainDescriptor'
          type: array
      required:
      - active
      - inactive
      - rewardsAmount
      - totalStaked
      type: object
    StakingGetSummaryByVaultResponse:
      additionalProperties:
        $ref: '#/components/schemas/DelegationSummaryDto'
      type: object
    ValidatorDto:
      properties:
        chainDescriptor:
          description: The protocol identifier (e.g. "ETH"/"SOL") of the validator
          example: SOL
          type: string
        feePercent:
          description: The service fee as a percentage out of the earned rewards
          example: 5
          type: number
      required:
      - chainDescriptor
      - feePercent
      type: object
    ProviderDto:
      example:
        termsOfServiceUrl: https://www.kiln.fi/terms-and-conditions-for-fireblocks-customers
        validators:
        - chainDescriptor: SOL
          feePercent: 5
        - chainDescriptor: ETH
          feePercent: 7
        id: kiln
        iconUrl: https://static.fireblocks.io/staking/validators/kiln_console.png
        providerName: Kiln
        isTermsOfServiceApproved: true
      properties:
        id:
          description: The ID of the provider
          example: kiln
          type: string
        providerName:
          description: Name of the provider
          example: Kiln
          type: string
        validators:
          description: An array of objects that includes chain descriptors and the
            corresponding fee percentages for validators supported by the provider
          example:
          - chainDescriptor: SOL
            feePercent: 5
          - chainDescriptor: ETH
            feePercent: 7
          items:
            $ref: '#/components/schemas/ValidatorDto'
          type: array
        iconUrl:
          description: URL to the validator's icon
          example: https://static.fireblocks.io/staking/validators/kiln_console.png
          type: string
        termsOfServiceUrl:
          description: URL to the terms of service
          example: https://www.kiln.fi/terms-and-conditions-for-fireblocks-customers
          type: string
        isTermsOfServiceApproved:
          description: Indicates whether the terms of service are approved
          example: true
          type: boolean
      required:
      - iconUrl
      - id
      - isTermsOfServiceApproved
      - providerName
      - termsOfServiceUrl
      - validators
      type: object
    StakingGetProvidersResponse:
      items:
        $ref: '#/components/schemas/ProviderDto'
      type: array
    ProvidersResponseDto:
      properties: {}
      type: object
    SetAdminQuorumThresholdRequest:
      properties:
        adminQuorumThreshold:
          description: The number of admins that will requires to approve an operation
          type: number
      type: object
    SetAdminQuorumThresholdResponse:
      properties:
        message:
          description: The message which indicates the result of the operation.
          example: Admin quorum threshold request sent successfully.
          type: string
      required:
      - message
      type: object
    Paging:
      example:
        next: next
      properties:
        next:
          description: Cursor to the next page
          type: string
      required:
      - next
      type: object
    MediaEntityResponse:
      example:
        contentType: IMAGE
        url: url
      properties:
        url:
          description: Cached accessible URL
          type: string
        contentType:
          description: Media type
          enum:
          - IMAGE
          - VIDEO
          - ANIMATION
          - THREE_D
          - TEXT
          - GIF
          - UNKNOWN_TYPE
          - SVG
          - AUDIO
          type: string
      required:
      - contentType
      - url
      type: object
    SpamOwnershipResponse:
      properties:
        result:
          description: Token spam result
          type: boolean
        source:
          description: Source of Token's Spam status value
          enum:
          - OWNER
          - SYSTEM
          type: string
      required:
      - result
      - source
      type: object
    TokenCollectionResponse:
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
      required:
      - id
      type: object
    TokenOwnershipResponse:
      example:
        standard: standard
        ncwId: ncwId
        tokenId: tokenId
        cachedMetadataURI: cachedMetadataURI
        vaultAccountId: vaultAccountId
        description: description
        media:
        - contentType: IMAGE
          url: url
        - contentType: IMAGE
          url: url
        collection: ""
        metadataURI: metadataURI
        ownershipLastUpdateTime: 6.027456183070403
        blockchainDescriptor: ETH
        ncwAccountId: ncwAccountId
        balance: balance
        ownershipStartTime: 0.8008281904610115
        name: name
        id: id
        spam: ""
        status: LISTED
      properties:
        id:
          description: The Fireblocks NFT asset id
          type: string
        tokenId:
          description: Token id within the contract/collection
          type: string
        standard:
          description: ERC721 / ERC1155
          type: string
        metadataURI:
          description: URL of the original token JSON metadata
          type: string
        cachedMetadataURI:
          description: URL of the cached token JSON metadata
          type: string
        media:
          description: Media items extracted from metadata JSON
          items:
            $ref: '#/components/schemas/MediaEntityResponse'
          type: array
        spam:
          allOf:
          - $ref: '#/components/schemas/SpamOwnershipResponse'
          description: Owned Token's Spam status
        collection:
          allOf:
          - $ref: '#/components/schemas/TokenCollectionResponse'
          description: Parent collection information
        balance:
          type: string
        vaultAccountId:
          type: string
        ownershipStartTime:
          type: number
        ownershipLastUpdateTime:
          type: number
        blockchainDescriptor:
          enum:
          - ETH
          - ETH_TEST3
          - ETH_TEST5
          - ETH_TEST6
          - POLYGON
          - POLYGON_TEST_MUMBAI
          - AMOY_POLYGON_TEST
          - XTZ
          - XTZ_TEST
          - BASECHAIN_ETH
          type: string
        description:
          type: string
        name:
          type: string
        ncwId:
          description: Ownership Non-Custodial Wallet ID
          type: string
        ncwAccountId:
          description: Ownership Non-Custodial Wallet's account ID
          type: string
        status:
          description: Owned Token's status
          enum:
          - LISTED
          - ARCHIVED
          type: string
      required:
      - balance
      - blockchainDescriptor
      - id
      - ownershipLastUpdateTime
      - ownershipStartTime
      - standard
      - status
      - tokenId
      type: object
    GetOwnershipTokensResponse:
      example:
        data:
        - standard: standard
          ncwId: ncwId
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          vaultAccountId: vaultAccountId
          description: description
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          metadataURI: metadataURI
          ownershipLastUpdateTime: 6.027456183070403
          blockchainDescriptor: ETH
          ncwAccountId: ncwAccountId
          balance: balance
          ownershipStartTime: 0.8008281904610115
          name: name
          id: id
          spam: ""
          status: LISTED
        - standard: standard
          ncwId: ncwId
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          vaultAccountId: vaultAccountId
          description: description
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          metadataURI: metadataURI
          ownershipLastUpdateTime: 6.027456183070403
          blockchainDescriptor: ETH
          ncwAccountId: ncwAccountId
          balance: balance
          ownershipStartTime: 0.8008281904610115
          name: name
          id: id
          spam: ""
          status: LISTED
        paging:
          next: next
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/TokenOwnershipResponse'
          type: array
      type: object
    SpamTokenResponse:
      properties:
        result:
          description: Token spam result
          type: boolean
      required:
      - result
      type: object
    TokenResponse:
      example:
        standard: standard
        blockchainDescriptor: ETH
        tokenId: tokenId
        cachedMetadataURI: cachedMetadataURI
        name: name
        description: description
        id: id
        media:
        - contentType: IMAGE
          url: url
        - contentType: IMAGE
          url: url
        collection: ""
        spam: ""
        metadataURI: metadataURI
      properties:
        id:
          description: The Fireblocks NFT asset id
          type: string
        tokenId:
          description: Token id within the contract/collection
          type: string
        standard:
          description: ERC721 / ERC1155
          type: string
        metadataURI:
          description: URL of the original token JSON metadata
          type: string
        cachedMetadataURI:
          description: URL of the cached token JSON metadata
          type: string
        media:
          description: Media items extracted from metadata JSON
          items:
            $ref: '#/components/schemas/MediaEntityResponse'
          type: array
        spam:
          allOf:
          - $ref: '#/components/schemas/SpamTokenResponse'
          description: Token spam status
        collection:
          allOf:
          - $ref: '#/components/schemas/TokenCollectionResponse'
          description: Parent collection information
        blockchainDescriptor:
          enum:
          - ETH
          - ETH_TEST3
          - ETH_TEST5
          - ETH_TEST6
          - POLYGON
          - POLYGON_TEST_MUMBAI
          - AMOY_POLYGON_TEST
          - XTZ
          - XTZ_TEST
          - BASECHAIN_ETH
          type: string
        description:
          type: string
        name:
          type: string
      required:
      - blockchainDescriptor
      - id
      - standard
      - tokenId
      type: object
    ListOwnedTokensResponse:
      example:
        data:
        - standard: standard
          blockchainDescriptor: ETH
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          name: name
          description: description
          id: id
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          spam: ""
          metadataURI: metadataURI
        - standard: standard
          blockchainDescriptor: ETH
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          name: name
          description: description
          id: id
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          spam: ""
          metadataURI: metadataURI
        paging:
          next: next
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/TokenResponse'
          type: array
      type: object
    CollectionOwnershipResponse:
      example:
        standard: standard
        symbol: symbol
        blockchainDescriptor: ETH
        name: name
        contractAddress: contractAddress
        id: id
      properties:
        id:
          description: Fireblocks collection id
          type: string
        name:
          description: Collection name
          type: string
        symbol:
          description: Collection symbol
          type: string
        standard:
          description: Collection contract standard
          type: string
        blockchainDescriptor:
          description: Collection's blockchain
          enum:
          - ETH
          - ETH_TEST3
          - ETH_TEST5
          - ETH_TEST6
          - POLYGON
          - POLYGON_TEST_MUMBAI
          - AMOY_POLYGON_TEST
          - XTZ
          - XTZ_TEST
          - BASECHAIN_ETH
          type: string
        contractAddress:
          description: Collection contract standard
          type: string
      required:
      - blockchainDescriptor
      - id
      type: object
    ListOwnedCollectionsResponse:
      example:
        data:
        - standard: standard
          symbol: symbol
          blockchainDescriptor: ETH
          name: name
          contractAddress: contractAddress
          id: id
        - standard: standard
          symbol: symbol
          blockchainDescriptor: ETH
          name: name
          contractAddress: contractAddress
          id: id
        paging:
          next: next
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/CollectionOwnershipResponse'
          type: array
      type: object
    GetNFTsResponse:
      example:
        data:
        - standard: standard
          blockchainDescriptor: ETH
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          name: name
          description: description
          id: id
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          spam: ""
          metadataURI: metadataURI
        - standard: standard
          blockchainDescriptor: ETH
          tokenId: tokenId
          cachedMetadataURI: cachedMetadataURI
          name: name
          description: description
          id: id
          media:
          - contentType: IMAGE
            url: url
          - contentType: IMAGE
            url: url
          collection: ""
          spam: ""
          metadataURI: metadataURI
        paging:
          next: next
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          items:
            $ref: '#/components/schemas/TokenResponse'
          type: array
      type: object
    UpdateTokenOwnershipStatusDto:
      example:
        status: LISTED
      properties:
        status:
          enum:
          - LISTED
          - ARCHIVED
          type: string
      required:
      - status
      type: object
    TokenOwnershipStatusUpdatePayload:
      example:
        assetId: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
        status: ARCHIVED
      properties:
        assetId:
          description: Token's asset id
          example: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
          type: string
          x-fb-entity: asset
        status:
          description: Token's ownership new status
          enum:
          - LISTED
          - ARCHIVED
          example: ARCHIVED
          type: string
      required:
      - assetId
      - status
      type: object
    UpdateTokensOwnershipStatusRequest:
      items:
        $ref: '#/components/schemas/TokenOwnershipStatusUpdatePayload'
      type: array
    TokenOwnershipSpamUpdatePayload:
      example:
        assetId: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
        spam: true
      properties:
        assetId:
          description: Token's asset id
          example: NFT-abcdefabcdefabcdefabcdefabcdefabcdefabcd
          type: string
          x-fb-entity: asset
        spam:
          description: Token's ownership new spam value
          example: true
          type: boolean
      required:
      - assetId
      - spam
      type: object
    UpdateTokensOwnershipSpamRequest:
      items:
        $ref: '#/components/schemas/TokenOwnershipSpamUpdatePayload'
      type: array
    SessionMetadata:
      properties:
        appUrl:
          type: string
        appName:
          type: string
        appDescription:
          type: string
        appIcon:
          type: string
      required:
      - appUrl
      type: object
    SessionDTO:
      example:
        vaultAccountId: 1
        sessionMetadata: ""
        chainIds:
        - ETH
        - ETH_TEST
        - SOL
        id: 4e9e7051-f3b2-48e9-8ee6-b12492552657
        feeLevel: MEDIUM
        creationDate: 2000-01-23T04:56:07.000+00:00
        userId: userId
        connectionType: WalletConnect
        connectionMethod: API
      properties:
        id:
          description: Id of the connection
          example: 4e9e7051-f3b2-48e9-8ee6-b12492552657
          type: string
        userId:
          description: Id of the user that created the connection
          type: string
        sessionMetadata:
          allOf:
          - $ref: '#/components/schemas/SessionMetadata'
          description: Metadata of the connection (provided by the dapp)
        vaultAccountId:
          description: The vault to connect
          example: 1
          type: number
        feeLevel:
          description: The default fee level
          enum:
          - MEDIUM
          - HIGH
          example: MEDIUM
          type: string
        chainIds:
          description: The chains approved for the connection
          example:
          - ETH
          - ETH_TEST
          - SOL
          items:
            type: string
          type: array
        connectionType:
          description: The connection's type
          enum:
          - WalletConnect
          example: WalletConnect
          type: string
        connectionMethod:
          description: The method through which the connection was established
          enum:
          - DESKTOP
          - MOBILE
          - API
          example: API
          type: string
        creationDate:
          description: Timestamp of the session's creation
          format: date-time
          type: string
      required:
      - chainIds
      - connectionMethod
      - connectionType
      - creationDate
      - feeLevel
      - id
      - sessionMetadata
      - userId
      - vaultAccountId
      type: object
    GetConnectionsResponse:
      example:
        data:
        - vaultAccountId: 1
          sessionMetadata: ""
          chainIds:
          - ETH
          - ETH_TEST
          - SOL
          id: 4e9e7051-f3b2-48e9-8ee6-b12492552657
          feeLevel: MEDIUM
          creationDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          connectionType: WalletConnect
          connectionMethod: API
        - vaultAccountId: 1
          sessionMetadata: ""
          chainIds:
          - ETH
          - ETH_TEST
          - SOL
          id: 4e9e7051-f3b2-48e9-8ee6-b12492552657
          feeLevel: MEDIUM
          creationDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          connectionType: WalletConnect
          connectionMethod: API
        paging:
          next: next
      properties:
        data:
          description: Array with the requested Web3 connection's data
          items:
            $ref: '#/components/schemas/SessionDTO'
          type: array
        paging:
          $ref: '#/components/schemas/Paging'
      required:
      - data
      type: object
    CreateVaultAccountConnectionRequest:
      example:
        vaultAccountId: 1
        chainIds:
        - ETH
        feeLevel: MEDIUM
        uri: wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637
      properties:
        vaultAccountId:
          description: The ID of the vault to connect to the dApp.
          example: 1
          type: number
        feeLevel:
          description: The default fee level. Valid values are `MEDIUM` and `HIGH`.
          enum:
          - MEDIUM
          - HIGH
          example: MEDIUM
          type: string
        uri:
          description: The WalletConnect uri provided by the dapp.
          example: wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637
          type: string
        chainIds:
          description: The IDs of the blockchain networks used in the Web3 connection
            (Currently required in V1 connections only).
          example:
          - ETH
          items:
            type: string
          type: array
      required:
      - feeLevel
      - uri
      - vaultAccountId
      type: object
    CreateNcwConnectionRequest:
      properties:
        ncwId:
          description: The ID of the Non-Custodial Wallet to connect to the dApp.
          example: b8337f1d-bd61-4d6c-afc1-4c9d60aa2132
          type: string
        ncwAccountId:
          description: The NCW account ID to connect to the dApp.
          example: 1
          type: number
        feeLevel:
          description: The default fee level. Valid values are `MEDIUM` and `HIGH`.
          enum:
          - MEDIUM
          - HIGH
          example: MEDIUM
          type: string
        uri:
          description: The WalletConnect uri provided by the dapp.
          example: wc:77752975-906f-48f5-b59f-047826ee947e@1?bridge=https%3A%2F%2F0.bridge.walletconnect.org&key=64be99adc6086b7a729b0ec8c7e1f174927ab92e84f5c6f9527050225344a637
          type: string
        chainIds:
          description: The IDs of the blockchain networks used in the Web3 connection
            (Currently required in V1 connections only).
          example:
          - ETH
          items:
            type: string
          type: array
      required:
      - feeLevel
      - ncwAccountId
      - ncwId
      - uri
      type: object
    CreateConnectionRequest:
      oneOf:
      - $ref: '#/components/schemas/CreateVaultAccountConnectionRequest'
      - $ref: '#/components/schemas/CreateNcwConnectionRequest'
    CreateConnectionResponse:
      example:
        sessionMetadata: ""
        id: 4e9e7051-f3b2-48e9-8ee6-b12492552657
      properties:
        id:
          description: The ID of the Web3 connection initiated.
          example: 4e9e7051-f3b2-48e9-8ee6-b12492552657
          type: string
        sessionMetadata:
          allOf:
          - $ref: '#/components/schemas/SessionMetadata'
          description: Metadata of the Web3 connection (provided by the DApp).
      required:
      - id
      - sessionMetadata
      type: object
    RespondToConnectionRequest:
      example:
        approve: true
      properties:
        approve:
          description: Approval of the initiated Web3 connection.
          example: true
          type: boolean
      required:
      - approve
      type: object
    TravelRuleAddress:
      properties:
        street:
          description: Street address
          example: 1234 Example St
          type: string
        city:
          description: City
          example: New York
          type: string
        state:
          description: State or province
          example: NY
          type: string
        postalCode:
          description: Postal or ZIP code
          example: "10001"
          type: string
      required:
      - city
      - postalCode
      - state
      - street
      type: object
    TravelRuleValidateTransactionRequest:
      example:
        beneficiaryVASPname: HelloCrypto
        transactionAsset: BTC
        originatorEqualsBeneficiary: false
        beneficiaryAccountNumber: 1234-1234-1234-12234
        beneficiaryName: John Doe
        transactionAmount: "10"
        travelRuleBehavior: true
        destination: bc1qxy2kgdygjrsqtzq2n0yrf1234p83kkfjhx0wlh
        beneficiaryAddress: "{\"addressLine: [Wayne Manor, Gotham City, New York,\
          \ USA]\"}"
        originatorVASPdid: did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2
        beneficiaryVASPdid: did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992
      properties:
        transactionAsset:
          description: "Transaction asset symbol BTC,ETH)"
          example: BTC
          type: string
        destination:
          description: Transaction destination address
          example: bc1qxy2kgdygjrsqtzq2n0yrf1234p83kkfjhx0wlh
          type: string
        transactionAmount:
          description: Transaction amount in the transaction asset
          example: "10"
          type: string
        originatorVASPdid:
          description: This is the identifier assigned to your VASP
          example: did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2
          type: string
        originatorEqualsBeneficiary:
          description: '"True" if the originator and beneficiary is the same person
            and you therefore do not need to collect any information. "False" if it
            is a third-party transfer.'
          example: false
          type: boolean
        travelRuleBehavior:
          description: This will also check if the transaction is a TRAVEL_RULE in
            the beneficiary VASP's jurisdiction
          example: true
          type: boolean
        beneficiaryVASPdid:
          description: This is the identifier assigned to the VASP the funds are being
            sent to
          example: did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992
          type: string
        beneficiaryVASPname:
          description: Beneficiary VASP name
          example: HelloCrypto
          type: string
        beneficiaryName:
          description: Beneficiary  name
          example: John Doe
          type: string
        beneficiaryAccountNumber:
          description: Beneficiary  name
          example: 1234-1234-1234-12234
          type: string
        beneficiaryAddress:
          allOf:
          - $ref: '#/components/schemas/TravelRuleAddress'
          description: Beneficiary  name
          example: "{\"addressLine: [Wayne Manor, Gotham City, New York, USA]\"}"
      required:
      - destination
      - originatorEqualsBeneficiary
      - originatorVASPdid
      - transactionAmount
      - transactionAsset
      type: object
    TravelRuleValidateTransactionResponse:
      example:
        beneficiaryVASPname: Fireblocks
        addressSource: UNKNOWN
        beneficiaryAddressType: UNKNOWN
        isValid: true
        warnings:
        - optional-beneficiaryAccountNumber
        type: TRAVELRULE
        beneficiaryVASPdid: did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992
      properties:
        isValid:
          description: "\"isValid\" will tell you if you have collected all the information\
            \ needed for the travel rule data transfer. Once this field = \"true\"\
            , you can move on to the next step which is to transfer the front-end\
            \ information to your back-end and perform Travel Rule Transaction create"
          example: true
          type: boolean
        type:
          description: "\"type\" will tell you if the virtual asset value converted\
            \ to FIAT value of the withdrawal request is above (=TRAVELRULE) or below\
            \ (=BELOW_THRESHOLD) the threshold in your jurisdiction. If it is to an\
            \ unhosted wallet which does not require travel rule information to be\
            \ sent and only collected, it will say NON_CUSTODIAL."
          example: TRAVELRULE
          type: string
        beneficiaryAddressType:
          description: '"beneficiaryAddressType" will tell you if your blockchain
            analytics provider or internal address book has been able to identify
            the wallet address.'
          example: UNKNOWN
          type: string
        addressSource:
          description: '"addressSource" will tell you if the address was found in
            your internal address book or identified by the blockchain analytics provider.'
          example: UNKNOWN
          type: string
        beneficiaryVASPdid:
          description: The VASP DID of the beneficiary VASP
          example: did:ethr:0x46a7ed5813ce735387df2bfb245bd7722e0de992
          type: string
        beneficiaryVASPname:
          description: '"beneficiaryVASPname" will tell you the name of the VASP that
            has been identified as the owner of the wallet address. This name is used
            in a subsequent call to get its DID.'
          example: Fireblocks
          type: string
        warnings:
          description: '"errors/warnings" will tell you what information about the
            beneficiary you need to collect from the sender.'
          example:
          - optional-beneficiaryAccountNumber
          items:
            type: string
          type: array
      required:
      - addressSource
      - beneficiaryAddressType
      - beneficiaryVASPdid
      - beneficiaryVASPname
      - isValid
      - type
      - warnings
      type: object
    TravelRuleValidateFullTransactionRequest:
      example:
        originatorProof: ""
        transactionAsset: transactionAsset
        originator: ""
        notificationEmail: notificationEmail
        beneficiaryVASPname: beneficiaryVASPname
        pii: ""
        protocol: protocol
        skipBeneficiaryDataValidation: true
        originatorDid: originatorDid
        beneficiary: ""
        encrypted: encrypted
        transactionAmount: transactionAmount
        travelRuleBehavior: true
        transactionBlockchainInfo: ""
        beneficiaryProof: ""
        beneficiaryDid: beneficiaryDid
        originatorVASPdid: originatorVASPdid
        beneficiaryVASPdid: beneficiaryVASPdid
      properties:
        transactionAsset:
          description: The asset involved in the transaction
          type: string
        transactionAmount:
          description: The amount of the transaction
          type: string
        originatorDid:
          description: The DID of the transaction originator
          type: string
        beneficiaryDid:
          description: The DID of the transaction beneficiary
          type: string
        originatorVASPdid:
          description: The VASP ID of the transaction originator
          type: string
        beneficiaryVASPdid:
          description: The VASP ID of the transaction beneficiary
          type: string
        beneficiaryVASPname:
          description: The name of the VASP acting as the beneficiary
          type: string
        transactionBlockchainInfo:
          allOf:
          - $ref: '#/components/schemas/TravelRuleTransactionBlockchainInfo'
          description: Information about the blockchain transaction
        originator:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Information about the originator of the transaction
        beneficiary:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Information about the beneficiary of the transaction
        encrypted:
          description: Encrypted data related to the transaction
          type: string
        protocol:
          description: The protocol used to perform the travel rule
          type: string
        notificationEmail:
          description: The email address where a notification should be sent upon
            completion of the travel rule
          type: string
        skipBeneficiaryDataValidation:
          description: Whether to skip validation of beneficiary data
          type: boolean
        travelRuleBehavior:
          description: Whether to check if the transaction is a TRAVEL_RULE in the
            beneficiary VASP's jurisdiction
          type: boolean
        originatorProof:
          allOf:
          - $ref: '#/components/schemas/TravelRuleOwnershipProof'
          description: Ownership proof related to the originator of the transaction
        beneficiaryProof:
          allOf:
          - $ref: '#/components/schemas/TravelRuleOwnershipProof'
          description: Ownership proof related to the beneficiary of the transaction
        pii:
          allOf:
          - $ref: '#/components/schemas/TravelRulePiiIVMS'
          description: Personal identifiable information related to the transaction
      required:
      - beneficiary
      - originator
      type: object
    TravelRuleIssuer:
      example:
        issuerDid: issuerDid
      properties:
        issuerDid:
          type: string
      required:
      - issuerDid
      type: object
    TravelRuleIssuers:
      example:
        country:
          issuerDid: issuerDid
        website:
          issuerDid: issuerDid
        city:
          issuerDid: issuerDid
        isRegulated:
          issuerDid: issuerDid
        description:
          issuerDid: issuerDid
        businessNumber:
          issuerDid: issuerDid
        yearFounded:
          issuerDid: issuerDid
        legalName:
          issuerDid: issuerDid
        legalStructure:
          issuerDid: issuerDid
        regulatoryAuthorities:
          issuerDid: issuerDid
        name:
          issuerDid: issuerDid
        logo:
          issuerDid: issuerDid
        addressLine1:
          issuerDid: issuerDid
        incorporationCountry:
          issuerDid: issuerDid
      properties:
        yearFounded:
          $ref: '#/components/schemas/TravelRuleIssuer'
        isRegulated:
          $ref: '#/components/schemas/TravelRuleIssuer'
        regulatoryAuthorities:
          $ref: '#/components/schemas/TravelRuleIssuer'
        name:
          $ref: '#/components/schemas/TravelRuleIssuer'
        logo:
          $ref: '#/components/schemas/TravelRuleIssuer'
        website:
          $ref: '#/components/schemas/TravelRuleIssuer'
        legalName:
          $ref: '#/components/schemas/TravelRuleIssuer'
        legalStructure:
          $ref: '#/components/schemas/TravelRuleIssuer'
        incorporationCountry:
          $ref: '#/components/schemas/TravelRuleIssuer'
        businessNumber:
          $ref: '#/components/schemas/TravelRuleIssuer'
        addressLine1:
          $ref: '#/components/schemas/TravelRuleIssuer'
        city:
          $ref: '#/components/schemas/TravelRuleIssuer'
        country:
          $ref: '#/components/schemas/TravelRuleIssuer'
        description:
          $ref: '#/components/schemas/TravelRuleIssuer'
      required:
      - addressLine1
      - businessNumber
      - city
      - country
      - description
      - incorporationCountry
      - isRegulated
      - legalName
      - legalStructure
      - logo
      - name
      - regulatoryAuthorities
      - website
      - yearFounded
      type: object
    TravelRuleVASP:
      example:
        country: country
        travelRule_TRISA: travelRule_TRISA
        travelRule_TRP: travelRule_TRP
        isNotifiable: true
        city: city
        documents: documents
        isRegulated: isRegulated
        travelRule_EMAIL: travelRule_EMAIL
        description: description
        identificationType: identificationType
        identificationCountry: identificationCountry
        travelRule_SYGNA: travelRule_SYGNA
        lastReceivedDate: lastReceivedDate
        legalName: legalName
        number: number
        createdAt: createdAt
        legalStructure: legalStructure
        street: street
        travelRule_SHYFT: travelRule_SHYFT
        regulatoryAuthorities: regulatoryAuthorities
        addressLine1: addressLine1
        logo: logo
        addressLine2: addressLine2
        state: state
        jurisdictions: jurisdictions
        travelRule_TRLIGHT: travelRule_TRLIGHT
        updatedAt: updatedAt
        website: website
        hasAdmin: true
        updatedBy: updatedBy
        verificationStatus: verificationStatus
        emailDomains: emailDomains
        businessNumber: businessNumber
        yearFounded: yearFounded
        issuers:
          country:
            issuerDid: issuerDid
          website:
            issuerDid: issuerDid
          city:
            issuerDid: issuerDid
          isRegulated:
            issuerDid: issuerDid
          description:
            issuerDid: issuerDid
          businessNumber:
            issuerDid: issuerDid
          yearFounded:
            issuerDid: issuerDid
          legalName:
            issuerDid: issuerDid
          legalStructure:
            issuerDid: issuerDid
          regulatoryAuthorities:
            issuerDid: issuerDid
          name:
            issuerDid: issuerDid
          logo:
            issuerDid: issuerDid
          addressLine1:
            issuerDid: issuerDid
          incorporationCountry:
            issuerDid: issuerDid
        travelRule_OPENVASP: travelRule_OPENVASP
        travelRule_USTRAVELRULEWG: travelRule_USTRAVELRULEWG
        unit: unit
        otherNames: otherNames
        certificates: certificates
        lastSentDate: lastSentDate
        createdBy: createdBy
        name: name
        postCode: postCode
        did: did
        incorporationCountry: incorporationCountry
      properties:
        did:
          type: string
        name:
          type: string
        verificationStatus:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        emailDomains:
          type: string
        website:
          type: string
        logo:
          type: string
        legalStructure:
          type: string
        legalName:
          type: string
        yearFounded:
          type: string
        incorporationCountry:
          type: string
        isRegulated:
          type: string
        otherNames:
          type: string
        identificationType:
          type: string
        identificationCountry:
          type: string
        businessNumber:
          type: string
        regulatoryAuthorities:
          type: string
        jurisdictions:
          type: string
        street:
          type: string
        number:
          type: string
        unit:
          type: string
        postCode:
          type: string
        state:
          type: string
        certificates:
          type: string
        description:
          type: string
        travelRule_OPENVASP:
          type: string
        travelRule_SYGNA:
          type: string
        travelRule_TRISA:
          type: string
        travelRule_TRLIGHT:
          type: string
        travelRule_EMAIL:
          type: string
        travelRule_TRP:
          type: string
        travelRule_SHYFT:
          type: string
        travelRule_USTRAVELRULEWG:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        lastSentDate:
          type: string
        lastReceivedDate:
          type: string
        documents:
          type: string
        hasAdmin:
          type: boolean
        isNotifiable:
          type: boolean
        issuers:
          $ref: '#/components/schemas/TravelRuleIssuers'
      required:
      - addressLine1
      - addressLine2
      - businessNumber
      - certificates
      - city
      - country
      - createdAt
      - createdBy
      - description
      - did
      - documents
      - emailDomains
      - hasAdmin
      - identificationCountry
      - identificationType
      - incorporationCountry
      - isNotifiable
      - isRegulated
      - issuers
      - jurisdictions
      - lastReceivedDate
      - lastSentDate
      - legalName
      - legalStructure
      - logo
      - name
      - number
      - otherNames
      - postCode
      - regulatoryAuthorities
      - state
      - street
      - travelRule_EMAIL
      - travelRule_OPENVASP
      - travelRule_SHYFT
      - travelRule_SYGNA
      - travelRule_TRISA
      - travelRule_TRLIGHT
      - travelRule_TRP
      - travelRule_USTRAVELRULEWG
      - unit
      - updatedAt
      - updatedBy
      - verificationStatus
      - website
      - yearFounded
      type: object
    TravelRuleGetAllVASPsResponse:
      example:
        vasps:
        - country: country
          travelRule_TRISA: travelRule_TRISA
          travelRule_TRP: travelRule_TRP
          isNotifiable: true
          city: city
          documents: documents
          isRegulated: isRegulated
          travelRule_EMAIL: travelRule_EMAIL
          description: description
          identificationType: identificationType
          identificationCountry: identificationCountry
          travelRule_SYGNA: travelRule_SYGNA
          lastReceivedDate: lastReceivedDate
          legalName: legalName
          number: number
          createdAt: createdAt
          legalStructure: legalStructure
          street: street
          travelRule_SHYFT: travelRule_SHYFT
          regulatoryAuthorities: regulatoryAuthorities
          addressLine1: addressLine1
          logo: logo
          addressLine2: addressLine2
          state: state
          jurisdictions: jurisdictions
          travelRule_TRLIGHT: travelRule_TRLIGHT
          updatedAt: updatedAt
          website: website
          hasAdmin: true
          updatedBy: updatedBy
          verificationStatus: verificationStatus
          emailDomains: emailDomains
          businessNumber: businessNumber
          yearFounded: yearFounded
          issuers:
            country:
              issuerDid: issuerDid
            website:
              issuerDid: issuerDid
            city:
              issuerDid: issuerDid
            isRegulated:
              issuerDid: issuerDid
            description:
              issuerDid: issuerDid
            businessNumber:
              issuerDid: issuerDid
            yearFounded:
              issuerDid: issuerDid
            legalName:
              issuerDid: issuerDid
            legalStructure:
              issuerDid: issuerDid
            regulatoryAuthorities:
              issuerDid: issuerDid
            name:
              issuerDid: issuerDid
            logo:
              issuerDid: issuerDid
            addressLine1:
              issuerDid: issuerDid
            incorporationCountry:
              issuerDid: issuerDid
          travelRule_OPENVASP: travelRule_OPENVASP
          travelRule_USTRAVELRULEWG: travelRule_USTRAVELRULEWG
          unit: unit
          otherNames: otherNames
          certificates: certificates
          lastSentDate: lastSentDate
          createdBy: createdBy
          name: name
          postCode: postCode
          did: did
          incorporationCountry: incorporationCountry
        - country: country
          travelRule_TRISA: travelRule_TRISA
          travelRule_TRP: travelRule_TRP
          isNotifiable: true
          city: city
          documents: documents
          isRegulated: isRegulated
          travelRule_EMAIL: travelRule_EMAIL
          description: description
          identificationType: identificationType
          identificationCountry: identificationCountry
          travelRule_SYGNA: travelRule_SYGNA
          lastReceivedDate: lastReceivedDate
          legalName: legalName
          number: number
          createdAt: createdAt
          legalStructure: legalStructure
          street: street
          travelRule_SHYFT: travelRule_SHYFT
          regulatoryAuthorities: regulatoryAuthorities
          addressLine1: addressLine1
          logo: logo
          addressLine2: addressLine2
          state: state
          jurisdictions: jurisdictions
          travelRule_TRLIGHT: travelRule_TRLIGHT
          updatedAt: updatedAt
          website: website
          hasAdmin: true
          updatedBy: updatedBy
          verificationStatus: verificationStatus
          emailDomains: emailDomains
          businessNumber: businessNumber
          yearFounded: yearFounded
          issuers:
            country:
              issuerDid: issuerDid
            website:
              issuerDid: issuerDid
            city:
              issuerDid: issuerDid
            isRegulated:
              issuerDid: issuerDid
            description:
              issuerDid: issuerDid
            businessNumber:
              issuerDid: issuerDid
            yearFounded:
              issuerDid: issuerDid
            legalName:
              issuerDid: issuerDid
            legalStructure:
              issuerDid: issuerDid
            regulatoryAuthorities:
              issuerDid: issuerDid
            name:
              issuerDid: issuerDid
            logo:
              issuerDid: issuerDid
            addressLine1:
              issuerDid: issuerDid
            incorporationCountry:
              issuerDid: issuerDid
          travelRule_OPENVASP: travelRule_OPENVASP
          travelRule_USTRAVELRULEWG: travelRule_USTRAVELRULEWG
          unit: unit
          otherNames: otherNames
          certificates: certificates
          lastSentDate: lastSentDate
          createdBy: createdBy
          name: name
          postCode: postCode
          did: did
          incorporationCountry: incorporationCountry
      properties:
        vasps:
          items:
            $ref: '#/components/schemas/TravelRuleVASP'
          type: array
      required:
      - vasps
      type: object
    TravelRuleUpdateVASPDetails:
      example:
        pii_didkey: did:key:z6Mks5CZRaiooKYhq5TwtXQC1gWhwiZnmiKfFrMnYY62MhYf
        did: did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2
      properties:
        did:
          description: The decentralized identifier of the VASP
          example: did:ethr:0x44957e75d6ce4a5bf37aae117da86422c848f7c2
          type: string
        pii_didkey:
          description: The PII DID key of the VASP
          example: did:key:z6Mks5CZRaiooKYhq5TwtXQC1gWhwiZnmiKfFrMnYY62MhYf
          type: string
      required:
      - did
      - pii_didkey
      type: object
    TravelRulePolicyRuleResponse:
      example:
        sourceId: sourceId
        amount: 0.8008281904610115
        amountUSD: 6.027456183070403
        baseAsset: baseAsset
        destType: destType
        destId: destId
        sourceType: sourceType
        destSubType: destSubType
        destAddress: destAddress
        action: SCREEN
        sourceSubType: sourceSubType
        asset: asset
        operation: operation
        networkProtocol: networkProtocol
      properties:
        sourceType:
          type: string
        sourceSubType:
          type: string
        destType:
          type: string
        destSubType:
          type: string
        destAddress:
          type: string
        sourceId:
          type: string
        destId:
          type: string
        asset:
          type: string
        baseAsset:
          type: string
        amount:
          type: number
        amountUSD:
          type: number
        networkProtocol:
          type: string
        operation:
          type: string
        action:
          enum:
          - SCREEN
          - PASS
          - FREEZE
          type: string
      required:
      - action
      type: object
    ScreeningPolicyResponse:
      example:
        isDefault: true
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        policyStatus: policyStatus
        policy:
          sourceId: sourceId
          amount: 0.8008281904610115
          amountUSD: 6.027456183070403
          baseAsset: baseAsset
          destType: destType
          destId: destId
          sourceType: sourceType
          destSubType: destSubType
          destAddress: destAddress
          action: SCREEN
          sourceSubType: sourceSubType
          asset: asset
          operation: operation
          networkProtocol: networkProtocol
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        policy:
          $ref: '#/components/schemas/TravelRulePolicyRuleResponse'
        policyStatus:
          type: string
        isDefault:
          type: boolean
        createDate:
          format: date-time
          type: string
        lastUpdate:
          format: date-time
          type: string
      required:
      - isDefault
      - lastUpdate
      - policy
      type: object
    ScreeningProviderRulesConfigurationResponse:
      example:
        amountUSD: 0.8008281904610115
        amount: 6.027456183070403
        action: ACCEPT
        asset: asset
        direction: INBOUND
        status: COMPLETED
      properties:
        direction:
          enum:
          - INBOUND
          - OUTBOUND
          type: string
        status:
          enum:
          - COMPLETED
          - PENDING
          - REJECTED
          - FAILED
          - CANCELED
          - BLOCKING_TIME_EXPIRED
          type: string
        amountUSD:
          type: number
        amount:
          type: number
        asset:
          type: string
        action:
          enum:
          - ACCEPT
          - REJECT
          - ALERT
          - WAIT
          - FREEZE
          - CANCEL
          type: string
      required:
      - action
      type: object
    ScreeningConfigurationsRequest:
      example:
        inboundTransactionDelay: 0.8008281904610115
        bypassScreeningDuringServiceOutages: true
        outboundTransactionDelay: 6.027456183070403
      properties:
        bypassScreeningDuringServiceOutages:
          description: Flag to enable or disable bypass screening during service outages.
          type: boolean
        inboundTransactionDelay:
          description: Inbound transaction delay in seconds.
          type: number
        outboundTransactionDelay:
          description: Outbound transaction delay in seconds.
          type: number
      type: object
    ScreeningUpdateConfigurationsRequest:
      example:
        disableUnfreeze: true
        disableBypass: true
      properties:
        disableBypass:
          description: Flag to enable or disable bypass screening on tenant configuration.
          type: boolean
        disableUnfreeze:
          description: Flag to enable or disable unfreeze of transaction frozen by
            policy rule on tenant configuration.
          type: boolean
      type: object
    GetOtaStatusResponse:
      example:
        enabled: true
      properties:
        enabled:
          description: Current OTA status
          type: boolean
      type: object
    SetOtaStatusRequest:
      example:
        enabled: true
      properties:
        enabled:
          description: Set true or false to enable or disable OTA transactions
          type: boolean
      type: object
    SetOtaStatusResponse:
      oneOf:
      - $ref: '#/components/schemas/SetOtaStatusResponse_oneOf'
      - description: Message indicating the result of the operation when config was
          successfully updated
        example: Accepted
        type: string
    GetWorkspaceStatusResponse:
      example:
        status: status
      properties:
        status:
          description: Current workspace status
          type: string
      type: object
    PolicySrcOrDestType:
      description: |
        * EXCHANGE - A third-party exchange account connected to your workspace
        * UNMANAGED - A unmanaged wallet outside of Fireblocks workspace
        * VAULT - An account in your Fireblocks Vault
        * NETWORK_CONNECTION - A connection in your Fireblocks network
        * COMPOUND - (deprecated) An asset retrieved by using the Compound DeFI protocol
        * FIAT_ACCOUNT - A third-party fiat account connected to your workspace
        * ONE_TIME_ADDRESS - A non-whitelisted asset from your Fireblocks Workspace
        * "*" - All types
      enum:
      - EXCHANGE
      - UNMANAGED
      - VAULT
      - NETWORK_CONNECTION
      - COMPOUND
      - FIAT_ACCOUNT
      - ONE_TIME_ADDRESS
      - '*'
      type: string
    PolicySrcOrDestSubType:
      description: |
        * EXTERNAL - A whitelisted wallet assigned as external is typically used for addresses managed by your clients and counterparties
        * INTERNAL - A whitelisted wallet assigned as internal, is typically used for addresses that you control outside of your Fireblocks workspace
        * CONTRACT - A whitelisted wallet assigned as contract is for identifying and managing external smart contracts
        * EXCHANGETEST - Exchanges which operate only on testnet assets
        * "*" - All subtypes
      enum:
      - EXTERNAL
      - INTERNAL
      - CONTRACT
      - EXCHANGETEST
      - '*'
      type: string
    PolicySrcOrDestId:
      description: |
        Defines the account id, options are
        * "*" - All accounts
        * Specific account id
      type: string
    SrcOrDestAttributes:
      description: |
        Defines source or destination component, options are:
        * id only
        * id and type - first item in the array MUST be id.
        * id, type and subtype - first item in the array MUST be id and second item MUST be type.
      items:
        $ref: '#/components/schemas/SrcOrDestAttributes_inner'
      maxItems: 3
      minItems: 1
      type: array
    AmountAggregationTimePeriodMethod:
      description: |
        * PER_SINGLE_MATCH - Apply the limit to each listed entity
        * ACROSS_ALL_MATCHES - Apply the limit to the sum of all listed entities
      enum:
      - PER_SINGLE_MATCH
      - ACROSS_ALL_MATCHES
      type: string
    PolicyRule:
      description: Policy rule which is enforced on transactions
      example:
        dst:
          ids:
          - null
          - null
        designatedSigner: designatedSigner
        dstAddressType: WHITELISTED
        designatedSigners:
          usersGroups:
          - usersGroups
          - usersGroups
          users:
          - users
          - users
        type: TRANSFER
        operator: operator
        applyForApprove: true
        operators:
          usersGroups:
          - usersGroups
          - usersGroups
          services:
          - services
          - services
          users:
          - users
          - users
          wildcard: '*'
        periodSec: 0.8008281904610115
        srcId: ""
        action: ALLOW
        dstSubType: ""
        authorizationGroups:
          allowOperatorAsAuthorizer: true
          groups:
          - usersGroups:
            - usersGroups
            - usersGroups
            th: 1.4658129805029452
            users:
            - users
            - users
          - usersGroups:
            - usersGroups
            - usersGroups
            th: 1.4658129805029452
            users:
            - users
            - users
          logic: AND
        amountCurrency: USD
        amount: PolicyRule_amount
        src:
          ids:
          - null
          - null
        authorizersCount: 6.027456183070403
        dstType: ""
        srcType: ""
        transactionType: TRANSFER
        externalDescriptor: externalDescriptor
        srcSubType: ""
        applyForTypedMessage: true
        dstId: ""
        authorizers:
        - authorizers
        - authorizers
        rawMessageSigning:
          derivationPath:
            path:
            - 5.962133916683182
            - 5.962133916683182
          algorithm: algorithm
        asset: asset
        amountAggregation:
          dstTransferPeers: null
          operators: null
          srcTransferPeers: null
        amountScope: SINGLE_TX
      properties:
        operator:
          deprecated: true
          description: (deprecated - replaced by "operators")  | Defines users who
            can initiate the type of transaction to which the rule applies. options
            are * "*" - All users are allowed * Specific User id
          type: string
        operators:
          $ref: '#/components/schemas/PolicyRule_operators'
        transactionType:
          description: |
            Defines the type of transaction to which the rule applies.
              * TRANSFER - Default. Transfers funds from one account to another
              * CONTRACT_CALL - Calls a smart contract, mainly for DeFi operations.
              * APPROVE - Allows a smart contract to withdraw from a designated wallet.
              * MINT - Perform a mint operation (increase supply) on a supported token
              * BURN - Perform a burn operation (reduce supply) on a supported token
              * SUPPLY - Use for DeFi to lend assets
              * REDEEM - Use for DeFi to get lending back
              * STAKE - Allows you to allocate and lock certain assets for earning staking rewards.
              * RAW - An off-chain message with no predefined format, use it to sign any message with your private key.
              * TYPED_MESSAGE - An off-chain message type that follows a predefined format, used to sign specific messages that are not actual transactions.
          enum:
          - TRANSFER
          - CONTRACT_CALL
          - APPROVE
          - MINT
          - BURN
          - SUPPLY
          - REDEEM
          - STAKE
          - RAW
          - TYPED_MESSAGE
          type: string
        designatedSigner:
          deprecated: true
          description: (deprecated - replaced by "designatedSigners") Id representing
            the user who signs transactions that match a specific rule
          type: string
        designatedSigners:
          $ref: '#/components/schemas/PolicyRule_designatedSigners'
        type:
          description: Policy rule type
          enum:
          - TRANSFER
          type: string
        action:
          description: "Defines what occurs when a transaction meets the rule's criteria\n\
            * ALLOW - The transaction goes through and can be signed without requiring\
            \ additional approvals\n* BLOCK - The transaction is automatically blocked\n\
            * 2-TIER - Only these users or user groups can approve \n           If\
            \ any of them reject the transaction before the required approval threshold\
            \ is met, the transaction doesn't go through\n           The list of entities\
            \ are set is \"authorizationGroups\" field\n"
          enum:
          - ALLOW
          - BLOCK
          - 2-TIER
          type: string
        asset:
          description: |
            Defines the type of asset being transacted, options are
            * "*" - All assets
            * Specific asset
          type: string
        srcType:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestType'
          deprecated: true
          description: (deprecated - replaced by "src") source account type
        srcSubType:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestSubType'
          deprecated: true
          description: (deprecated - replaced by "src") source sub account type
        srcId:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestId'
          deprecated: true
          description: (deprecated - replaced by "src") source account id
        src:
          $ref: '#/components/schemas/PolicyRule_src'
        dstType:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestType'
          deprecated: true
          description: (deprecated - replaced by "dst") destination account type
        dstSubType:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestSubType'
          deprecated: true
          description: (deprecated - replaced by "dst") destination sub account type
        dstId:
          allOf:
          - $ref: '#/components/schemas/PolicySrcOrDestId'
          deprecated: true
          description: (deprecated - replaced by "dst") destination account id
        dst:
          $ref: '#/components/schemas/PolicyRule_dst'
        dstAddressType:
          description: |
            Defines whether the destination to which you are sending funds must be whitelisted, to allow one-time transfers to non-whitelisted external addresses, or both.
            By default, you can only transfer to an external address after it’s whitelisted.
              * WHITELISTED - Can only be sent to whitelisted addresses.
              * ONE_TIME - Can only be sent to non-whitelisted external addresses.
              * "*" - can be sent to whitelisted addresses or non-whitelisted external
          enum:
          - WHITELISTED
          - ONE_TIME
          - '*'
          type: string
        amountCurrency:
          description: |
            * USD - Limits the amount of any asset users can transfer based on the USD equivalent of the asset.
            * EUR - Limits the amount of any asset users can transfer based on the EURO equivalent of the asset.
            * NATIVE - Limits the amount of an asset a user can transfer when using a specific asset.
          enum:
          - USD
          - EUR
          - NATIVE
          type: string
        amountScope:
          description: |
            * SINGLE_TX - limit applies to a single transaction
            * TIMEFRAME - limit applies to all transactions within the defined time period
          enum:
          - SINGLE_TX
          - TIMEFRAME
          type: string
        amount:
          $ref: '#/components/schemas/PolicyRule_amount'
        periodSec:
          description: |
            Time period in seconds applied by the amountScope field to accumulate transferred amounts in transactions that match the rule, until the total exceeds the value you specify under Minimum.
            When the specified amount is reached within that period, whether by one or many transactions, further transactions in that period either fail or require more approvals.
          type: number
        authorizers:
          deprecated: true
          description: (deprecated - replaced by "authorizationGroups") Allowed entities
            which can approves a transaction
          items:
            type: string
          type: array
        authorizersCount:
          deprecated: true
          description: (deprecated - replaced by "authorizationGroups") Min amount
            of entities which are needed to approve a transaction
          type: number
        authorizationGroups:
          $ref: '#/components/schemas/PolicyRule_authorizationGroups'
        amountAggregation:
          $ref: '#/components/schemas/PolicyRule_amountAggregation'
        rawMessageSigning:
          $ref: '#/components/schemas/PolicyRule_rawMessageSigning'
        applyForApprove:
          description: Applying this rule over APPROVE type transactions (can only
            be enabled when rule's transaction type is TRANSFER)
          type: boolean
        applyForTypedMessage:
          description: Applying this rule over TYPED_MESSAGE type transactions (can
            only be enabled when rule's transaction type is CONTRACT_CALL)
          type: boolean
        externalDescriptor:
          description: A unique id identifying the rule
          type: string
      required:
      - action
      - amount
      - amountCurrency
      - amountScope
      - asset
      - periodSec
      - type
      type: object
    PolicyMetadata:
      description: Policy related metadata
      example:
        publishedBy: publishedBy
        editedBy: editedBy
        publishedAt: publishedAt
        editedAt: editedAt
      properties:
        editedBy:
          description: The user id of the user who last edited the policy
          type: string
        editedAt:
          description: The timestamp of the last edit of the policy
          type: string
        publishedBy:
          description: The user id of the user who last published the policy
          type: string
        publishedAt:
          description: The timestamp of the last publish of the policy
          type: string
      type: object
    PolicyResponse:
      description: Response object for policy operations
      example:
        metadata:
          publishedBy: publishedBy
          editedBy: editedBy
          publishedAt: publishedAt
          editedAt: editedAt
        rules:
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
      properties:
        rules:
          description: A set of policy rules
          items:
            $ref: '#/components/schemas/PolicyRule'
          type: array
        metadata:
          $ref: '#/components/schemas/PolicyMetadata'
      required:
      - metadata
      - rules
      type: object
    PolicyRuleError:
      description: Rule validation result error
      example:
        errorCodeName: errorCodeName
        errorField: operator
        errorMessage: errorMessage
        errorCode: 7.061401241503109
      properties:
        errorMessage:
          description: Error message
          type: string
        errorCode:
          description: error code
          type: number
        errorCodeName:
          description: error code name
          type: string
        errorField:
          description: |
            The field which the error relates to
            * operator - transaction initiator
            * operators - transaction initiators
            * authorizationGroups - transaction authorizer groups
            * designatedSigner - transaction signer
            * designatedSigners - transaction signers
            * contractMethods - contract methods
            * amountAggregation - transaction amount aggregation configuration
            * src - transaction source asset configuration
            * dst - transaction destination asset configuration
          enum:
          - operator
          - operators
          - authorizationGroups
          - designatedSigner
          - designatedSigners
          - contractMethods
          - amountAggregation
          - src
          - dst
          type: string
      required:
      - errorCode
      - errorCodeName
      - errorField
      - errorMessage
      type: object
    PolicyRuleCheckResult:
      description: The rule validation result
      example:
        index: 2.3021358869347655
        errors:
        - errorCodeName: errorCodeName
          errorField: operator
          errorMessage: errorMessage
          errorCode: 7.061401241503109
        - errorCodeName: errorCodeName
          errorField: operator
          errorMessage: errorMessage
          errorCode: 7.061401241503109
        status: ok
      properties:
        index:
          description: Rule index number in the policy
          type: number
        status:
          description: Validation status
          enum:
          - ok
          - failure
          type: string
        errors:
          description: A set of rule validation error objects
          items:
            $ref: '#/components/schemas/PolicyRuleError'
          type: array
      required:
      - errors
      - index
      - status
      type: object
    PolicyCheckResult:
      description: Policy rules validation result
      example:
        results:
        - index: 2.3021358869347655
          errors:
          - errorCodeName: errorCodeName
            errorField: operator
            errorMessage: errorMessage
            errorCode: 7.061401241503109
          - errorCodeName: errorCodeName
            errorField: operator
            errorMessage: errorMessage
            errorCode: 7.061401241503109
          status: ok
        - index: 2.3021358869347655
          errors:
          - errorCodeName: errorCodeName
            errorField: operator
            errorMessage: errorMessage
            errorCode: 7.061401241503109
          - errorCodeName: errorCodeName
            errorField: operator
            errorMessage: errorMessage
            errorCode: 7.061401241503109
          status: ok
        errors: 5.637376656633329
      properties:
        errors:
          description: Number of errors
          type: number
        results:
          description: A set of validation results
          items:
            $ref: '#/components/schemas/PolicyRuleCheckResult'
          type: array
      required:
      - errors
      - results
      type: object
    PolicyValidation:
      description: Policy validation object
      example:
        checkResult:
          results:
          - index: 2.3021358869347655
            errors:
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            status: ok
          - index: 2.3021358869347655
            errors:
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            status: ok
          errors: 5.637376656633329
        status: status
      properties:
        status:
          description: Validation status
          type: string
        checkResult:
          $ref: '#/components/schemas/PolicyCheckResult'
      required:
      - checkResult
      - status
      type: object
    PolicyAndValidationResponse:
      description: Policy validation
      example:
        validation:
          checkResult:
            results:
            - index: 2.3021358869347655
              errors:
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              status: ok
            - index: 2.3021358869347655
              errors:
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              status: ok
            errors: 5.637376656633329
          status: status
        policy:
          metadata:
            publishedBy: publishedBy
            editedBy: editedBy
            publishedAt: publishedAt
            editedAt: editedAt
          rules:
          - dst:
              ids:
              - null
              - null
            designatedSigner: designatedSigner
            dstAddressType: WHITELISTED
            designatedSigners:
              usersGroups:
              - usersGroups
              - usersGroups
              users:
              - users
              - users
            type: TRANSFER
            operator: operator
            applyForApprove: true
            operators:
              usersGroups:
              - usersGroups
              - usersGroups
              services:
              - services
              - services
              users:
              - users
              - users
              wildcard: '*'
            periodSec: 0.8008281904610115
            srcId: ""
            action: ALLOW
            dstSubType: ""
            authorizationGroups:
              allowOperatorAsAuthorizer: true
              groups:
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              logic: AND
            amountCurrency: USD
            amount: PolicyRule_amount
            src:
              ids:
              - null
              - null
            authorizersCount: 6.027456183070403
            dstType: ""
            srcType: ""
            transactionType: TRANSFER
            externalDescriptor: externalDescriptor
            srcSubType: ""
            applyForTypedMessage: true
            dstId: ""
            authorizers:
            - authorizers
            - authorizers
            rawMessageSigning:
              derivationPath:
                path:
                - 5.962133916683182
                - 5.962133916683182
              algorithm: algorithm
            asset: asset
            amountAggregation:
              dstTransferPeers: null
              operators: null
              srcTransferPeers: null
            amountScope: SINGLE_TX
          - dst:
              ids:
              - null
              - null
            designatedSigner: designatedSigner
            dstAddressType: WHITELISTED
            designatedSigners:
              usersGroups:
              - usersGroups
              - usersGroups
              users:
              - users
              - users
            type: TRANSFER
            operator: operator
            applyForApprove: true
            operators:
              usersGroups:
              - usersGroups
              - usersGroups
              services:
              - services
              - services
              users:
              - users
              - users
              wildcard: '*'
            periodSec: 0.8008281904610115
            srcId: ""
            action: ALLOW
            dstSubType: ""
            authorizationGroups:
              allowOperatorAsAuthorizer: true
              groups:
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              logic: AND
            amountCurrency: USD
            amount: PolicyRule_amount
            src:
              ids:
              - null
              - null
            authorizersCount: 6.027456183070403
            dstType: ""
            srcType: ""
            transactionType: TRANSFER
            externalDescriptor: externalDescriptor
            srcSubType: ""
            applyForTypedMessage: true
            dstId: ""
            authorizers:
            - authorizers
            - authorizers
            rawMessageSigning:
              derivationPath:
                path:
                - 5.962133916683182
                - 5.962133916683182
              algorithm: algorithm
            asset: asset
            amountAggregation:
              dstTransferPeers: null
              operators: null
              srcTransferPeers: null
            amountScope: SINGLE_TX
      properties:
        policy:
          $ref: '#/components/schemas/PolicyResponse'
        validation:
          $ref: '#/components/schemas/PolicyValidation'
      required:
      - policy
      - validation
      type: object
    DraftResponse:
      description: Response object for draft operations
      example:
        draftId: draftId
        metadata:
          publishedBy: publishedBy
          editedBy: editedBy
          publishedAt: publishedAt
          editedAt: editedAt
        rules:
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        status: status
      properties:
        status:
          description: Operation status
          type: string
        rules:
          description: Draft rules
          items:
            $ref: '#/components/schemas/PolicyRule'
          type: array
        draftId:
          description: Draft unique id
          type: string
        metadata:
          $ref: '#/components/schemas/PolicyMetadata'
      required:
      - draftId
      - metadata
      - rules
      - status
      type: object
    DraftReviewAndValidationResponse:
      description: Draft validation
      example:
        draftResponse:
          draftId: draftId
          metadata:
            publishedBy: publishedBy
            editedBy: editedBy
            publishedAt: publishedAt
            editedAt: editedAt
          rules:
          - dst:
              ids:
              - null
              - null
            designatedSigner: designatedSigner
            dstAddressType: WHITELISTED
            designatedSigners:
              usersGroups:
              - usersGroups
              - usersGroups
              users:
              - users
              - users
            type: TRANSFER
            operator: operator
            applyForApprove: true
            operators:
              usersGroups:
              - usersGroups
              - usersGroups
              services:
              - services
              - services
              users:
              - users
              - users
              wildcard: '*'
            periodSec: 0.8008281904610115
            srcId: ""
            action: ALLOW
            dstSubType: ""
            authorizationGroups:
              allowOperatorAsAuthorizer: true
              groups:
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              logic: AND
            amountCurrency: USD
            amount: PolicyRule_amount
            src:
              ids:
              - null
              - null
            authorizersCount: 6.027456183070403
            dstType: ""
            srcType: ""
            transactionType: TRANSFER
            externalDescriptor: externalDescriptor
            srcSubType: ""
            applyForTypedMessage: true
            dstId: ""
            authorizers:
            - authorizers
            - authorizers
            rawMessageSigning:
              derivationPath:
                path:
                - 5.962133916683182
                - 5.962133916683182
              algorithm: algorithm
            asset: asset
            amountAggregation:
              dstTransferPeers: null
              operators: null
              srcTransferPeers: null
            amountScope: SINGLE_TX
          - dst:
              ids:
              - null
              - null
            designatedSigner: designatedSigner
            dstAddressType: WHITELISTED
            designatedSigners:
              usersGroups:
              - usersGroups
              - usersGroups
              users:
              - users
              - users
            type: TRANSFER
            operator: operator
            applyForApprove: true
            operators:
              usersGroups:
              - usersGroups
              - usersGroups
              services:
              - services
              - services
              users:
              - users
              - users
              wildcard: '*'
            periodSec: 0.8008281904610115
            srcId: ""
            action: ALLOW
            dstSubType: ""
            authorizationGroups:
              allowOperatorAsAuthorizer: true
              groups:
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              - usersGroups:
                - usersGroups
                - usersGroups
                th: 1.4658129805029452
                users:
                - users
                - users
              logic: AND
            amountCurrency: USD
            amount: PolicyRule_amount
            src:
              ids:
              - null
              - null
            authorizersCount: 6.027456183070403
            dstType: ""
            srcType: ""
            transactionType: TRANSFER
            externalDescriptor: externalDescriptor
            srcSubType: ""
            applyForTypedMessage: true
            dstId: ""
            authorizers:
            - authorizers
            - authorizers
            rawMessageSigning:
              derivationPath:
                path:
                - 5.962133916683182
                - 5.962133916683182
              algorithm: algorithm
            asset: asset
            amountAggregation:
              dstTransferPeers: null
              operators: null
              srcTransferPeers: null
            amountScope: SINGLE_TX
          status: status
        validation:
          checkResult:
            results:
            - index: 2.3021358869347655
              errors:
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              status: ok
            - index: 2.3021358869347655
              errors:
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              - errorCodeName: errorCodeName
                errorField: operator
                errorMessage: errorMessage
                errorCode: 7.061401241503109
              status: ok
            errors: 5.637376656633329
          status: status
      properties:
        draftResponse:
          $ref: '#/components/schemas/DraftResponse'
        validation:
          $ref: '#/components/schemas/PolicyValidation'
      required:
      - draftResponse
      - validation
      type: object
    PolicyRules:
      example:
        rules:
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
      properties:
        rules:
          description: Policy rules
          items:
            $ref: '#/components/schemas/PolicyRule'
          type: array
      type: object
    PublishDraftRequest:
      example:
        draftId: draftId
      properties:
        draftId:
          description: draft unique identifier
          type: string
      type: object
    PolicyStatus:
      description: |
        * SUCCESS - success
        * UNVALIDATED - not validated yet
        * INVALID_CONFIGURATION - at least one rule is invalid
        * PENDING - pending approval
        * PENDING_CONSOLE_APPROVAL - pending approval from the console app
        * AWAITING_QUORUM - pending quorum approval
        * UNHANDLED_ERROR - unhandled error
      enum:
      - SUCCESS
      - UNVALIDATED
      - INVALID_CONFIGURATION
      - PENDING
      - PENDING_CONSOLE_APPROVAL
      - AWAITING_QUORUM
      - UNHANDLED_ERROR
      type: string
    PublishResult:
      description: Response object of the publish policy operation
      example:
        metadata:
          publishedBy: publishedBy
          editedBy: editedBy
          publishedAt: publishedAt
          editedAt: editedAt
        rules:
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        - dst:
            ids:
            - null
            - null
          designatedSigner: designatedSigner
          dstAddressType: WHITELISTED
          designatedSigners:
            usersGroups:
            - usersGroups
            - usersGroups
            users:
            - users
            - users
          type: TRANSFER
          operator: operator
          applyForApprove: true
          operators:
            usersGroups:
            - usersGroups
            - usersGroups
            services:
            - services
            - services
            users:
            - users
            - users
            wildcard: '*'
          periodSec: 0.8008281904610115
          srcId: ""
          action: ALLOW
          dstSubType: ""
          authorizationGroups:
            allowOperatorAsAuthorizer: true
            groups:
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            - usersGroups:
              - usersGroups
              - usersGroups
              th: 1.4658129805029452
              users:
              - users
              - users
            logic: AND
          amountCurrency: USD
          amount: PolicyRule_amount
          src:
            ids:
            - null
            - null
          authorizersCount: 6.027456183070403
          dstType: ""
          srcType: ""
          transactionType: TRANSFER
          externalDescriptor: externalDescriptor
          srcSubType: ""
          applyForTypedMessage: true
          dstId: ""
          authorizers:
          - authorizers
          - authorizers
          rawMessageSigning:
            derivationPath:
              path:
              - 5.962133916683182
              - 5.962133916683182
            algorithm: algorithm
          asset: asset
          amountAggregation:
            dstTransferPeers: null
            operators: null
            srcTransferPeers: null
          amountScope: SINGLE_TX
        checkResult:
          results:
          - index: 2.3021358869347655
            errors:
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            status: ok
          - index: 2.3021358869347655
            errors:
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            - errorCodeName: errorCodeName
              errorField: operator
              errorMessage: errorMessage
              errorCode: 7.061401241503109
            status: ok
          errors: 5.637376656633329
        status: null
      properties:
        status:
          $ref: '#/components/schemas/PolicyStatus'
        rules:
          items:
            $ref: '#/components/schemas/PolicyRule'
          type: array
        checkResult:
          $ref: '#/components/schemas/PolicyCheckResult'
        metadata:
          $ref: '#/components/schemas/PolicyMetadata'
      required:
      - checkResult
      - metadata
      - rules
      - status
      type: object
    UserId:
      description: The unique identifier of the user
      type: string
    UserRole:
      description: The role of the user
      enum:
      - OWNER
      - ADMIN
      - SIGNER
      - COLLATERALS_SIGNER
      - EDITOR
      - APPROVER
      - VIEWER
      - NON_SIGNING_ADMIN
      - AUDITOR
      - NCW_ADMIN
      - NCW_SIGNER
      type: string
    UserEnabled:
      description: Whether the user is enabled
      type: boolean
    UserStatus:
      description: The status of the user
      enum:
      - PENDING_ACTIVATION
      - PENDING_DEVICE_PAIRING
      - PENDING_DEVICE_SETUP
      - READY
      type: string
    UserType:
      description: The type of the user
      enum:
      - API
      - CONSOLE
      type: string
    ConsoleUser:
      example:
        firstName: firstName
        lastName: lastName
        role: null
        id: id
        userType: null
        email: email
        enabled: true
        status: null
      properties:
        id:
          description: The unique identifier of the user
          type: string
        firstName:
          description: The first name of the user
          type: string
        lastName:
          description: The last name of the user
          type: string
        email:
          description: The email address of the user
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        enabled:
          description: Whether the user is enabled
          type: boolean
        status:
          $ref: '#/components/schemas/UserStatus'
        userType:
          $ref: '#/components/schemas/UserType'
      type: object
    ConsoleUsers:
      items:
        $ref: '#/components/schemas/ConsoleUser'
      type: array
    GetConsoleUsersResponse:
      example:
        users:
        - firstName: firstName
          lastName: lastName
          role: null
          id: id
          userType: null
          email: email
          enabled: true
          status: null
        - firstName: firstName
          lastName: lastName
          role: null
          id: id
          userType: null
          email: email
          enabled: true
          status: null
      properties:
        users:
          items:
            $ref: '#/components/schemas/ConsoleUser'
          type: array
      required:
      - users
      type: object
    CreateConsoleUser:
      example:
        firstName: firstName
        lastName: lastName
        role: role
        email: email
      properties:
        firstName:
          description: users firstName
          type: string
        lastName:
          description: users lastName
          type: string
        role:
          description: users role
          type: string
        email:
          description: valid email address
          type: string
      required:
      - email
      - firstName
      - lastName
      - role
      type: object
    APIUser:
      example:
        role: null
        name: name
        id: id
        userType: null
        enabled: true
        status: null
      properties:
        id:
          description: The unique identifier of the user
          type: string
        name:
          description: The name of the user
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        enabled:
          description: Whether the user is enabled
          type: boolean
        status:
          $ref: '#/components/schemas/UserStatus'
        userType:
          $ref: '#/components/schemas/UserType'
      type: object
    APIUsers:
      items:
        $ref: '#/components/schemas/APIUser'
      type: array
    GetAPIUsersResponse:
      example:
        users:
        - role: null
          name: name
          id: id
          userType: null
          enabled: true
          status: null
        - role: null
          name: name
          id: id
          userType: null
          enabled: true
          status: null
      properties:
        users:
          items:
            $ref: '#/components/schemas/APIUser'
          type: array
      required:
      - users
      type: object
    CreateAPIUser:
      example:
        role: role
        name: name
        coSignerSetupType: SGX_MACHINE
        csrPem: '-----BEGIN CERTIFICATE REQUEST-----aaa-----END CERTIFICATE REQUEST-----'
        coSignerSetupIsFirstUser: true
      properties:
        role:
          description: Users role
          type: string
        name:
          description: Users name
          type: string
        csrPem:
          description: CSR file that is used to verify API requests. read more https://developers.fireblocks.com/docs/quickstart
          example: '-----BEGIN CERTIFICATE REQUEST-----aaa-----END CERTIFICATE REQUEST-----'
          type: string
        coSignerSetupType:
          description: "Different environments allow for different setup options,\
            \ field is required for management/signer role"
          example: SGX_MACHINE
          type: string
        coSignerSetupIsFirstUser:
          description: pass as true if this is the first user on the coSigner machine
          type: boolean
      required:
      - csrPem
      - name
      - role
      type: object
    GetWhitelistIpAddressesResponse:
      example:
        whitelistedIps:
        - whitelistedIps
        - whitelistedIps
        userId: userId
      properties:
        userId:
          description: The ID of the user
          type: string
        whitelistedIps:
          description: List of whitelisted ip addresses
          items:
            type: string
          nullable: true
          type: array
      type: object
    SmartTransferTicketTerm:
      description: Data object with result data
      example:
        fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
        amount: "133.789161216184"
        amountUsd: "1333.789161216184"
        fromNetworkIdName: Source network profile name
        toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
        txStatus: COMPLETED
        createdAt: 2023-03-01T11:23:00Z
        id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
        fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
        toNetworkIdName: Destination network profile name
        asset: BTC
        txHash: 0x2446f1fd773fbb9f080e674b60c6a033c7ed7427b8b9413cf28a2a4a6da9b56c
        ticketId: 900f04c3-83bc-428d-b681-aef682059637
        status: CREATED
        updatedAt: 2023-03-01T11:23:00Z
      nullable: true
      properties:
        id:
          description: Unique id of Smart Transfer ticket term
          example: 84601ee2-b10f-4aa8-be9c-dba259a3533a
          type: string
        ticketId:
          description: Unique id of Smart Transfer ticket
          example: 900f04c3-83bc-428d-b681-aef682059637
          type: string
        asset:
          description: Asset name
          example: BTC
          type: string
          x-fb-entity: asset
        amount:
          description: Amount
          example: "133.789161216184"
          type: string
        amountUsd:
          description: Amount USD
          example: "1333.789161216184"
          type: string
        fromNetworkId:
          description: Identifier of the origination Network Profile
          example: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          type: string
        fromNetworkIdName:
          description: Source network name
          example: Source network profile name
          type: string
        toNetworkId:
          description: Identifier of the destination Network Profile
          example: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          type: string
        toNetworkIdName:
          description: Destination network name
          example: Destination network profile name
          type: string
        txHash:
          description: Blockchain TX hash
          example: 0x2446f1fd773fbb9f080e674b60c6a033c7ed7427b8b9413cf28a2a4a6da9b56c
          nullable: true
          type: string
        fbTxId:
          description: Fireblocks transaction ID. It is set when the funding transaction
            is created.
          example: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
          nullable: true
          type: string
        txStatus:
          description: Ticket term transaction status
          enum:
          - queued
          - submitted
          - pendingSignature
          - pendingAuthorization
          - broadcasting
          - confirming
          - pendingAmlScreening
          - completed
          - cancelled
          - failed
          - rejected
          - blocked
          - thirdPartyPendingManualApproval
          - thirdPartyPending
          - partiallyCompleted
          - cancelling
          example: COMPLETED
          nullable: true
          type: string
        status:
          description: Ticket term status
          enum:
          - CREATED
          - FUNDING
          - FUNDING_FAILED
          - FUNDED
          - REJECTED
          example: CREATED
          nullable: false
          type: string
        createdAt:
          description: Date and time when the term is created.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        updatedAt:
          description: Date and time of last term update.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
      required:
      - amount
      - asset
      - createdAt
      - fbTxId
      - fromNetworkId
      - fromNetworkIdName
      - id
      - status
      - ticketId
      - toNetworkId
      - toNetworkIdName
      - txHash
      - txStatus
      - updatedAt
      type: object
    SmartTransferTicket:
      description: Data object with result data
      example:
        note: Random note
        externalRefId: 2631ffb9d8fe47c6b0825b5be28297da
        type: ASYNC
        createdByNetworkId: 3eaa94c5-128b-4835-bb08-3111bb6564c7
        expiresAt: 2023-03-01T11:23:00Z
        expiresIn: 13
        expiredAt: 2023-03-01T11:23:00Z
        createdAt: 2023-03-01T11:23:00Z
        fulfilledAt: 2023-03-01T11:23:00Z
        createdByMe: true
        terms:
        - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
          ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
          amount: "10.00"
          asset: ETH
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          status: CREATED
        - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
          ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
          amount: "10.00"
          asset: ETH
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          fromNetworkIdName: Source network profile 1
          toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          toNetworkIdName: Destination network profile 1
          status: FUNDING
          connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
          fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
          createdAt: 2023-03-01T11:23:00.000Z
          updatedAt: 2023-03-01T11:23:00.000Z
        - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
          ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
          amount: "10.00"
          asset: ETH
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          fromNetworkIdName: Source network profile 2
          toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          toNetworkIdName: Destination network profile 2
          status: FUNDED
          connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
          fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
          txHash: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838
          createdAt: 2023-03-01T11:23:00.000Z
          updatedAt: 2023-03-01T11:23:00.000Z
        canceledAt: 2023-03-01T11:23:00Z
        canceledByNetworkIdName: Network id name
        canceledByMe: true
        id: 118320d2-761f-46c7-96cf-65e71a370b36
        submittedAt: 2023-03-01T11:23:00Z
        createdByNetworkIdName: Network id name
        direction: EXCHANGE
        status: DRAFT
        updatedAt: 2023-03-01T11:23:00Z
      nullable: true
      properties:
        id:
          description: Unique id of Smart Transfer ticket
          example: 118320d2-761f-46c7-96cf-65e71a370b36
          type: string
        type:
          description: Kind of Smart Transfer. Can be either `ASYNC` or `ATOMIC`
          enum:
          - ASYNC
          example: ASYNC
          type: string
        direction:
          description: Direction of Smart Transfer.
          enum:
          - EXCHANGE
          - SEND
          - RECEIVE
          - INTERMEDIATE
          example: EXCHANGE
          type: string
        status:
          description: Current status of Smart Transfer ticket
          enum:
          - DRAFT
          - PENDING_APPROVAL
          - OPEN
          - IN_SETTLEMENT
          - FULFILLED
          - EXPIRED
          - CANCELED
          example: DRAFT
          type: string
        terms:
          description: Ticket terms (legs)
          example:
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            status: CREATED
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 1
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 1
            status: FUNDING
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 2
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 2
            status: FUNDED
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            txHash: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          items:
            $ref: '#/components/schemas/SmartTransferTicketTerm'
          type: array
        expiresIn:
          description: Number of hours for expiration.This data is valid only it ticket
            not in DRAFT state and it will be used to calculate expiresAt value
          example: 13
          type: number
        expiresAt:
          description: Date and time at which the ticket will expire if no funding
            is performed.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        submittedAt:
          description: Date and time when ticket is submitted.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        expiredAt:
          description: Date and time when ticket is expired.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        canceledAt:
          description: Date and time when ticket is canceled.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        fulfilledAt:
          description: Date and time when ticket is fulfilled.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        externalRefId:
          description: External Ref ID for Smart Transfer ticket.
          example: 2631ffb9d8fe47c6b0825b5be28297da
          type: string
        note:
          description: Note
          example: Random note
          type: string
        createdByNetworkId:
          description: ID of network profile that created ticket
          example: 3eaa94c5-128b-4835-bb08-3111bb6564c7
          type: string
        createdByNetworkIdName:
          description: Name of network profile that created ticket
          example: Network id name
          type: string
        canceledByNetworkIdName:
          description: Name of network profile that canceled ticket
          example: Network id name
          type: string
        createdAt:
          description: Date and time at which the ticket is created.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        updatedAt:
          description: Date and time of last ticket update.
          example: 2023-03-01T11:23:00Z
          format: date-time
          type: string
        canceledByMe:
          type: boolean
        createdByMe:
          type: boolean
      required:
      - createdAt
      - createdByNetworkId
      - createdByNetworkIdName
      - id
      - status
      - type
      - updatedAt
      type: object
    SmartTransferTicketFilteredResponse:
      example:
        data:
        - note: Random note
          externalRefId: 2631ffb9d8fe47c6b0825b5be28297da
          type: ASYNC
          createdByNetworkId: 3eaa94c5-128b-4835-bb08-3111bb6564c7
          expiresAt: 2023-03-01T11:23:00Z
          expiresIn: 13
          expiredAt: 2023-03-01T11:23:00Z
          createdAt: 2023-03-01T11:23:00Z
          fulfilledAt: 2023-03-01T11:23:00Z
          createdByMe: true
          terms:
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            status: CREATED
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 1
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 1
            status: FUNDING
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 2
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 2
            status: FUNDED
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            txHash: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          canceledAt: 2023-03-01T11:23:00Z
          canceledByNetworkIdName: Network id name
          canceledByMe: true
          id: 118320d2-761f-46c7-96cf-65e71a370b36
          submittedAt: 2023-03-01T11:23:00Z
          createdByNetworkIdName: Network id name
          direction: EXCHANGE
          status: DRAFT
          updatedAt: 2023-03-01T11:23:00Z
        - note: Random note
          externalRefId: 2631ffb9d8fe47c6b0825b5be28297da
          type: ASYNC
          createdByNetworkId: 3eaa94c5-128b-4835-bb08-3111bb6564c7
          expiresAt: 2023-03-01T11:23:00Z
          expiresIn: 13
          expiredAt: 2023-03-01T11:23:00Z
          createdAt: 2023-03-01T11:23:00Z
          fulfilledAt: 2023-03-01T11:23:00Z
          createdByMe: true
          terms:
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            status: CREATED
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 1
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 1
            status: FUNDING
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 2
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 2
            status: FUNDED
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            txHash: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          canceledAt: 2023-03-01T11:23:00Z
          canceledByNetworkIdName: Network id name
          canceledByMe: true
          id: 118320d2-761f-46c7-96cf-65e71a370b36
          submittedAt: 2023-03-01T11:23:00Z
          createdByNetworkIdName: Network id name
          direction: EXCHANGE
          status: DRAFT
          updatedAt: 2023-03-01T11:23:00Z
        after: 118320d2-761f-46c7-96cf-65e71a370b36
        message: Success
      properties:
        message:
          description: Result message
          example: Success
          nullable: true
          type: string
        after:
          description: Unique id of next filtered result
          example: 118320d2-761f-46c7-96cf-65e71a370b36
          type: string
        data:
          description: Result that match given query criteria
          items:
            $ref: '#/components/schemas/SmartTransferTicket'
          type: array
      required:
      - after
      - data
      - message
      type: object
    SmartTransferForbiddenResponse:
      example:
        code: "3002"
        message: You do not have permission to execute this action
      properties:
        message:
          description: Forbidden error code
          example: You do not have permission to execute this action
          type: string
        code:
          description: Error code
          example: "3002"
          type: string
      required:
      - code
      - message
      type: object
    SmartTransferCreateTicketTerm:
      example:
        toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
        amount: "133.789161216184"
        fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
        asset: BTC
      properties:
        asset:
          description: Asset name
          example: BTC
          type: string
          x-fb-entity: asset
        amount:
          description: Amount
          example: "133.789161216184"
          type: string
        fromNetworkId:
          description: Identifier of the origination Network Profile
          example: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          type: string
        toNetworkId:
          description: Identifier of the destination Network Profile
          example: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          type: string
      required:
      - amount
      - asset
      - fromNetworkId
      - toNetworkId
      type: object
    SmartTransferCreateTicket:
      example:
        expiresIn: 4.763892495166754
        note: note
        externalRefId: externalRefId
        submit: true
        terms:
        - toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          amount: "133.789161216184"
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          asset: BTC
        - toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          amount: "133.789161216184"
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          asset: BTC
        createdByNetworkId: createdByNetworkId
        type: ASYNC
      properties:
        createdByNetworkId:
          type: string
        type:
          enum:
          - ASYNC
          type: string
        expiresIn:
          description: Number of hours after which an OPEN ticket will expire if no
            term is funded.
          maximum: 48
          minimum: 1
          type: number
        terms:
          items:
            $ref: '#/components/schemas/SmartTransferCreateTicketTerm'
          type: array
        externalRefId:
          maxLength: 64
          type: string
        note:
          maxLength: 1024
          type: string
        submit:
          type: boolean
      required:
      - createdByNetworkId
      - type
      type: object
    SmartTransferTicketResponse:
      example:
        data:
          note: Random note
          externalRefId: 2631ffb9d8fe47c6b0825b5be28297da
          type: ASYNC
          createdByNetworkId: 3eaa94c5-128b-4835-bb08-3111bb6564c7
          expiresAt: 2023-03-01T11:23:00Z
          expiresIn: 13
          expiredAt: 2023-03-01T11:23:00Z
          createdAt: 2023-03-01T11:23:00Z
          fulfilledAt: 2023-03-01T11:23:00Z
          createdByMe: true
          terms:
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            status: CREATED
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 1
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 1
            status: FUNDING
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          - id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
            ticketId: 118320d2-761f-46c7-96cf-65e71a370b36
            amount: "10.00"
            asset: ETH
            fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
            fromNetworkIdName: Source network profile 2
            toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
            toNetworkIdName: Destination network profile 2
            status: FUNDED
            connectionId: 14817440-d5c8-4dbd-a754-ad415683610c
            fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
            txHash: 0xb5c8bd9430b6cc87a0e2fe110ece6bf527fa4f170a4bc8cd032f768fc5219838
            createdAt: 2023-03-01T11:23:00.000Z
            updatedAt: 2023-03-01T11:23:00.000Z
          canceledAt: 2023-03-01T11:23:00Z
          canceledByNetworkIdName: Network id name
          canceledByMe: true
          id: 118320d2-761f-46c7-96cf-65e71a370b36
          submittedAt: 2023-03-01T11:23:00Z
          createdByNetworkIdName: Network id name
          direction: EXCHANGE
          status: DRAFT
          updatedAt: 2023-03-01T11:23:00Z
        message: Success
      properties:
        message:
          description: Result message
          example: Success
          nullable: true
          type: string
        data:
          $ref: '#/components/schemas/SmartTransferTicket'
      required:
      - message
      type: object
    SmartTransferBadRequestResponse:
      example:
        code: 2e7a7a5d-c85c-4ea5-9adf-668cba8b4eb4
        message: Your request contains invalid data
      properties:
        message:
          description: Bad request error message
          example: Your request contains invalid data
          type: string
        code:
          description: Bad request error code
          example: 2e7a7a5d-c85c-4ea5-9adf-668cba8b4eb4
          type: string
      required:
      - code
      - message
      type: object
    SmartTransferNotFoundResponse:
      example:
        code: c943bdb8-ada0-4ba6-8645-74fcf188a10f
        message: Requested entity not found
      properties:
        message:
          description: Not found error message
          example: Requested entity not found
          type: string
        code:
          description: Error code
          example: c943bdb8-ada0-4ba6-8645-74fcf188a10f
          type: string
      required:
      - code
      - message
      type: object
    SmartTransferSetTicketExpiration:
      example:
        expiresIn: 4.763892495166754
      properties:
        expiresIn:
          description: "Sets ticket expiration time (in hours) after a ticket is submitted.\
            \ If no funding source is set to any term, the ticket will automatically\
            \ expire after given time."
          maximum: 48
          minimum: 1
          type: number
      required:
      - expiresIn
      type: object
    SmartTransferSetTicketExternalId:
      example:
        externalRefId: externalRefId
      properties:
        externalRefId:
          description: Each workspace can set their own external id they want to refer
            to this Ticket
          maxLength: 64
          minLength: 5
          type: string
      required:
      - externalRefId
      type: object
    SmartTransferSubmitTicket:
      example:
        expiresIn: 4.763892495166754
      properties:
        expiresIn:
          description: "Sets the ticket expiration time (in hours) after the ticket\
            \ is submitted. If no funding source is set for any term, the ticket will\
            \ automatically expire after given time. If expiresIn is not sent ticket\
            \ will not expire."
          maximum: 48
          minimum: 1
          type: number
      type: object
    SmartTransferTicketTermResponse:
      example:
        data:
          fbTxId: 79075e8c-1fd9-4c97-9575-3bd9229e5c0d
          amount: "133.789161216184"
          amountUsd: "1333.789161216184"
          fromNetworkIdName: Source network profile name
          toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          txStatus: COMPLETED
          createdAt: 2023-03-01T11:23:00Z
          id: 84601ee2-b10f-4aa8-be9c-dba259a3533a
          fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          toNetworkIdName: Destination network profile name
          asset: BTC
          txHash: 0x2446f1fd773fbb9f080e674b60c6a033c7ed7427b8b9413cf28a2a4a6da9b56c
          ticketId: 900f04c3-83bc-428d-b681-aef682059637
          status: CREATED
          updatedAt: 2023-03-01T11:23:00Z
        message: Success
      properties:
        message:
          description: Result message
          example: Success
          nullable: true
          type: string
        data:
          $ref: '#/components/schemas/SmartTransferTicketTerm'
      required:
      - message
      type: object
    SmartTransferUpdateTicketTerm:
      example:
        toNetworkId: 5d009697-c29b-48e0-aff8-1f4305d19dc2
        amount: "133.789161216184"
        fromNetworkId: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
        asset: BTC
      properties:
        asset:
          description: Asset name
          example: BTC
          type: string
          x-fb-entity: asset
        amount:
          description: Amount
          example: "133.789161216184"
          type: string
        fromNetworkId:
          description: Identifier of the origination Network Profile
          example: 947c6115-1f5f-4fb4-9fd6-a1f9dee14670
          type: string
        toNetworkId:
          description: Identifier of the destination Network Profile
          example: 5d009697-c29b-48e0-aff8-1f4305d19dc2
          type: string
      required:
      - amount
      - asset
      - fromNetworkId
      - toNetworkId
      type: object
    SmartTransferFundTerm:
      example:
        note: Transaction note
        amount: "133.789161216184"
        networkConnectionId: 0805153d-e77d-4f9b-8818-e507eeb2d122
        srcId: "2"
        fee: "0.001"
        feeLevel: MEDIUM
        asset: BTC
        srcType: VAULT_ACCOUNT
      properties:
        asset:
          description: Asset name
          example: BTC
          type: string
          x-fb-entity: asset
        amount:
          description: Amount
          example: "133.789161216184"
          type: string
        networkConnectionId:
          description: Id of the network connection used.
          example: 0805153d-e77d-4f9b-8818-e507eeb2d122
          type: string
        srcId:
          description: Id of the vault that is used as the source of the asset.
          example: "2"
          type: string
        srcType:
          description: Source of the asset.
          example: VAULT_ACCOUNT
          type: string
        fee:
          description: Transaction fee
          example: "0.001"
          type: string
        feeLevel:
          description: Transaction fee level.
          example: MEDIUM
          type: string
        note:
          description: Transaction note
          example: Transaction note
          type: string
      required:
      - amount
      - asset
      - networkConnectionId
      - srcId
      - srcType
      type: object
    SmartTransferManuallyFundTerm:
      example:
        txHash: txHash
      properties:
        txHash:
          maxLength: 64
          type: string
      required:
      - txHash
      type: object
    SmartTransferUserGroups:
      description: Data object with result data
      example:
        userGroupIds:
        - userGroupIds
        - userGroupIds
      nullable: true
      properties:
        userGroupIds:
          description: Data object with result data
          items:
            type: string
          nullable: true
          type: array
      required:
      - userGroupIds
      type: object
    SmartTransferUserGroupsResponse:
      example:
        data:
          userGroupIds:
          - userGroupIds
          - userGroupIds
        message: Success
      properties:
        message:
          description: Result message
          example: Success
          nullable: true
          type: string
        data:
          $ref: '#/components/schemas/SmartTransferUserGroups'
      required:
      - message
      type: object
    SmartTransferSetUserGroups:
      example:
        userGroupIds:
        - userGroupIds
        - userGroupIds
      properties:
        userGroupIds:
          items:
            type: string
          type: array
      required:
      - userGroupIds
      type: object
    Task:
      example:
        jobId: jobId
        created: 1.4658129805029452
        tenantId: tenantId
        id: id
        state: state
        type: type
        updated: 5.962133916683182
      properties:
        id:
          type: string
        jobId:
          type: string
        type:
          type: string
        tenantId:
          type: string
        created:
          type: number
        updated:
          type: number
        state:
          type: string
      type: object
    Job:
      example:
        created: 0.8008281904610115
        tenantId: tenantId
        id: id
        state: state
        type: type
        userId: userId
        updated: 6.027456183070403
        tasks:
        - jobId: jobId
          created: 1.4658129805029452
          tenantId: tenantId
          id: id
          state: state
          type: type
          updated: 5.962133916683182
        - jobId: jobId
          created: 1.4658129805029452
          tenantId: tenantId
          id: id
          state: state
          type: type
          updated: 5.962133916683182
      properties:
        id:
          type: string
        tenantId:
          type: string
        type:
          type: string
        userId:
          type: string
        created:
          type: number
        updated:
          type: number
        state:
          type: string
        tasks:
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
    Jobs:
      items:
        $ref: '#/components/schemas/Job'
      type: array
    Tasks:
      items:
        $ref: '#/components/schemas/Task'
      type: array
    Cosigner:
      example:
        archived: false
        name: My Cosigner 1
        id: 44fcead0-7053-4831-a53a-df7fb90d440f
      properties:
        archived:
          description: Whether the cosigner is archived
          example: false
          type: boolean
        id:
          description: The unique identifier of the cosigner
          example: 44fcead0-7053-4831-a53a-df7fb90d440f
          format: uuid
          type: string
        name:
          description: The name of the cosigner
          example: My Cosigner 1
          nullable: true
          type: string
      required:
      - archived
      - id
      type: object
    CosignersPaginatedResponse:
      example:
        next: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
        data:
        - archived: false
          name: My Cosigner 1
          id: 44fcead0-7053-4831-a53a-df7fb90d440f
        - archived: false
          name: My Cosigner 1
          id: 44fcead0-7053-4831-a53a-df7fb90d440f
      properties:
        data:
          description: The data of the current page
          items:
            $ref: '#/components/schemas/Cosigner'
          type: array
        next:
          description: The ID of the next page
          example: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
          nullable: true
          type: string
      required:
      - data
      type: object
    RenameCosigner:
      example:
        name: My Cosigner 1
      properties:
        name:
          description: The new name of the cosigner
          example: My Cosigner 1
          nullable: true
          type: string
      type: object
    ApiKey:
      example:
        lastSeen: 2021-07-01T00:00:00Z
        id: 44fcead0-7053-4831-a53a-df7fb90d440f
      properties:
        id:
          description: The unique identifier of the API key
          example: 44fcead0-7053-4831-a53a-df7fb90d440f
          format: uuid
          type: string
        lastSeen:
          description: The date the API key was last seen
          example: 2021-07-01T00:00:00Z
          format: date-time
          type: string
      required:
      - id
      - lastSeen
      type: object
    ApiKeysPaginatedResponse:
      example:
        next: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
        data:
        - lastSeen: 2021-07-01T00:00:00Z
          id: 44fcead0-7053-4831-a53a-df7fb90d440f
        - lastSeen: 2021-07-01T00:00:00Z
          id: 44fcead0-7053-4831-a53a-df7fb90d440f
      properties:
        data:
          description: The data of the current page
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
        next:
          description: The ID of the next page
          example: eJ0eXAiOiJKV1QiLCJhbGcOiJIUzI1NiJ9
          nullable: true
          type: string
      required:
      - data
      type: object
    get_filter_parameter:
      properties:
        id:
          type: string
        userId:
          type: string
        vaultAccountId:
          type: number
        connectionMethod:
          type: string
        feeLevel:
          type: string
        appUrl:
          type: string
        appName:
          type: string
      type: object
    VaultAccountsPagedResponse_paging:
      example:
        before: before
        after: after
      properties:
        before:
          type: string
        after:
          type: string
      type: object
    PaginatedAssetWalletResponse_paging:
      example:
        before: before
        after: after
      properties:
        before:
          description: A string representing a cursor. Users can use this with a new
            request to this API endpoint as the “before” request parameter to fetch
            the previous page of results.
          type: string
        after:
          description: A string representing a cursor. Users can use this with a new
            request to this API endpoint as the “before” request parameter to fetch
            the next page of results.
          type: string
      type: object
    PaginatedAddressResponse_paging:
      example:
        before: before
        after: after
      properties:
        before:
          description: A string representing a cursor. Users can use this with a new
            request to this API endpoint as the “before” request parameter to fetch
            the previous page of results.
          type: string
        after:
          description: A string representing a cursor. Users can use this with a new
            request to this API endpoint as the “after” request parameter to fetch
            the next page of results.
          type: string
      type: object
    ExchangeAccountsPaged_paging:
      example:
        before: before
        after: after
      properties:
        after:
          description: Query value to the after page
          type: string
        before:
          description: Query value to the before page
          type: string
      type: object
    NetworkConnectionRoutingPolicy_value:
      oneOf:
      - $ref: '#/components/schemas/CustomRoutingDest'
      - $ref: '#/components/schemas/DefaultNetworkRoutingDest'
      - $ref: '#/components/schemas/NoneNetworkRoutingDest'
    NetworkIdRoutingPolicy_value:
      oneOf:
      - $ref: '#/components/schemas/CustomRoutingDest'
      - $ref: '#/components/schemas/NoneNetworkRoutingDest'
    AddAssetToExternalWalletRequest_oneOf:
      example:
        address: address
        tag: tag
      properties:
        address:
          description: The wallet's address (or xpub) of the wallet
          type: string
        tag:
          description: "For XRP wallets, the destination tag; for EOS/XLM, the memo;\
            \ for the fiat providers (BLINC by BCB Group), the Bank Transfer Description"
          type: string
      required:
      - address
      type: object
    AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf:
      properties:
        accountHolderGivenName:
          type: string
        accountHolderSurname:
          type: string
        accountHolderCity:
          type: string
        accountHolderCountry:
          type: string
        accountHolderAddress1:
          type: string
        accountHolderAddress2:
          type: string
        accountHolderDistrict:
          type: string
        accountHolderPostalCode:
          type: string
        iban:
          type: string
        ibanCity:
          type: string
        ibanCountry:
          type: string
      required:
      - accountHolderAddress1
      - accountHolderCity
      - accountHolderCountry
      - accountHolderGivenName
      - accountHolderPostalCode
      - iban
      - ibanCity
      - ibanCountry
      type: object
    AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf_1:
      properties:
        accountHolderGivenName:
          type: string
        accountHolderSurname:
          type: string
        accountHolderCity:
          type: string
        accountHolderCountry:
          type: string
        accountHolderAddress1:
          type: string
        accountHolderAddress2:
          type: string
        accountHolderDistrict:
          type: string
        accountHolderPostalCode:
          type: string
        abaRoutingNumber:
          type: string
        abaAccountNumber:
          type: string
        abaCountry:
          type: string
      required:
      - abaAccountNumber
      - abaCountry
      - abaRoutingNumber
      - accountHolderAddress1
      - accountHolderCity
      - accountHolderCountry
      - accountHolderGivenName
      - accountHolderPostalCode
      type: object
    AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf_2:
      properties:
        speiClabe:
          type: string
        speiName:
          type: string
      required:
      - speiClabe
      type: object
    AddAssetToExternalWalletRequest_oneOf_1_additionalInfo:
      oneOf:
      - $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf'
      - $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf_1'
      - $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf_1_additionalInfo_oneOf_2'
      type: object
    AddAssetToExternalWalletRequest_oneOf_1:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/AddAssetToExternalWalletRequest_oneOf_1_additionalInfo'
      required:
      - additionalInfo
      type: object
    AssetResponse_onchain:
      example:
        standard: ERC20
        symbol: TST3
        address: 0xe7A9as1oa38bc4da0248s179E30aa94CcF453991
        decimals: 18
        name: Test 3
      properties:
        symbol:
          description: The asset symbol
          example: TST3
          type: string
        name:
          description: The asset name
          example: Test 3
          type: string
        address:
          description: The asset address
          example: 0xe7A9as1oa38bc4da0248s179E30aa94CcF453991
          type: string
        decimals:
          description: Number of decimals
          example: 18
          type: number
        standard:
          description: The asset standard
          example: ERC20
          type: string
      required:
      - decimals
      - name
      - symbol
      type: object
    AssetResponse_metadata:
      example:
        scope: Global
        deprecated: false
      properties:
        scope:
          description: The scope of the asset
          enum:
          - Global
          - Local
          example: Global
          type: string
        deprecated:
          description: Is asset deprecated
          example: false
          type: boolean
      required:
      - deprecated
      - scope
      type: object
    SignedMessage_signature:
      example:
        r: r
        s: s
        fullSig: fullSig
        v: 9.301444243932576
      properties:
        fullSig:
          type: string
        r:
          type: string
        s:
          type: string
        v:
          type: number
      type: object
    TransactionResponse_contractCallDecodedData:
      description: "Decoded data for `CONTRACT_CALL` operations. The Fireblocks [development\
        \ libraries](https://developers.fireblocks.com/docs/ethereum-development#convenience-libraries)\
        \ are recommended for setting this parameter's value."
      example:
        functionCalls:
        - "{}"
        - "{}"
        contractName: contractName
      properties:
        contractName:
          type: string
        functionCalls:
          items:
            type: object
          type: array
      type: object
    TransactionRequest_amount:
      description: "For `TRANSFER` operations, the requested amount to transfer, in\
        \ the asset’s unit. Fireblocks recommends using a numeric string for accurate\
        \ precision. Although a number input exists, it is deprecated."
      oneOf:
      - description: Numeric string (recommended)
        example: "0.02"
        type: string
      - description: Number (deprecated)
        example: 0.02
        type: number
    TransactionRequest_fee:
      description: "For UTXO-based blockchains, the fee per bytes in the asset’s smallest\
        \ unit (Satoshi, Latoshi, etc.).  For Ripple, the fee for the transaction.\
        \ Fireblocks recommends using a numeric string for accurate precision. Although\
        \ a number input exists, it is deprecated."
      oneOf:
      - description: Numeric string (recommended)
        type: string
      - description: Number (deprecated)
        type: number
    TransactionRequest_priorityFee:
      description: "For Ethereum-based blockchains only, the fee for EIP-1559 transaction\
        \ pricing mechanism. Value is in Gwei.  Fireblocks recommends using a numeric\
        \ string for accurate precision. Although a number input exists, it is deprecated."
      oneOf:
      - description: Numeric string (recommended)
        example: "2"
        type: string
      - description: Number (deprecated)
        example: 2
        type: number
    TransactionRequest_gasLimit:
      description: "For EVM-based blockchains only. Units of gas required to process\
        \ the transaction. Note: Only two of the three arguments can be specified\
        \ in a single transaction: `gasLimit`, `gasPrice` and `networkFee`. Fireblocks\
        \ recommends using a numeric string for accurate precision. Although a number\
        \ input exists, it is deprecated."
      oneOf:
      - description: Numeric string (recommended)
        example: "21000"
        type: string
      - description: Number (deprecated)
        example: 21000
        type: number
    TransactionRequest_gasPrice:
      description: "For non-EIP-1559, EVM-based transactions. Price per gas unit (in\
        \ Ethereum this is specified in Gwei).  Note: Only two of the three arguments\
        \ can be specified in a single transaction: `gasLimit`, `gasPrice` and `networkFee`.\
        \ Fireblocks recommends using a numeric string for accurate precision.  Although\
        \ a number input exists, it is deprecated."
      oneOf:
      - description: Numeric string (recommended)
        type: string
      - description: Number (deprecated)
        type: number
    TransactionRequest_networkFee:
      description: |-
        For EVM-based blockchains only. The total transaction fee in the blockchain’s largest unit. Note: Only two of the three arguments can be specified in a single transaction: `gasLimit`, `gasPrice` and `networkFee`. Fireblocks recommends using a numeric string for accurate precision. Although a number input exists, it is deprecated. - The transaction blockchain fee.
        - For Ethereum, you can't pass gasPrice, gasLimit and networkFee all together.
        - A numeric value representation is required.
      oneOf:
      - description: Numeric string (recommended)
        type: string
      - description: Number (deprecated)
        type: number
    TransactionRequest_networkStaking:
      deprecated: true
      description: This feature is no longer supported.
      oneOf:
      - description: Numeric string (recommended)
        type: string
      - description: Number (deprecated)
        type: number
    ErrorResponse_error:
      example:
        type: INTERNAL
        message: message
      properties:
        type:
          enum:
          - INTERNAL
          - AUTHENTICATION
          - AUTHORIZATION
          - VALIDATION
          - NOT_FOUND
          - UNPROCESSABLE_ENTITY
          - FORBIDDEN
          type: string
        message:
          type: string
      required:
      - message
      - type
      type: object
    ConversionOperationExecutionParams_executionParams:
      properties:
        amount:
          type: string
        accountId:
          type: string
        srcAssetId:
          type: string
        destAssetId:
          type: string
        slippageBasisPoints:
          maximum: 10000
          minimum: 0
          type: integer
      type: object
    TransferOperationExecutionParams_executionParams:
      properties:
        amount:
          type: string
        assetId:
          type: string
        source:
          $ref: '#/components/schemas/Account'
        destination:
          $ref: '#/components/schemas/Destination'
      type: object
    DisbursementOperationExecutionParams_executionParams:
      properties:
        amount:
          type: string
        paymentAccount:
          $ref: '#/components/schemas/Account'
        instructionSet:
          items:
            $ref: '#/components/schemas/DisbursementInstruction'
          type: array
      type: object
    CreateWorkflowExecutionRequest_params_inner:
      anyOf:
      - $ref: '#/components/schemas/ConversionOperationExecutionParams'
      - $ref: '#/components/schemas/TransferOperationExecutionParams'
      - $ref: '#/components/schemas/DisbursementOperationExecutionParams'
    ScreeningVerdict_matchedRule:
      properties:
        action:
          type: string
        category:
          items:
            type: string
          type: array
      type: object
    TransferOperationFailure_data:
      properties:
        txId:
          type: string
        txStatus:
          type: string
        txSubStatus:
          type: string
      required:
      - txId
      - txStatus
      type: object
    DisbursementOperationPreviewOutput_instructionSet_inner:
      allOf:
      - $ref: '#/components/schemas/DisbursementInstructionOutput'
      - properties:
          timeSeconds:
            type: number
        required:
        - timeSeconds
        type: object
    TokenLinkDto_tokenMetadata:
      description: The token's metadata
      oneOf:
      - $ref: '#/components/schemas/AssetMetadataDto'
      - $ref: '#/components/schemas/CollectionMetadataDto'
      - $ref: '#/components/schemas/ContractMetadataDto'
    CreateTokenRequestDto_createParams:
      oneOf:
      - $ref: '#/components/schemas/EVMTokenCreateParamsDto'
      - $ref: '#/components/schemas/StellarRippleCreateParamsDto'
    SetOtaStatusResponse_oneOf:
      example:
        message: No change needed. The current status is false
      properties:
        message:
          description: Message indicating the result of the operation for example
            when no config change is needed
          example: No change needed. The current status is false
          type: string
      type: object
    SrcOrDestAttributes_inner:
      anyOf:
      - $ref: '#/components/schemas/PolicySrcOrDestId'
      - $ref: '#/components/schemas/PolicySrcOrDestType'
      - $ref: '#/components/schemas/PolicySrcOrDestSubType'
    PolicyRule_operators:
      description: Defines users/groups who can initiate the type of transaction to
        which the rule applies.
      example:
        usersGroups:
        - usersGroups
        - usersGroups
        services:
        - services
        - services
        users:
        - users
        - users
        wildcard: '*'
      properties:
        wildcard:
          description: |
            If used then this property should appear as the only child property
            * "*" - All users are allowed
          enum:
          - '*'
          type: string
        users:
          description: Set of users ids
          items:
            type: string
          type: array
        usersGroups:
          description: Set of group ids
          items:
            type: string
          type: array
        services:
          description: set of services to initiate transactions
          items:
            type: string
          type: array
      type: object
    PolicyRule_designatedSigners:
      description: Set of ids representing the users who signs transactions that match
        a specific rule
      example:
        usersGroups:
        - usersGroups
        - usersGroups
        users:
        - users
        - users
      properties:
        users:
          description: Set of users ids
          items:
            type: string
          type: array
        usersGroups:
          description: Set of group ids
          items:
            type: string
          type: array
      type: object
    PolicyRule_src:
      description: Defines source accounts the rule allows transfers to originate
        from
      example:
        ids:
        - null
        - null
      properties:
        ids:
          description: A set of ids in a tuple format
          items:
            $ref: '#/components/schemas/SrcOrDestAttributes'
          type: array
      type: object
    PolicyRule_dst:
      description: Defines the destination accounts the rule allows transfers to
      example:
        ids:
        - null
        - null
      properties:
        ids:
          description: A set of ids in a tuple format
          items:
            $ref: '#/components/schemas/SrcOrDestAttributes'
          type: array
      type: object
    PolicyRule_amount:
      anyOf:
      - description: Numeric string (recommended)
        type: string
      - description: Number (deprecated)
        type: number
      description: Defines the value a transaction must exceed for the rule to apply
        to it (according to the amountCurrency field)
    PolicyRule_authorizationGroups_groups_inner:
      example:
        usersGroups:
        - usersGroups
        - usersGroups
        th: 1.4658129805029452
        users:
        - users
        - users
      properties:
        users:
          description: User ids
          items:
            type: string
          type: array
        usersGroups:
          description: Group ids
          items:
            type: string
          type: array
        th:
          description: "Represents the min amount of entities which are required to\
            \ approve the transaction, default is 1."
          type: number
      type: object
    PolicyRule_authorizationGroups:
      description: Defines the transaction approval terms
      example:
        allowOperatorAsAuthorizer: true
        groups:
        - usersGroups:
          - usersGroups
          - usersGroups
          th: 1.4658129805029452
          users:
          - users
          - users
        - usersGroups:
          - usersGroups
          - usersGroups
          th: 1.4658129805029452
          users:
          - users
          - users
        logic: AND
      properties:
        logic:
          description: |
            * AND - requires approval of all authorization groups
            * OR - requires approval of at least one of the authorization groups
          enum:
          - AND
          - OR
          type: string
        allowOperatorAsAuthorizer:
          description: Defines whether the user who initiates a transaction can approve
            their own transaction and count toward the approval threshold for their
            transaction
          type: boolean
        groups:
          description: Groups of entities which can approve the transaction
          items:
            $ref: '#/components/schemas/PolicyRule_authorizationGroups_groups_inner'
          type: array
      type: object
    PolicyRule_amountAggregation:
      description: |
        Defines the method by which the Policy Engine calculates accumulation.
        It uses the Initiator, Source, and Destination to calculate accumulation toward the value under Minimum, for the time under Time Period.
      example:
        dstTransferPeers: null
        operators: null
        srcTransferPeers: null
      properties:
        operators:
          $ref: '#/components/schemas/AmountAggregationTimePeriodMethod'
        srcTransferPeers:
          $ref: '#/components/schemas/AmountAggregationTimePeriodMethod'
        dstTransferPeers:
          $ref: '#/components/schemas/AmountAggregationTimePeriodMethod'
      type: object
    PolicyRule_rawMessageSigning_derivationPath:
      example:
        path:
        - 5.962133916683182
        - 5.962133916683182
      properties:
        path:
          items:
            type: number
          type: array
      type: object
    PolicyRule_rawMessageSigning:
      description: Raw message signing configuration
      example:
        derivationPath:
          path:
          - 5.962133916683182
          - 5.962133916683182
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        derivationPath:
          $ref: '#/components/schemas/PolicyRule_rawMessageSigning_derivationPath'
      type: object
  securitySchemes:
    bearerTokenAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey
x-readme:
  explorer-enabled: false
  samples-languages:
  - curl
  - javascript
  - python

