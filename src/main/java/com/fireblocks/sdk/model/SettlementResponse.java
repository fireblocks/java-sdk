/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * SettlementResponse
 */
@JsonPropertyOrder({
  SettlementResponse.JSON_PROPERTY_ID,
  SettlementResponse.JSON_PROPERTY_INITIATOR,
  SettlementResponse.JSON_PROPERTY_EXCHANGE_REPLY,
  SettlementResponse.JSON_PROPERTY_FIREBLOCKS_INITIATED_TRANSACTIONS,
  SettlementResponse.JSON_PROPERTY_EXCHANGE_REQUESTED_TRANSACTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SettlementResponse {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INITIATOR = "initiator";
  private String initiator;

  public static final String JSON_PROPERTY_EXCHANGE_REPLY = "exchangeReply";
  private String exchangeReply;

  public static final String JSON_PROPERTY_FIREBLOCKS_INITIATED_TRANSACTIONS = "fireblocksInitiatedTransactions";
  private Object fireblocksInitiatedTransactions;

  public static final String JSON_PROPERTY_EXCHANGE_REQUESTED_TRANSACTIONS = "exchangeRequestedTransactions";
  private SettlementResponse exchangeRequestedTransactions;

  public SettlementResponse() { 
  }

  public SettlementResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public SettlementResponse initiator(String initiator) {
    this.initiator = initiator;
    return this;
  }

   /**
   * Get initiator
   * @return initiator
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInitiator() {
    return initiator;
  }


  @JsonProperty(JSON_PROPERTY_INITIATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitiator(String initiator) {
    this.initiator = initiator;
  }


  public SettlementResponse exchangeReply(String exchangeReply) {
    this.exchangeReply = exchangeReply;
    return this;
  }

   /**
   * Get exchangeReply
   * @return exchangeReply
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE_REPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeReply() {
    return exchangeReply;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_REPLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeReply(String exchangeReply) {
    this.exchangeReply = exchangeReply;
  }


  public SettlementResponse fireblocksInitiatedTransactions(Object fireblocksInitiatedTransactions) {
    this.fireblocksInitiatedTransactions = fireblocksInitiatedTransactions;
    return this;
  }

   /**
   * Get fireblocksInitiatedTransactions
   * @return fireblocksInitiatedTransactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIREBLOCKS_INITIATED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFireblocksInitiatedTransactions() {
    return fireblocksInitiatedTransactions;
  }


  @JsonProperty(JSON_PROPERTY_FIREBLOCKS_INITIATED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFireblocksInitiatedTransactions(Object fireblocksInitiatedTransactions) {
    this.fireblocksInitiatedTransactions = fireblocksInitiatedTransactions;
  }


  public SettlementResponse exchangeRequestedTransactions(SettlementResponse exchangeRequestedTransactions) {
    this.exchangeRequestedTransactions = exchangeRequestedTransactions;
    return this;
  }

   /**
   * Get exchangeRequestedTransactions
   * @return exchangeRequestedTransactions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXCHANGE_REQUESTED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SettlementResponse getExchangeRequestedTransactions() {
    return exchangeRequestedTransactions;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_REQUESTED_TRANSACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeRequestedTransactions(SettlementResponse exchangeRequestedTransactions) {
    this.exchangeRequestedTransactions = exchangeRequestedTransactions;
  }


  /**
   * Return true if this SettlementResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SettlementResponse settlementResponse = (SettlementResponse) o;
    return Objects.equals(this.id, settlementResponse.id) &&
        Objects.equals(this.initiator, settlementResponse.initiator) &&
        Objects.equals(this.exchangeReply, settlementResponse.exchangeReply) &&
        Objects.equals(this.fireblocksInitiatedTransactions, settlementResponse.fireblocksInitiatedTransactions) &&
        Objects.equals(this.exchangeRequestedTransactions, settlementResponse.exchangeRequestedTransactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, initiator, exchangeReply, fireblocksInitiatedTransactions, exchangeRequestedTransactions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SettlementResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    initiator: ").append(toIndentedString(initiator)).append("\n");
    sb.append("    exchangeReply: ").append(toIndentedString(exchangeReply)).append("\n");
    sb.append("    fireblocksInitiatedTransactions: ").append(toIndentedString(fireblocksInitiatedTransactions)).append("\n");
    sb.append("    exchangeRequestedTransactions: ").append(toIndentedString(exchangeRequestedTransactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

