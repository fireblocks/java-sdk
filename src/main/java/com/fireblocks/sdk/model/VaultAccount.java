/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** VaultAccount */
@JsonPropertyOrder({
    VaultAccount.JSON_PROPERTY_ID,
    VaultAccount.JSON_PROPERTY_NAME,
    VaultAccount.JSON_PROPERTY_ASSETS,
    VaultAccount.JSON_PROPERTY_HIDDEN_ON_U_I,
    VaultAccount.JSON_PROPERTY_CUSTOMER_REF_ID,
    VaultAccount.JSON_PROPERTY_AUTO_FUEL,
    VaultAccount.JSON_PROPERTY_TAGS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class VaultAccount {
    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nullable private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    @jakarta.annotation.Nullable private String name;

    public static final String JSON_PROPERTY_ASSETS = "assets";
    @jakarta.annotation.Nullable private List<VaultAsset> assets = new ArrayList<>();

    public static final String JSON_PROPERTY_HIDDEN_ON_U_I = "hiddenOnUI";
    @jakarta.annotation.Nullable private Boolean hiddenOnUI;

    public static final String JSON_PROPERTY_CUSTOMER_REF_ID = "customerRefId";
    @jakarta.annotation.Nullable private String customerRefId;

    public static final String JSON_PROPERTY_AUTO_FUEL = "autoFuel";
    @jakarta.annotation.Nullable private Boolean autoFuel;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @jakarta.annotation.Nullable private List<Tag> tags = new ArrayList<>();

    public VaultAccount() {}

    public VaultAccount id(@jakarta.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public VaultAccount name(@jakarta.annotation.Nullable String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable String name) {
        this.name = name;
    }

    public VaultAccount assets(@jakarta.annotation.Nullable List<VaultAsset> assets) {
        this.assets = assets;
        return this;
    }

    public VaultAccount addAssetsItem(VaultAsset assetsItem) {
        if (this.assets == null) {
            this.assets = new ArrayList<>();
        }
        this.assets.add(assetsItem);
        return this;
    }

    /**
     * Get assets
     *
     * @return assets
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ASSETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<VaultAsset> getAssets() {
        return assets;
    }

    @JsonProperty(JSON_PROPERTY_ASSETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAssets(@jakarta.annotation.Nullable List<VaultAsset> assets) {
        this.assets = assets;
    }

    public VaultAccount hiddenOnUI(@jakarta.annotation.Nullable Boolean hiddenOnUI) {
        this.hiddenOnUI = hiddenOnUI;
        return this;
    }

    /**
     * Get hiddenOnUI
     *
     * @return hiddenOnUI
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_HIDDEN_ON_U_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getHiddenOnUI() {
        return hiddenOnUI;
    }

    @JsonProperty(JSON_PROPERTY_HIDDEN_ON_U_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHiddenOnUI(@jakarta.annotation.Nullable Boolean hiddenOnUI) {
        this.hiddenOnUI = hiddenOnUI;
    }

    public VaultAccount customerRefId(@jakarta.annotation.Nullable String customerRefId) {
        this.customerRefId = customerRefId;
        return this;
    }

    /**
     * Get customerRefId
     *
     * @return customerRefId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CUSTOMER_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCustomerRefId() {
        return customerRefId;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerRefId(@jakarta.annotation.Nullable String customerRefId) {
        this.customerRefId = customerRefId;
    }

    public VaultAccount autoFuel(@jakarta.annotation.Nullable Boolean autoFuel) {
        this.autoFuel = autoFuel;
        return this;
    }

    /**
     * Get autoFuel
     *
     * @return autoFuel
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AUTO_FUEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getAutoFuel() {
        return autoFuel;
    }

    @JsonProperty(JSON_PROPERTY_AUTO_FUEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAutoFuel(@jakarta.annotation.Nullable Boolean autoFuel) {
        this.autoFuel = autoFuel;
    }

    public VaultAccount tags(@jakarta.annotation.Nullable List<Tag> tags) {
        this.tags = tags;
        return this;
    }

    public VaultAccount addTagsItem(Tag tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tagsItem);
        return this;
    }

    /**
     * List of tags attached to the vault account
     *
     * @return tags
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Tag> getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@jakarta.annotation.Nullable List<Tag> tags) {
        this.tags = tags;
    }

    /** Return true if this VaultAccount object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VaultAccount vaultAccount = (VaultAccount) o;
        return Objects.equals(this.id, vaultAccount.id)
                && Objects.equals(this.name, vaultAccount.name)
                && Objects.equals(this.assets, vaultAccount.assets)
                && Objects.equals(this.hiddenOnUI, vaultAccount.hiddenOnUI)
                && Objects.equals(this.customerRefId, vaultAccount.customerRefId)
                && Objects.equals(this.autoFuel, vaultAccount.autoFuel)
                && Objects.equals(this.tags, vaultAccount.tags);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, assets, hiddenOnUI, customerRefId, autoFuel, tags);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VaultAccount {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
        sb.append("    hiddenOnUI: ").append(toIndentedString(hiddenOnUI)).append("\n");
        sb.append("    customerRefId: ").append(toIndentedString(customerRefId)).append("\n");
        sb.append("    autoFuel: ").append(toIndentedString(autoFuel)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getName()))));
        }

        // add `assets` to the URL query string
        if (getAssets() != null) {
            for (int i = 0; i < getAssets().size(); i++) {
                if (getAssets().get(i) != null) {
                    joiner.add(
                            getAssets()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sassets%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `hiddenOnUI` to the URL query string
        if (getHiddenOnUI() != null) {
            joiner.add(
                    String.format(
                            "%shiddenOnUI%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getHiddenOnUI()))));
        }

        // add `customerRefId` to the URL query string
        if (getCustomerRefId() != null) {
            joiner.add(
                    String.format(
                            "%scustomerRefId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCustomerRefId()))));
        }

        // add `autoFuel` to the URL query string
        if (getAutoFuel() != null) {
            joiner.add(
                    String.format(
                            "%sautoFuel%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAutoFuel()))));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            for (int i = 0; i < getTags().size(); i++) {
                if (getTags().get(i) != null) {
                    joiner.add(
                            getTags()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%stags%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}
