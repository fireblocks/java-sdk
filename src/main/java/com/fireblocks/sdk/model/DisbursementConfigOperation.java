/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** DisbursementConfigOperation */
@JsonPropertyOrder({
    DisbursementConfigOperation.JSON_PROPERTY_OPERATION_ID,
    DisbursementConfigOperation.JSON_PROPERTY_TYPE,
    DisbursementConfigOperation.JSON_PROPERTY_PARAMS,
    DisbursementConfigOperation.JSON_PROPERTY_STATUS,
    DisbursementConfigOperation.JSON_PROPERTY_VALIDATION_FAILURE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class DisbursementConfigOperation {
    public static final String JSON_PROPERTY_OPERATION_ID = "operationId";
    @jakarta.annotation.Nonnull private String operationId;

    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nonnull private DisbursementOperationType type;

    public static final String JSON_PROPERTY_PARAMS = "params";
    @jakarta.annotation.Nonnull private DisbursementOperationConfigParams params;

    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nonnull private ConfigOperationStatus status;

    public static final String JSON_PROPERTY_VALIDATION_FAILURE = "validationFailure";
    @jakarta.annotation.Nullable private DisbursementValidationFailure validationFailure;

    public DisbursementConfigOperation() {}

    @JsonCreator
    public DisbursementConfigOperation(
            @JsonProperty(value = JSON_PROPERTY_OPERATION_ID, required = true) String operationId,
            @JsonProperty(value = JSON_PROPERTY_TYPE, required = true)
                    DisbursementOperationType type,
            @JsonProperty(value = JSON_PROPERTY_PARAMS, required = true)
                    DisbursementOperationConfigParams params,
            @JsonProperty(value = JSON_PROPERTY_STATUS, required = true)
                    ConfigOperationStatus status) {
        this.operationId = operationId;
        this.type = type;
        this.params = params;
        this.status = status;
    }

    public DisbursementConfigOperation operationId(@jakarta.annotation.Nonnull String operationId) {
        this.operationId = operationId;
        return this;
    }

    /**
     * Get operationId
     *
     * @return operationId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getOperationId() {
        return operationId;
    }

    @JsonProperty(JSON_PROPERTY_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOperationId(@jakarta.annotation.Nonnull String operationId) {
        this.operationId = operationId;
    }

    public DisbursementConfigOperation type(
            @jakarta.annotation.Nonnull DisbursementOperationType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DisbursementOperationType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@jakarta.annotation.Nonnull DisbursementOperationType type) {
        this.type = type;
    }

    public DisbursementConfigOperation params(
            @jakarta.annotation.Nonnull DisbursementOperationConfigParams params) {
        this.params = params;
        return this;
    }

    /**
     * Get params
     *
     * @return params
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PARAMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DisbursementOperationConfigParams getParams() {
        return params;
    }

    @JsonProperty(JSON_PROPERTY_PARAMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setParams(@jakarta.annotation.Nonnull DisbursementOperationConfigParams params) {
        this.params = params;
    }

    public DisbursementConfigOperation status(
            @jakarta.annotation.Nonnull ConfigOperationStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ConfigOperationStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(@jakarta.annotation.Nonnull ConfigOperationStatus status) {
        this.status = status;
    }

    public DisbursementConfigOperation validationFailure(
            @jakarta.annotation.Nullable DisbursementValidationFailure validationFailure) {
        this.validationFailure = validationFailure;
        return this;
    }

    /**
     * Get validationFailure
     *
     * @return validationFailure
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VALIDATION_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DisbursementValidationFailure getValidationFailure() {
        return validationFailure;
    }

    @JsonProperty(JSON_PROPERTY_VALIDATION_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValidationFailure(
            @jakarta.annotation.Nullable DisbursementValidationFailure validationFailure) {
        this.validationFailure = validationFailure;
    }

    /** Return true if this DisbursementConfigOperation object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DisbursementConfigOperation disbursementConfigOperation = (DisbursementConfigOperation) o;
        return Objects.equals(this.operationId, disbursementConfigOperation.operationId)
                && Objects.equals(this.type, disbursementConfigOperation.type)
                && Objects.equals(this.params, disbursementConfigOperation.params)
                && Objects.equals(this.status, disbursementConfigOperation.status)
                && Objects.equals(
                        this.validationFailure, disbursementConfigOperation.validationFailure);
    }

    @Override
    public int hashCode() {
        return Objects.hash(operationId, type, params, status, validationFailure);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DisbursementConfigOperation {\n");
        sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    params: ").append(toIndentedString(params)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    validationFailure: ")
                .append(toIndentedString(validationFailure))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `operationId` to the URL query string
        if (getOperationId() != null) {
            joiner.add(
                    String.format(
                            "%soperationId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOperationId()))));
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `params` to the URL query string
        if (getParams() != null) {
            joiner.add(getParams().toUrlQueryString(prefix + "params" + suffix));
        }

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(
                    String.format(
                            "%sstatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
        }

        // add `validationFailure` to the URL query string
        if (getValidationFailure() != null) {
            joiner.add(
                    getValidationFailure().toUrlQueryString(prefix + "validationFailure" + suffix));
        }

        return joiner.toString();
    }
}
