/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** CollectionBurnRequestDto */
@JsonPropertyOrder({
    CollectionBurnRequestDto.JSON_PROPERTY_VAULT_ACCOUNT_ID,
    CollectionBurnRequestDto.JSON_PROPERTY_TOKEN_ID,
    CollectionBurnRequestDto.JSON_PROPERTY_AMOUNT
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class CollectionBurnRequestDto {
    public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
    @jakarta.annotation.Nonnull private String vaultAccountId;

    public static final String JSON_PROPERTY_TOKEN_ID = "tokenId";
    @jakarta.annotation.Nonnull private String tokenId;

    public static final String JSON_PROPERTY_AMOUNT = "amount";
    @jakarta.annotation.Nullable private String amount;

    public CollectionBurnRequestDto() {}

    @JsonCreator
    public CollectionBurnRequestDto(
            @JsonProperty(value = JSON_PROPERTY_VAULT_ACCOUNT_ID, required = true)
                    String vaultAccountId,
            @JsonProperty(value = JSON_PROPERTY_TOKEN_ID, required = true) String tokenId) {
        this.vaultAccountId = vaultAccountId;
        this.tokenId = tokenId;
    }

    public CollectionBurnRequestDto vaultAccountId(
            @jakarta.annotation.Nonnull String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
        return this;
    }

    /**
     * The id of the vault account that initiates the burn function
     *
     * @return vaultAccountId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getVaultAccountId() {
        return vaultAccountId;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVaultAccountId(@jakarta.annotation.Nonnull String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
    }

    public CollectionBurnRequestDto tokenId(@jakarta.annotation.Nonnull String tokenId) {
        this.tokenId = tokenId;
        return this;
    }

    /**
     * The token id
     *
     * @return tokenId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TOKEN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTokenId() {
        return tokenId;
    }

    @JsonProperty(JSON_PROPERTY_TOKEN_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTokenId(@jakarta.annotation.Nonnull String tokenId) {
        this.tokenId = tokenId;
    }

    public CollectionBurnRequestDto amount(@jakarta.annotation.Nullable String amount) {
        this.amount = amount;
        return this;
    }

    /**
     * For ERC721, amount is optional or should always be 1 and for ERC1155, amount should be 1 or
     * greater
     *
     * @return amount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAmount() {
        return amount;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmount(@jakarta.annotation.Nullable String amount) {
        this.amount = amount;
    }

    /** Return true if this CollectionBurnRequestDto object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CollectionBurnRequestDto collectionBurnRequestDto = (CollectionBurnRequestDto) o;
        return Objects.equals(this.vaultAccountId, collectionBurnRequestDto.vaultAccountId)
                && Objects.equals(this.tokenId, collectionBurnRequestDto.tokenId)
                && Objects.equals(this.amount, collectionBurnRequestDto.amount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(vaultAccountId, tokenId, amount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CollectionBurnRequestDto {\n");
        sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
        sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `vaultAccountId` to the URL query string
        if (getVaultAccountId() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getVaultAccountId()))));
        }

        // add `tokenId` to the URL query string
        if (getTokenId() != null) {
            joiner.add(
                    String.format(
                            "%stokenId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTokenId()))));
        }

        // add `amount` to the URL query string
        if (getAmount() != null) {
            joiner.add(
                    String.format(
                            "%samount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
        }

        return joiner.toString();
    }
}
