/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

/** SwapOperationRequest */
@JsonPropertyOrder({
    SwapOperationRequest.JSON_PROPERTY_PROVIDER_QUOTE_ID,
    SwapOperationRequest.JSON_PROPERTY_FEE_LEVEL,
    SwapOperationRequest.JSON_PROPERTY_TX_NOTE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SwapOperationRequest {
    public static final String JSON_PROPERTY_PROVIDER_QUOTE_ID = "providerQuoteId";
    private UUID providerQuoteId;

    /** The fee level of the transaction */
    public enum FeeLevelEnum {
        LOW("LOW"),

        MEDIUM("MEDIUM"),

        HIGH("HIGH");

        private String value;

        FeeLevelEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static FeeLevelEnum fromValue(String value) {
            for (FeeLevelEnum b : FeeLevelEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_FEE_LEVEL = "feeLevel";
    private FeeLevelEnum feeLevel;

    public static final String JSON_PROPERTY_TX_NOTE = "txNote";
    private String txNote;

    public SwapOperationRequest() {}

    public SwapOperationRequest providerQuoteId(UUID providerQuoteId) {
        this.providerQuoteId = providerQuoteId;
        return this;
    }

    /**
     * An identifier that uniquely identifies the received quote
     *
     * @return providerQuoteId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PROVIDER_QUOTE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getProviderQuoteId() {
        return providerQuoteId;
    }

    @JsonProperty(JSON_PROPERTY_PROVIDER_QUOTE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProviderQuoteId(UUID providerQuoteId) {
        this.providerQuoteId = providerQuoteId;
    }

    public SwapOperationRequest feeLevel(FeeLevelEnum feeLevel) {
        this.feeLevel = feeLevel;
        return this;
    }

    /**
     * The fee level of the transaction
     *
     * @return feeLevel
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public FeeLevelEnum getFeeLevel() {
        return feeLevel;
    }

    @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeeLevel(FeeLevelEnum feeLevel) {
        this.feeLevel = feeLevel;
    }

    public SwapOperationRequest txNote(String txNote) {
        this.txNote = txNote;
        return this;
    }

    /**
     * user note on the transaction
     *
     * @return txNote
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TX_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTxNote() {
        return txNote;
    }

    @JsonProperty(JSON_PROPERTY_TX_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTxNote(String txNote) {
        this.txNote = txNote;
    }

    /** Return true if this SwapOperationRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SwapOperationRequest swapOperationRequest = (SwapOperationRequest) o;
        return Objects.equals(this.providerQuoteId, swapOperationRequest.providerQuoteId)
                && Objects.equals(this.feeLevel, swapOperationRequest.feeLevel)
                && Objects.equals(this.txNote, swapOperationRequest.txNote);
    }

    @Override
    public int hashCode() {
        return Objects.hash(providerQuoteId, feeLevel, txNote);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SwapOperationRequest {\n");
        sb.append("    providerQuoteId: ").append(toIndentedString(providerQuoteId)).append("\n");
        sb.append("    feeLevel: ").append(toIndentedString(feeLevel)).append("\n");
        sb.append("    txNote: ").append(toIndentedString(txNote)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `providerQuoteId` to the URL query string
        if (getProviderQuoteId() != null) {
            joiner.add(
                    String.format(
                            "%sproviderQuoteId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getProviderQuoteId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `feeLevel` to the URL query string
        if (getFeeLevel() != null) {
            joiner.add(
                    String.format(
                            "%sfeeLevel%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getFeeLevel()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `txNote` to the URL query string
        if (getTxNote() != null) {
            joiner.add(
                    String.format(
                            "%stxNote%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getTxNote()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
