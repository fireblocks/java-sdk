/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateNcwConnectionRequest */
@JsonPropertyOrder({
    CreateNcwConnectionRequest.JSON_PROPERTY_NCW_ID,
    CreateNcwConnectionRequest.JSON_PROPERTY_NCW_ACCOUNT_ID,
    CreateNcwConnectionRequest.JSON_PROPERTY_FEE_LEVEL,
    CreateNcwConnectionRequest.JSON_PROPERTY_URI,
    CreateNcwConnectionRequest.JSON_PROPERTY_CHAIN_IDS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class CreateNcwConnectionRequest {
    public static final String JSON_PROPERTY_NCW_ID = "ncwId";
    @jakarta.annotation.Nonnull private String ncwId;

    public static final String JSON_PROPERTY_NCW_ACCOUNT_ID = "ncwAccountId";
    @jakarta.annotation.Nonnull private BigDecimal ncwAccountId;

    /** The default fee level. Valid values are &#x60;MEDIUM&#x60; and &#x60;HIGH&#x60;. */
    public enum FeeLevelEnum {
        MEDIUM(String.valueOf("MEDIUM")),

        HIGH(String.valueOf("HIGH"));

        private String value;

        FeeLevelEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static FeeLevelEnum fromValue(String value) {
            for (FeeLevelEnum b : FeeLevelEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_FEE_LEVEL = "feeLevel";
    @jakarta.annotation.Nonnull private FeeLevelEnum feeLevel;

    public static final String JSON_PROPERTY_URI = "uri";
    @jakarta.annotation.Nonnull private String uri;

    public static final String JSON_PROPERTY_CHAIN_IDS = "chainIds";
    @jakarta.annotation.Nullable private List<String> chainIds;

    public CreateNcwConnectionRequest() {}

    @JsonCreator
    public CreateNcwConnectionRequest(
            @JsonProperty(value = JSON_PROPERTY_NCW_ID, required = true) String ncwId,
            @JsonProperty(value = JSON_PROPERTY_NCW_ACCOUNT_ID, required = true)
                    BigDecimal ncwAccountId,
            @JsonProperty(value = JSON_PROPERTY_FEE_LEVEL, required = true) FeeLevelEnum feeLevel,
            @JsonProperty(value = JSON_PROPERTY_URI, required = true) String uri) {
        this.ncwId = ncwId;
        this.ncwAccountId = ncwAccountId;
        this.feeLevel = feeLevel;
        this.uri = uri;
    }

    public CreateNcwConnectionRequest ncwId(@jakarta.annotation.Nonnull String ncwId) {
        this.ncwId = ncwId;
        return this;
    }

    /**
     * The ID of the Non-Custodial Wallet to connect to the dApp.
     *
     * @return ncwId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NCW_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getNcwId() {
        return ncwId;
    }

    @JsonProperty(JSON_PROPERTY_NCW_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNcwId(@jakarta.annotation.Nonnull String ncwId) {
        this.ncwId = ncwId;
    }

    public CreateNcwConnectionRequest ncwAccountId(
            @jakarta.annotation.Nonnull BigDecimal ncwAccountId) {
        this.ncwAccountId = ncwAccountId;
        return this;
    }

    /**
     * The NCW account ID to connect to the dApp.
     *
     * @return ncwAccountId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NCW_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public BigDecimal getNcwAccountId() {
        return ncwAccountId;
    }

    @JsonProperty(JSON_PROPERTY_NCW_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNcwAccountId(@jakarta.annotation.Nonnull BigDecimal ncwAccountId) {
        this.ncwAccountId = ncwAccountId;
    }

    public CreateNcwConnectionRequest feeLevel(@jakarta.annotation.Nonnull FeeLevelEnum feeLevel) {
        this.feeLevel = feeLevel;
        return this;
    }

    /**
     * The default fee level. Valid values are &#x60;MEDIUM&#x60; and &#x60;HIGH&#x60;.
     *
     * @return feeLevel
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public FeeLevelEnum getFeeLevel() {
        return feeLevel;
    }

    @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFeeLevel(@jakarta.annotation.Nonnull FeeLevelEnum feeLevel) {
        this.feeLevel = feeLevel;
    }

    public CreateNcwConnectionRequest uri(@jakarta.annotation.Nonnull String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * The WalletConnect uri provided by the dapp.
     *
     * @return uri
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getUri() {
        return uri;
    }

    @JsonProperty(JSON_PROPERTY_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUri(@jakarta.annotation.Nonnull String uri) {
        this.uri = uri;
    }

    public CreateNcwConnectionRequest chainIds(@jakarta.annotation.Nullable List<String> chainIds) {
        this.chainIds = chainIds;
        return this;
    }

    public CreateNcwConnectionRequest addChainIdsItem(String chainIdsItem) {
        if (this.chainIds == null) {
            this.chainIds = new ArrayList<>();
        }
        this.chainIds.add(chainIdsItem);
        return this;
    }

    /**
     * The IDs of the blockchain networks used in the Web3 connection (Currently required in V1
     * connections only).
     *
     * @return chainIds
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CHAIN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getChainIds() {
        return chainIds;
    }

    @JsonProperty(JSON_PROPERTY_CHAIN_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChainIds(@jakarta.annotation.Nullable List<String> chainIds) {
        this.chainIds = chainIds;
    }

    /** Return true if this CreateNcwConnectionRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateNcwConnectionRequest createNcwConnectionRequest = (CreateNcwConnectionRequest) o;
        return Objects.equals(this.ncwId, createNcwConnectionRequest.ncwId)
                && Objects.equals(this.ncwAccountId, createNcwConnectionRequest.ncwAccountId)
                && Objects.equals(this.feeLevel, createNcwConnectionRequest.feeLevel)
                && Objects.equals(this.uri, createNcwConnectionRequest.uri)
                && Objects.equals(this.chainIds, createNcwConnectionRequest.chainIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ncwId, ncwAccountId, feeLevel, uri, chainIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateNcwConnectionRequest {\n");
        sb.append("    ncwId: ").append(toIndentedString(ncwId)).append("\n");
        sb.append("    ncwAccountId: ").append(toIndentedString(ncwAccountId)).append("\n");
        sb.append("    feeLevel: ").append(toIndentedString(feeLevel)).append("\n");
        sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
        sb.append("    chainIds: ").append(toIndentedString(chainIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `ncwId` to the URL query string
        if (getNcwId() != null) {
            joiner.add(
                    String.format(
                            "%sncwId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNcwId()))));
        }

        // add `ncwAccountId` to the URL query string
        if (getNcwAccountId() != null) {
            joiner.add(
                    String.format(
                            "%sncwAccountId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNcwAccountId()))));
        }

        // add `feeLevel` to the URL query string
        if (getFeeLevel() != null) {
            joiner.add(
                    String.format(
                            "%sfeeLevel%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getFeeLevel()))));
        }

        // add `uri` to the URL query string
        if (getUri() != null) {
            joiner.add(
                    String.format(
                            "%suri%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getUri()))));
        }

        // add `chainIds` to the URL query string
        if (getChainIds() != null) {
            for (int i = 0; i < getChainIds().size(); i++) {
                joiner.add(
                        String.format(
                                "%schainIds%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getChainIds().get(i)))));
            }
        }

        return joiner.toString();
    }
}
