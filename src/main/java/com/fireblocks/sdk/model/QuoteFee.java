/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** QuoteFee */
@JsonPropertyOrder({
    QuoteFee.JSON_PROPERTY_NETWORK_EXECUTION_FEE,
    QuoteFee.JSON_PROPERTY_NETWORK_FEE_ASSET_ID,
    QuoteFee.JSON_PROPERTY_PROVIDER_FEE,
    QuoteFee.JSON_PROPERTY_PROVIDER_FEE_ASSET_ID,
    QuoteFee.JSON_PROPERTY_PROVIDER_FEE_RATE,
    QuoteFee.JSON_PROPERTY_NETWORK_APPROVE_FEE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class QuoteFee {
    public static final String JSON_PROPERTY_NETWORK_EXECUTION_FEE = "networkExecutionFee";
    private String networkExecutionFee;

    public static final String JSON_PROPERTY_NETWORK_FEE_ASSET_ID = "networkFeeAssetId";
    private String networkFeeAssetId;

    public static final String JSON_PROPERTY_PROVIDER_FEE = "providerFee";
    private String providerFee;

    public static final String JSON_PROPERTY_PROVIDER_FEE_ASSET_ID = "providerFeeAssetId";
    private String providerFeeAssetId;

    public static final String JSON_PROPERTY_PROVIDER_FEE_RATE = "providerFeeRate";
    private BigDecimal providerFeeRate;

    public static final String JSON_PROPERTY_NETWORK_APPROVE_FEE = "networkApproveFee";
    private String networkApproveFee;

    public QuoteFee() {}

    public QuoteFee networkExecutionFee(String networkExecutionFee) {
        this.networkExecutionFee = networkExecutionFee;
        return this;
    }

    /**
     * The gas fee in the asset unit.
     *
     * @return networkExecutionFee
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NETWORK_EXECUTION_FEE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getNetworkExecutionFee() {
        return networkExecutionFee;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_EXECUTION_FEE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNetworkExecutionFee(String networkExecutionFee) {
        this.networkExecutionFee = networkExecutionFee;
    }

    public QuoteFee networkFeeAssetId(String networkFeeAssetId) {
        this.networkFeeAssetId = networkFeeAssetId;
        return this;
    }

    /**
     * The network fee in Fireblocks asset representation
     *
     * @return networkFeeAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NETWORK_FEE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getNetworkFeeAssetId() {
        return networkFeeAssetId;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_FEE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNetworkFeeAssetId(String networkFeeAssetId) {
        this.networkFeeAssetId = networkFeeAssetId;
    }

    public QuoteFee providerFee(String providerFee) {
        this.providerFee = providerFee;
        return this;
    }

    /**
     * The provider fee in the asset unit.
     *
     * @return providerFee
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getProviderFee() {
        return providerFee;
    }

    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProviderFee(String providerFee) {
        this.providerFee = providerFee;
    }

    public QuoteFee providerFeeAssetId(String providerFeeAssetId) {
        this.providerFeeAssetId = providerFeeAssetId;
        return this;
    }

    /**
     * The provider fee in Fireblocks asset representation
     *
     * @return providerFeeAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getProviderFeeAssetId() {
        return providerFeeAssetId;
    }

    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProviderFeeAssetId(String providerFeeAssetId) {
        this.providerFeeAssetId = providerFeeAssetId;
    }

    public QuoteFee providerFeeRate(BigDecimal providerFeeRate) {
        this.providerFeeRate = providerFeeRate;
        return this;
    }

    /**
     * Percentages of the provider fee out of the gross amount
     *
     * @return providerFeeRate
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE_RATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public BigDecimal getProviderFeeRate() {
        return providerFeeRate;
    }

    @JsonProperty(JSON_PROPERTY_PROVIDER_FEE_RATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProviderFeeRate(BigDecimal providerFeeRate) {
        this.providerFeeRate = providerFeeRate;
    }

    public QuoteFee networkApproveFee(String networkApproveFee) {
        this.networkApproveFee = networkApproveFee;
        return this;
    }

    /**
     * The gas fee in the asset unit.
     *
     * @return networkApproveFee
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NETWORK_APPROVE_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNetworkApproveFee() {
        return networkApproveFee;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_APPROVE_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNetworkApproveFee(String networkApproveFee) {
        this.networkApproveFee = networkApproveFee;
    }

    /** Return true if this QuoteFee object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        QuoteFee quoteFee = (QuoteFee) o;
        return Objects.equals(this.networkExecutionFee, quoteFee.networkExecutionFee)
                && Objects.equals(this.networkFeeAssetId, quoteFee.networkFeeAssetId)
                && Objects.equals(this.providerFee, quoteFee.providerFee)
                && Objects.equals(this.providerFeeAssetId, quoteFee.providerFeeAssetId)
                && Objects.equals(this.providerFeeRate, quoteFee.providerFeeRate)
                && Objects.equals(this.networkApproveFee, quoteFee.networkApproveFee);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                networkExecutionFee,
                networkFeeAssetId,
                providerFee,
                providerFeeAssetId,
                providerFeeRate,
                networkApproveFee);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class QuoteFee {\n");
        sb.append("    networkExecutionFee: ")
                .append(toIndentedString(networkExecutionFee))
                .append("\n");
        sb.append("    networkFeeAssetId: ")
                .append(toIndentedString(networkFeeAssetId))
                .append("\n");
        sb.append("    providerFee: ").append(toIndentedString(providerFee)).append("\n");
        sb.append("    providerFeeAssetId: ")
                .append(toIndentedString(providerFeeAssetId))
                .append("\n");
        sb.append("    providerFeeRate: ").append(toIndentedString(providerFeeRate)).append("\n");
        sb.append("    networkApproveFee: ")
                .append(toIndentedString(networkApproveFee))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `networkExecutionFee` to the URL query string
        if (getNetworkExecutionFee() != null) {
            joiner.add(
                    String.format(
                            "%snetworkExecutionFee%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getNetworkExecutionFee()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `networkFeeAssetId` to the URL query string
        if (getNetworkFeeAssetId() != null) {
            joiner.add(
                    String.format(
                            "%snetworkFeeAssetId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getNetworkFeeAssetId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `providerFee` to the URL query string
        if (getProviderFee() != null) {
            joiner.add(
                    String.format(
                            "%sproviderFee%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getProviderFee()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `providerFeeAssetId` to the URL query string
        if (getProviderFeeAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sproviderFeeAssetId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getProviderFeeAssetId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `providerFeeRate` to the URL query string
        if (getProviderFeeRate() != null) {
            joiner.add(
                    String.format(
                            "%sproviderFeeRate%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getProviderFeeRate()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `networkApproveFee` to the URL query string
        if (getNetworkApproveFee() != null) {
            joiner.add(
                    String.format(
                            "%snetworkApproveFee%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getNetworkApproveFee()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
