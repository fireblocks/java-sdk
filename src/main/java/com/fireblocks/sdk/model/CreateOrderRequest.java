/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateOrderRequest */
@JsonPropertyOrder({
    CreateOrderRequest.JSON_PROPERTY_VIA,
    CreateOrderRequest.JSON_PROPERTY_EXECUTION_REQUEST_DETAILS,
    CreateOrderRequest.JSON_PROPERTY_SETTLEMENT,
    CreateOrderRequest.JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION,
    CreateOrderRequest.JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID,
    CreateOrderRequest.JSON_PROPERTY_NOTE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class CreateOrderRequest {
    public static final String JSON_PROPERTY_VIA = "via";
    @jakarta.annotation.Nonnull private AccessType via;

    public static final String JSON_PROPERTY_EXECUTION_REQUEST_DETAILS = "executionRequestDetails";
    @jakarta.annotation.Nonnull private ExecutionRequestDetails executionRequestDetails;

    public static final String JSON_PROPERTY_SETTLEMENT = "settlement";
    @jakarta.annotation.Nonnull private Settlement settlement;

    public static final String JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION =
            "participantsIdentification";
    @jakarta.annotation.Nullable private ParticipantsIdentification participantsIdentification;

    public static final String JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID =
            "customerInternalReferenceId";
    @jakarta.annotation.Nullable private String customerInternalReferenceId;

    public static final String JSON_PROPERTY_NOTE = "note";
    @jakarta.annotation.Nullable private String note;

    public CreateOrderRequest() {}

    @JsonCreator
    public CreateOrderRequest(
            @JsonProperty(value = JSON_PROPERTY_VIA, required = true) AccessType via,
            @JsonProperty(value = JSON_PROPERTY_EXECUTION_REQUEST_DETAILS, required = true)
                    ExecutionRequestDetails executionRequestDetails,
            @JsonProperty(value = JSON_PROPERTY_SETTLEMENT, required = true)
                    Settlement settlement) {
        this.via = via;
        this.executionRequestDetails = executionRequestDetails;
        this.settlement = settlement;
    }

    public CreateOrderRequest via(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
        return this;
    }

    /**
     * Get via
     *
     * @return via
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AccessType getVia() {
        return via;
    }

    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVia(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
    }

    public CreateOrderRequest executionRequestDetails(
            @jakarta.annotation.Nonnull ExecutionRequestDetails executionRequestDetails) {
        this.executionRequestDetails = executionRequestDetails;
        return this;
    }

    /**
     * Get executionRequestDetails
     *
     * @return executionRequestDetails
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_EXECUTION_REQUEST_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ExecutionRequestDetails getExecutionRequestDetails() {
        return executionRequestDetails;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_REQUEST_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExecutionRequestDetails(
            @jakarta.annotation.Nonnull ExecutionRequestDetails executionRequestDetails) {
        this.executionRequestDetails = executionRequestDetails;
    }

    public CreateOrderRequest settlement(@jakarta.annotation.Nonnull Settlement settlement) {
        this.settlement = settlement;
        return this;
    }

    /**
     * Get settlement
     *
     * @return settlement
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SETTLEMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Settlement getSettlement() {
        return settlement;
    }

    @JsonProperty(JSON_PROPERTY_SETTLEMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSettlement(@jakarta.annotation.Nonnull Settlement settlement) {
        this.settlement = settlement;
    }

    public CreateOrderRequest participantsIdentification(
            @jakarta.annotation.Nullable ParticipantsIdentification participantsIdentification) {
        this.participantsIdentification = participantsIdentification;
        return this;
    }

    /**
     * Get participantsIdentification
     *
     * @return participantsIdentification
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ParticipantsIdentification getParticipantsIdentification() {
        return participantsIdentification;
    }

    @JsonProperty(JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParticipantsIdentification(
            @jakarta.annotation.Nullable ParticipantsIdentification participantsIdentification) {
        this.participantsIdentification = participantsIdentification;
    }

    public CreateOrderRequest customerInternalReferenceId(
            @jakarta.annotation.Nullable String customerInternalReferenceId) {
        this.customerInternalReferenceId = customerInternalReferenceId;
        return this;
    }

    /**
     * Internal reference ID for the customer
     *
     * @return customerInternalReferenceId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCustomerInternalReferenceId() {
        return customerInternalReferenceId;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerInternalReferenceId(
            @jakarta.annotation.Nullable String customerInternalReferenceId) {
        this.customerInternalReferenceId = customerInternalReferenceId;
    }

    public CreateOrderRequest note(@jakarta.annotation.Nullable String note) {
        this.note = note;
        return this;
    }

    /**
     * Optional note for the order
     *
     * @return note
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNote() {
        return note;
    }

    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNote(@jakarta.annotation.Nullable String note) {
        this.note = note;
    }

    /** Return true if this CreateOrderRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateOrderRequest createOrderRequest = (CreateOrderRequest) o;
        return Objects.equals(this.via, createOrderRequest.via)
                && Objects.equals(
                        this.executionRequestDetails, createOrderRequest.executionRequestDetails)
                && Objects.equals(this.settlement, createOrderRequest.settlement)
                && Objects.equals(
                        this.participantsIdentification,
                        createOrderRequest.participantsIdentification)
                && Objects.equals(
                        this.customerInternalReferenceId,
                        createOrderRequest.customerInternalReferenceId)
                && Objects.equals(this.note, createOrderRequest.note);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                via,
                executionRequestDetails,
                settlement,
                participantsIdentification,
                customerInternalReferenceId,
                note);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateOrderRequest {\n");
        sb.append("    via: ").append(toIndentedString(via)).append("\n");
        sb.append("    executionRequestDetails: ")
                .append(toIndentedString(executionRequestDetails))
                .append("\n");
        sb.append("    settlement: ").append(toIndentedString(settlement)).append("\n");
        sb.append("    participantsIdentification: ")
                .append(toIndentedString(participantsIdentification))
                .append("\n");
        sb.append("    customerInternalReferenceId: ")
                .append(toIndentedString(customerInternalReferenceId))
                .append("\n");
        sb.append("    note: ").append(toIndentedString(note)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `via` to the URL query string
        if (getVia() != null) {
            joiner.add(getVia().toUrlQueryString(prefix + "via" + suffix));
        }

        // add `executionRequestDetails` to the URL query string
        if (getExecutionRequestDetails() != null) {
            joiner.add(
                    getExecutionRequestDetails()
                            .toUrlQueryString(prefix + "executionRequestDetails" + suffix));
        }

        // add `settlement` to the URL query string
        if (getSettlement() != null) {
            joiner.add(getSettlement().toUrlQueryString(prefix + "settlement" + suffix));
        }

        // add `participantsIdentification` to the URL query string
        if (getParticipantsIdentification() != null) {
            joiner.add(
                    getParticipantsIdentification()
                            .toUrlQueryString(prefix + "participantsIdentification" + suffix));
        }

        // add `customerInternalReferenceId` to the URL query string
        if (getCustomerInternalReferenceId() != null) {
            joiner.add(
                    String.format(
                            "%scustomerInternalReferenceId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getCustomerInternalReferenceId()))));
        }

        // add `note` to the URL query string
        if (getNote() != null) {
            joiner.add(
                    String.format(
                            "%snote%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNote()))));
        }

        return joiner.toString();
    }
}
