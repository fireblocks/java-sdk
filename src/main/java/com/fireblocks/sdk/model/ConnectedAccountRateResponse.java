/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** ConnectedAccountRateResponse */
@JsonPropertyOrder({
    ConnectedAccountRateResponse.JSON_PROPERTY_ACCOUNT_ID,
    ConnectedAccountRateResponse.JSON_PROPERTY_BASE_ASSET_ID,
    ConnectedAccountRateResponse.JSON_PROPERTY_QUOTE_ASSET_ID,
    ConnectedAccountRateResponse.JSON_PROPERTY_RATE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ConnectedAccountRateResponse {
    public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
    @jakarta.annotation.Nonnull private String accountId;

    public static final String JSON_PROPERTY_BASE_ASSET_ID = "baseAssetId";
    @jakarta.annotation.Nonnull private String baseAssetId;

    public static final String JSON_PROPERTY_QUOTE_ASSET_ID = "quoteAssetId";
    @jakarta.annotation.Nonnull private String quoteAssetId;

    public static final String JSON_PROPERTY_RATE = "rate";
    @jakarta.annotation.Nonnull private String rate;

    public ConnectedAccountRateResponse() {}

    @JsonCreator
    public ConnectedAccountRateResponse(
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_ID, required = true) String accountId,
            @JsonProperty(value = JSON_PROPERTY_BASE_ASSET_ID, required = true) String baseAssetId,
            @JsonProperty(value = JSON_PROPERTY_QUOTE_ASSET_ID, required = true)
                    String quoteAssetId,
            @JsonProperty(value = JSON_PROPERTY_RATE, required = true) String rate) {
        this.accountId = accountId;
        this.baseAssetId = baseAssetId;
        this.quoteAssetId = quoteAssetId;
        this.rate = rate;
    }

    public ConnectedAccountRateResponse accountId(@jakarta.annotation.Nonnull String accountId) {
        this.accountId = accountId;
        return this;
    }

    /**
     * The ID of the account that generated the quote.
     *
     * @return accountId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountId() {
        return accountId;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountId(@jakarta.annotation.Nonnull String accountId) {
        this.accountId = accountId;
    }

    public ConnectedAccountRateResponse baseAssetId(
            @jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
        return this;
    }

    /**
     * The source asset identifier
     *
     * @return baseAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBaseAssetId() {
        return baseAssetId;
    }

    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBaseAssetId(@jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
    }

    public ConnectedAccountRateResponse quoteAssetId(
            @jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
        return this;
    }

    /**
     * The target asset identifier
     *
     * @return quoteAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getQuoteAssetId() {
        return quoteAssetId;
    }

    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setQuoteAssetId(@jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
    }

    public ConnectedAccountRateResponse rate(@jakarta.annotation.Nonnull String rate) {
        this.rate = rate;
        return this;
    }

    /**
     * The exchange rate value
     *
     * @return rate
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getRate() {
        return rate;
    }

    @JsonProperty(JSON_PROPERTY_RATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRate(@jakarta.annotation.Nonnull String rate) {
        this.rate = rate;
    }

    /** Return true if this ConnectedAccountRateResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConnectedAccountRateResponse connectedAccountRateResponse =
                (ConnectedAccountRateResponse) o;
        return Objects.equals(this.accountId, connectedAccountRateResponse.accountId)
                && Objects.equals(this.baseAssetId, connectedAccountRateResponse.baseAssetId)
                && Objects.equals(this.quoteAssetId, connectedAccountRateResponse.quoteAssetId)
                && Objects.equals(this.rate, connectedAccountRateResponse.rate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountId, baseAssetId, quoteAssetId, rate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConnectedAccountRateResponse {\n");
        sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
        sb.append("    baseAssetId: ").append(toIndentedString(baseAssetId)).append("\n");
        sb.append("    quoteAssetId: ").append(toIndentedString(quoteAssetId)).append("\n");
        sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `accountId` to the URL query string
        if (getAccountId() != null) {
            joiner.add(
                    String.format(
                            "%saccountId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAccountId()))));
        }

        // add `baseAssetId` to the URL query string
        if (getBaseAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAssetId()))));
        }

        // add `quoteAssetId` to the URL query string
        if (getQuoteAssetId() != null) {
            joiner.add(
                    String.format(
                            "%squoteAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getQuoteAssetId()))));
        }

        // add `rate` to the URL query string
        if (getRate() != null) {
            joiner.add(
                    String.format(
                            "%srate%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getRate()))));
        }

        return joiner.toString();
    }
}
