/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.StringJoiner;

/** OrderSummary */
@JsonPropertyOrder({
    OrderSummary.JSON_PROPERTY_ID,
    OrderSummary.JSON_PROPERTY_VIA,
    OrderSummary.JSON_PROPERTY_SIDE,
    OrderSummary.JSON_PROPERTY_BASE_AMOUNT,
    OrderSummary.JSON_PROPERTY_QUOTE_AMOUNT,
    OrderSummary.JSON_PROPERTY_BASE_ASSET_ID,
    OrderSummary.JSON_PROPERTY_QUOTE_ASSET_ID,
    OrderSummary.JSON_PROPERTY_STATUS,
    OrderSummary.JSON_PROPERTY_DESTINATION,
    OrderSummary.JSON_PROPERTY_SOURCE,
    OrderSummary.JSON_PROPERTY_CREATED_AT
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class OrderSummary {
    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_VIA = "via";
    @jakarta.annotation.Nonnull private AccessType via;

    /** Side of the order */
    public enum SideEnum {
        BUY(String.valueOf("BUY")),

        SELL(String.valueOf("SELL"));

        private String value;

        SideEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static SideEnum fromValue(String value) {
            for (SideEnum b : SideEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_SIDE = "side";
    @jakarta.annotation.Nonnull private SideEnum side;

    public static final String JSON_PROPERTY_BASE_AMOUNT = "baseAmount";
    @jakarta.annotation.Nonnull private String baseAmount;

    public static final String JSON_PROPERTY_QUOTE_AMOUNT = "quoteAmount";
    @jakarta.annotation.Nullable private String quoteAmount;

    public static final String JSON_PROPERTY_BASE_ASSET_ID = "baseAssetId";
    @jakarta.annotation.Nonnull private String baseAssetId;

    public static final String JSON_PROPERTY_QUOTE_ASSET_ID = "quoteAssetId";
    @jakarta.annotation.Nonnull private String quoteAssetId;

    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nonnull private OrderStatus status;

    public static final String JSON_PROPERTY_DESTINATION = "destination";
    @jakarta.annotation.Nonnull private AccountReference destination;

    public static final String JSON_PROPERTY_SOURCE = "source";
    @jakarta.annotation.Nullable private SettlementSourceAccount source;

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @jakarta.annotation.Nonnull private OffsetDateTime createdAt;

    public OrderSummary() {}

    @JsonCreator
    public OrderSummary(
            @JsonProperty(value = JSON_PROPERTY_ID, required = true) String id,
            @JsonProperty(value = JSON_PROPERTY_VIA, required = true) AccessType via,
            @JsonProperty(value = JSON_PROPERTY_SIDE, required = true) SideEnum side,
            @JsonProperty(value = JSON_PROPERTY_BASE_AMOUNT, required = true) String baseAmount,
            @JsonProperty(value = JSON_PROPERTY_BASE_ASSET_ID, required = true) String baseAssetId,
            @JsonProperty(value = JSON_PROPERTY_QUOTE_ASSET_ID, required = true)
                    String quoteAssetId,
            @JsonProperty(value = JSON_PROPERTY_STATUS, required = true) OrderStatus status,
            @JsonProperty(value = JSON_PROPERTY_DESTINATION, required = true)
                    AccountReference destination,
            @JsonProperty(value = JSON_PROPERTY_CREATED_AT, required = true)
                    OffsetDateTime createdAt) {
        this.id = id;
        this.via = via;
        this.side = side;
        this.baseAmount = baseAmount;
        this.baseAssetId = baseAssetId;
        this.quoteAssetId = quoteAssetId;
        this.status = status;
        this.destination = destination;
        this.createdAt = createdAt;
    }

    public OrderSummary id(@jakarta.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@jakarta.annotation.Nonnull String id) {
        this.id = id;
    }

    public OrderSummary via(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
        return this;
    }

    /**
     * Get via
     *
     * @return via
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AccessType getVia() {
        return via;
    }

    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVia(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
    }

    public OrderSummary side(@jakarta.annotation.Nonnull SideEnum side) {
        this.side = side;
        return this;
    }

    /**
     * Side of the order
     *
     * @return side
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SIDE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public SideEnum getSide() {
        return side;
    }

    @JsonProperty(JSON_PROPERTY_SIDE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSide(@jakarta.annotation.Nonnull SideEnum side) {
        this.side = side;
    }

    public OrderSummary baseAmount(@jakarta.annotation.Nonnull String baseAmount) {
        this.baseAmount = baseAmount;
        return this;
    }

    /**
     * Get baseAmount
     *
     * @return baseAmount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BASE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBaseAmount() {
        return baseAmount;
    }

    @JsonProperty(JSON_PROPERTY_BASE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBaseAmount(@jakarta.annotation.Nonnull String baseAmount) {
        this.baseAmount = baseAmount;
    }

    public OrderSummary quoteAmount(@jakarta.annotation.Nullable String quoteAmount) {
        this.quoteAmount = quoteAmount;
        return this;
    }

    /**
     * Get quoteAmount
     *
     * @return quoteAmount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_QUOTE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getQuoteAmount() {
        return quoteAmount;
    }

    @JsonProperty(JSON_PROPERTY_QUOTE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQuoteAmount(@jakarta.annotation.Nullable String quoteAmount) {
        this.quoteAmount = quoteAmount;
    }

    public OrderSummary baseAssetId(@jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
        return this;
    }

    /**
     * Get baseAssetId
     *
     * @return baseAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBaseAssetId() {
        return baseAssetId;
    }

    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBaseAssetId(@jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
    }

    public OrderSummary quoteAssetId(@jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
        return this;
    }

    /**
     * Get quoteAssetId
     *
     * @return quoteAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getQuoteAssetId() {
        return quoteAssetId;
    }

    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setQuoteAssetId(@jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
    }

    public OrderSummary status(@jakarta.annotation.Nonnull OrderStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OrderStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(@jakarta.annotation.Nonnull OrderStatus status) {
        this.status = status;
    }

    public OrderSummary destination(@jakarta.annotation.Nonnull AccountReference destination) {
        this.destination = destination;
        return this;
    }

    /**
     * Get destination
     *
     * @return destination
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AccountReference getDestination() {
        return destination;
    }

    @JsonProperty(JSON_PROPERTY_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDestination(@jakarta.annotation.Nonnull AccountReference destination) {
        this.destination = destination;
    }

    public OrderSummary source(@jakarta.annotation.Nullable SettlementSourceAccount source) {
        this.source = source;
        return this;
    }

    /**
     * Get source
     *
     * @return source
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public SettlementSourceAccount getSource() {
        return source;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSource(@jakarta.annotation.Nullable SettlementSourceAccount source) {
        this.source = source;
    }

    public OrderSummary createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /** Return true if this OrderSummary object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderSummary orderSummary = (OrderSummary) o;
        return Objects.equals(this.id, orderSummary.id)
                && Objects.equals(this.via, orderSummary.via)
                && Objects.equals(this.side, orderSummary.side)
                && Objects.equals(this.baseAmount, orderSummary.baseAmount)
                && Objects.equals(this.quoteAmount, orderSummary.quoteAmount)
                && Objects.equals(this.baseAssetId, orderSummary.baseAssetId)
                && Objects.equals(this.quoteAssetId, orderSummary.quoteAssetId)
                && Objects.equals(this.status, orderSummary.status)
                && Objects.equals(this.destination, orderSummary.destination)
                && Objects.equals(this.source, orderSummary.source)
                && Objects.equals(this.createdAt, orderSummary.createdAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                id,
                via,
                side,
                baseAmount,
                quoteAmount,
                baseAssetId,
                quoteAssetId,
                status,
                destination,
                source,
                createdAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderSummary {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    via: ").append(toIndentedString(via)).append("\n");
        sb.append("    side: ").append(toIndentedString(side)).append("\n");
        sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
        sb.append("    quoteAmount: ").append(toIndentedString(quoteAmount)).append("\n");
        sb.append("    baseAssetId: ").append(toIndentedString(baseAssetId)).append("\n");
        sb.append("    quoteAssetId: ").append(toIndentedString(quoteAssetId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `via` to the URL query string
        if (getVia() != null) {
            joiner.add(getVia().toUrlQueryString(prefix + "via" + suffix));
        }

        // add `side` to the URL query string
        if (getSide() != null) {
            joiner.add(
                    String.format(
                            "%sside%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSide()))));
        }

        // add `baseAmount` to the URL query string
        if (getBaseAmount() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAmount()))));
        }

        // add `quoteAmount` to the URL query string
        if (getQuoteAmount() != null) {
            joiner.add(
                    String.format(
                            "%squoteAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getQuoteAmount()))));
        }

        // add `baseAssetId` to the URL query string
        if (getBaseAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAssetId()))));
        }

        // add `quoteAssetId` to the URL query string
        if (getQuoteAssetId() != null) {
            joiner.add(
                    String.format(
                            "%squoteAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getQuoteAssetId()))));
        }

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(
                    String.format(
                            "%sstatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
        }

        // add `destination` to the URL query string
        if (getDestination() != null) {
            joiner.add(getDestination().toUrlQueryString(prefix + "destination" + suffix));
        }

        // add `source` to the URL query string
        if (getSource() != null) {
            joiner.add(getSource().toUrlQueryString(prefix + "source" + suffix));
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
        }

        return joiner.toString();
    }
}
