/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** TransferOperationExecutionParams */
@JsonPropertyOrder({
    TransferOperationExecutionParams.JSON_PROPERTY_CONFIG_OPERATION_ID,
    TransferOperationExecutionParams.JSON_PROPERTY_EXECUTION_PARAMS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class TransferOperationExecutionParams {
    public static final String JSON_PROPERTY_CONFIG_OPERATION_ID = "configOperationId";
    @jakarta.annotation.Nonnull private String configOperationId;

    public static final String JSON_PROPERTY_EXECUTION_PARAMS = "executionParams";

    @jakarta.annotation.Nullable
    private TransferOperationExecutionParamsExecutionParams executionParams;

    public TransferOperationExecutionParams() {}

    @JsonCreator
    public TransferOperationExecutionParams(
            @JsonProperty(value = JSON_PROPERTY_CONFIG_OPERATION_ID, required = true)
                    String configOperationId) {
        this.configOperationId = configOperationId;
    }

    public TransferOperationExecutionParams configOperationId(
            @jakarta.annotation.Nonnull String configOperationId) {
        this.configOperationId = configOperationId;
        return this;
    }

    /**
     * Get configOperationId
     *
     * @return configOperationId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CONFIG_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getConfigOperationId() {
        return configOperationId;
    }

    @JsonProperty(JSON_PROPERTY_CONFIG_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setConfigOperationId(@jakarta.annotation.Nonnull String configOperationId) {
        this.configOperationId = configOperationId;
    }

    public TransferOperationExecutionParams executionParams(
            @jakarta.annotation.Nullable
                    TransferOperationExecutionParamsExecutionParams executionParams) {
        this.executionParams = executionParams;
        return this;
    }

    /**
     * Get executionParams
     *
     * @return executionParams
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_PARAMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TransferOperationExecutionParamsExecutionParams getExecutionParams() {
        return executionParams;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_PARAMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionParams(
            @jakarta.annotation.Nullable
                    TransferOperationExecutionParamsExecutionParams executionParams) {
        this.executionParams = executionParams;
    }

    /** Return true if this TransferOperationExecutionParams object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TransferOperationExecutionParams transferOperationExecutionParams =
                (TransferOperationExecutionParams) o;
        return Objects.equals(
                        this.configOperationId, transferOperationExecutionParams.configOperationId)
                && Objects.equals(
                        this.executionParams, transferOperationExecutionParams.executionParams);
    }

    @Override
    public int hashCode() {
        return Objects.hash(configOperationId, executionParams);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TransferOperationExecutionParams {\n");
        sb.append("    configOperationId: ")
                .append(toIndentedString(configOperationId))
                .append("\n");
        sb.append("    executionParams: ").append(toIndentedString(executionParams)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `configOperationId` to the URL query string
        if (getConfigOperationId() != null) {
            joiner.add(
                    String.format(
                            "%sconfigOperationId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getConfigOperationId()))));
        }

        // add `executionParams` to the URL query string
        if (getExecutionParams() != null) {
            joiner.add(getExecutionParams().toUrlQueryString(prefix + "executionParams" + suffix));
        }

        return joiner.toString();
    }
}
