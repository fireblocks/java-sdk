/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** ConnectedAccountTotalBalance */
@JsonPropertyOrder({
    ConnectedAccountTotalBalance.JSON_PROPERTY_AMOUNT,
    ConnectedAccountTotalBalance.JSON_PROPERTY_DENOMINATED_ASSET_ID,
    ConnectedAccountTotalBalance.JSON_PROPERTY_HAS_FULL_ASSET_COVERAGE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ConnectedAccountTotalBalance {
    public static final String JSON_PROPERTY_AMOUNT = "amount";
    @jakarta.annotation.Nonnull private String amount;

    public static final String JSON_PROPERTY_DENOMINATED_ASSET_ID = "denominatedAssetId";
    @jakarta.annotation.Nonnull private String denominatedAssetId;

    public static final String JSON_PROPERTY_HAS_FULL_ASSET_COVERAGE = "hasFullAssetCoverage";
    @jakarta.annotation.Nonnull private Boolean hasFullAssetCoverage = false;

    public ConnectedAccountTotalBalance() {}

    @JsonCreator
    public ConnectedAccountTotalBalance(
            @JsonProperty(value = JSON_PROPERTY_AMOUNT, required = true) String amount,
            @JsonProperty(value = JSON_PROPERTY_DENOMINATED_ASSET_ID, required = true)
                    String denominatedAssetId,
            @JsonProperty(value = JSON_PROPERTY_HAS_FULL_ASSET_COVERAGE, required = true)
                    Boolean hasFullAssetCoverage) {
        this.amount = amount;
        this.denominatedAssetId = denominatedAssetId;
        this.hasFullAssetCoverage = hasFullAssetCoverage;
    }

    public ConnectedAccountTotalBalance amount(@jakarta.annotation.Nonnull String amount) {
        this.amount = amount;
        return this;
    }

    /**
     * The denominated currency value of the account.
     *
     * @return amount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAmount() {
        return amount;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAmount(@jakarta.annotation.Nonnull String amount) {
        this.amount = amount;
    }

    public ConnectedAccountTotalBalance denominatedAssetId(
            @jakarta.annotation.Nonnull String denominatedAssetId) {
        this.denominatedAssetId = denominatedAssetId;
        return this;
    }

    /**
     * The asset ID of the total balance.
     *
     * @return denominatedAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DENOMINATED_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDenominatedAssetId() {
        return denominatedAssetId;
    }

    @JsonProperty(JSON_PROPERTY_DENOMINATED_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDenominatedAssetId(@jakarta.annotation.Nonnull String denominatedAssetId) {
        this.denominatedAssetId = denominatedAssetId;
    }

    public ConnectedAccountTotalBalance hasFullAssetCoverage(
            @jakarta.annotation.Nonnull Boolean hasFullAssetCoverage) {
        this.hasFullAssetCoverage = hasFullAssetCoverage;
        return this;
    }

    /**
     * Indicates whether the total amount represents the complete balance of all assets in the
     * account. When true, all asset balances have been successfully converted to the denominated
     * currency. When false, some assets could not be included in the total due to missing exchange
     * rates or non-convertible assets.
     *
     * @return hasFullAssetCoverage
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HAS_FULL_ASSET_COVERAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getHasFullAssetCoverage() {
        return hasFullAssetCoverage;
    }

    @JsonProperty(JSON_PROPERTY_HAS_FULL_ASSET_COVERAGE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHasFullAssetCoverage(@jakarta.annotation.Nonnull Boolean hasFullAssetCoverage) {
        this.hasFullAssetCoverage = hasFullAssetCoverage;
    }

    /** Return true if this ConnectedAccountTotalBalance object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConnectedAccountTotalBalance connectedAccountTotalBalance =
                (ConnectedAccountTotalBalance) o;
        return Objects.equals(this.amount, connectedAccountTotalBalance.amount)
                && Objects.equals(
                        this.denominatedAssetId, connectedAccountTotalBalance.denominatedAssetId)
                && Objects.equals(
                        this.hasFullAssetCoverage,
                        connectedAccountTotalBalance.hasFullAssetCoverage);
    }

    @Override
    public int hashCode() {
        return Objects.hash(amount, denominatedAssetId, hasFullAssetCoverage);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConnectedAccountTotalBalance {\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    denominatedAssetId: ")
                .append(toIndentedString(denominatedAssetId))
                .append("\n");
        sb.append("    hasFullAssetCoverage: ")
                .append(toIndentedString(hasFullAssetCoverage))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `amount` to the URL query string
        if (getAmount() != null) {
            joiner.add(
                    String.format(
                            "%samount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
        }

        // add `denominatedAssetId` to the URL query string
        if (getDenominatedAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sdenominatedAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDenominatedAssetId()))));
        }

        // add `hasFullAssetCoverage` to the URL query string
        if (getHasFullAssetCoverage() != null) {
            joiner.add(
                    String.format(
                            "%shasFullAssetCoverage%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getHasFullAssetCoverage()))));
        }

        return joiner.toString();
    }
}
