/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** TravelRuleGeographicAddress */
@JsonPropertyOrder({
    TravelRuleGeographicAddress.JSON_PROPERTY_STREET_NAME,
    TravelRuleGeographicAddress.JSON_PROPERTY_TOWN_NAME,
    TravelRuleGeographicAddress.JSON_PROPERTY_COUNTRY,
    TravelRuleGeographicAddress.JSON_PROPERTY_BUILDING_NUMBER,
    TravelRuleGeographicAddress.JSON_PROPERTY_POST_CODE,
    TravelRuleGeographicAddress.JSON_PROPERTY_ADDRESS_TYPE,
    TravelRuleGeographicAddress.JSON_PROPERTY_DEPARTMENT,
    TravelRuleGeographicAddress.JSON_PROPERTY_SUB_DEPARTMENT,
    TravelRuleGeographicAddress.JSON_PROPERTY_BUILDING_NAME,
    TravelRuleGeographicAddress.JSON_PROPERTY_FLOOR,
    TravelRuleGeographicAddress.JSON_PROPERTY_POST_BOX,
    TravelRuleGeographicAddress.JSON_PROPERTY_ROOM,
    TravelRuleGeographicAddress.JSON_PROPERTY_TOWN_LOCATION_NAME,
    TravelRuleGeographicAddress.JSON_PROPERTY_DISTRICT_NAME,
    TravelRuleGeographicAddress.JSON_PROPERTY_COUNTRY_SUB_DIVISION,
    TravelRuleGeographicAddress.JSON_PROPERTY_ADDRESS_LINE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class TravelRuleGeographicAddress {
    public static final String JSON_PROPERTY_STREET_NAME = "streetName";
    @jakarta.annotation.Nullable private String streetName;

    public static final String JSON_PROPERTY_TOWN_NAME = "townName";
    @jakarta.annotation.Nullable private String townName;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    @jakarta.annotation.Nullable private String country;

    public static final String JSON_PROPERTY_BUILDING_NUMBER = "buildingNumber";
    @jakarta.annotation.Nullable private String buildingNumber;

    public static final String JSON_PROPERTY_POST_CODE = "postCode";
    @jakarta.annotation.Nullable private String postCode;

    public static final String JSON_PROPERTY_ADDRESS_TYPE = "addressType";
    @jakarta.annotation.Nullable private String addressType;

    public static final String JSON_PROPERTY_DEPARTMENT = "department";
    @jakarta.annotation.Nullable private String department;

    public static final String JSON_PROPERTY_SUB_DEPARTMENT = "subDepartment";
    @jakarta.annotation.Nullable private String subDepartment;

    public static final String JSON_PROPERTY_BUILDING_NAME = "buildingName";
    @jakarta.annotation.Nullable private String buildingName;

    public static final String JSON_PROPERTY_FLOOR = "floor";
    @jakarta.annotation.Nullable private String floor;

    public static final String JSON_PROPERTY_POST_BOX = "postBox";
    @jakarta.annotation.Nullable private String postBox;

    public static final String JSON_PROPERTY_ROOM = "room";
    @jakarta.annotation.Nullable private String room;

    public static final String JSON_PROPERTY_TOWN_LOCATION_NAME = "townLocationName";
    @jakarta.annotation.Nullable private String townLocationName;

    public static final String JSON_PROPERTY_DISTRICT_NAME = "districtName";
    @jakarta.annotation.Nullable private String districtName;

    public static final String JSON_PROPERTY_COUNTRY_SUB_DIVISION = "countrySubDivision";
    @jakarta.annotation.Nullable private String countrySubDivision;

    public static final String JSON_PROPERTY_ADDRESS_LINE = "addressLine";
    @jakarta.annotation.Nullable private List<String> addressLine;

    public TravelRuleGeographicAddress() {}

    public TravelRuleGeographicAddress streetName(@jakarta.annotation.Nullable String streetName) {
        this.streetName = streetName;
        return this;
    }

    /**
     * Name of a street or thoroughfare. The value must be encrypted.
     *
     * @return streetName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STREET_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStreetName() {
        return streetName;
    }

    @JsonProperty(JSON_PROPERTY_STREET_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStreetName(@jakarta.annotation.Nullable String streetName) {
        this.streetName = streetName;
    }

    public TravelRuleGeographicAddress townName(@jakarta.annotation.Nullable String townName) {
        this.townName = townName;
        return this;
    }

    /**
     * Name of a built-up area, with defined boundaries, and a local government. The value must be
     * encrypted.
     *
     * @return townName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOWN_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTownName() {
        return townName;
    }

    @JsonProperty(JSON_PROPERTY_TOWN_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTownName(@jakarta.annotation.Nullable String townName) {
        this.townName = townName;
    }

    public TravelRuleGeographicAddress country(@jakarta.annotation.Nullable String country) {
        this.country = country;
        return this;
    }

    /**
     * Nation with its own government (ISO-3166 Alpha-2 country code). The value must be encrypted.
     *
     * @return country
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountry(@jakarta.annotation.Nullable String country) {
        this.country = country;
    }

    public TravelRuleGeographicAddress buildingNumber(
            @jakarta.annotation.Nullable String buildingNumber) {
        this.buildingNumber = buildingNumber;
        return this;
    }

    /**
     * Number that identifies the position of a building on a street. The value must be encrypted.
     *
     * @return buildingNumber
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BUILDING_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBuildingNumber() {
        return buildingNumber;
    }

    @JsonProperty(JSON_PROPERTY_BUILDING_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuildingNumber(@jakarta.annotation.Nullable String buildingNumber) {
        this.buildingNumber = buildingNumber;
    }

    public TravelRuleGeographicAddress postCode(@jakarta.annotation.Nullable String postCode) {
        this.postCode = postCode;
        return this;
    }

    /**
     * Identifier consisting of a group of letters and/or numbers added to a postal address to
     * assist the sorting of mail. The value must be encrypted.
     *
     * @return postCode
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POST_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPostCode() {
        return postCode;
    }

    @JsonProperty(JSON_PROPERTY_POST_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPostCode(@jakarta.annotation.Nullable String postCode) {
        this.postCode = postCode;
    }

    public TravelRuleGeographicAddress addressType(
            @jakarta.annotation.Nullable String addressType) {
        this.addressType = addressType;
        return this;
    }

    /**
     * Specifies the type of address. Acceptable values are: - &#39;HOME&#39;: Residential, the home
     * address - &#39;BIZZ&#39;: Business, the business address - &#39;GEOG&#39;: Geographic, an
     * unspecified physical (geographical) address The value must be encrypted.
     *
     * @return addressType
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAddressType() {
        return addressType;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddressType(@jakarta.annotation.Nullable String addressType) {
        this.addressType = addressType;
    }

    public TravelRuleGeographicAddress department(@jakarta.annotation.Nullable String department) {
        this.department = department;
        return this;
    }

    /**
     * Identification of a division of a large organisation or building. The value must be
     * encrypted.
     *
     * @return department
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DEPARTMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDepartment() {
        return department;
    }

    @JsonProperty(JSON_PROPERTY_DEPARTMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDepartment(@jakarta.annotation.Nullable String department) {
        this.department = department;
    }

    public TravelRuleGeographicAddress subDepartment(
            @jakarta.annotation.Nullable String subDepartment) {
        this.subDepartment = subDepartment;
        return this;
    }

    /**
     * Identification of a sub-division of a large organisation or building. The value must be
     * encrypted.
     *
     * @return subDepartment
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUB_DEPARTMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubDepartment() {
        return subDepartment;
    }

    @JsonProperty(JSON_PROPERTY_SUB_DEPARTMENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubDepartment(@jakarta.annotation.Nullable String subDepartment) {
        this.subDepartment = subDepartment;
    }

    public TravelRuleGeographicAddress buildingName(
            @jakarta.annotation.Nullable String buildingName) {
        this.buildingName = buildingName;
        return this;
    }

    /**
     * Name of the building or house. The value must be encrypted.
     *
     * @return buildingName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BUILDING_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBuildingName() {
        return buildingName;
    }

    @JsonProperty(JSON_PROPERTY_BUILDING_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBuildingName(@jakarta.annotation.Nullable String buildingName) {
        this.buildingName = buildingName;
    }

    public TravelRuleGeographicAddress floor(@jakarta.annotation.Nullable String floor) {
        this.floor = floor;
        return this;
    }

    /**
     * Floor or storey within a building. The value must be encrypted.
     *
     * @return floor
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FLOOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFloor() {
        return floor;
    }

    @JsonProperty(JSON_PROPERTY_FLOOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFloor(@jakarta.annotation.Nullable String floor) {
        this.floor = floor;
    }

    public TravelRuleGeographicAddress postBox(@jakarta.annotation.Nullable String postBox) {
        this.postBox = postBox;
        return this;
    }

    /**
     * Numbered box in a post office. The value must be encrypted.
     *
     * @return postBox
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POST_BOX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPostBox() {
        return postBox;
    }

    @JsonProperty(JSON_PROPERTY_POST_BOX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPostBox(@jakarta.annotation.Nullable String postBox) {
        this.postBox = postBox;
    }

    public TravelRuleGeographicAddress room(@jakarta.annotation.Nullable String room) {
        this.room = room;
        return this;
    }

    /**
     * Building room number. The value must be encrypted.
     *
     * @return room
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ROOM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRoom() {
        return room;
    }

    @JsonProperty(JSON_PROPERTY_ROOM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoom(@jakarta.annotation.Nullable String room) {
        this.room = room;
    }

    public TravelRuleGeographicAddress townLocationName(
            @jakarta.annotation.Nullable String townLocationName) {
        this.townLocationName = townLocationName;
        return this;
    }

    /**
     * Specific location name within the town. The value must be encrypted.
     *
     * @return townLocationName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOWN_LOCATION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTownLocationName() {
        return townLocationName;
    }

    @JsonProperty(JSON_PROPERTY_TOWN_LOCATION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTownLocationName(@jakarta.annotation.Nullable String townLocationName) {
        this.townLocationName = townLocationName;
    }

    public TravelRuleGeographicAddress districtName(
            @jakarta.annotation.Nullable String districtName) {
        this.districtName = districtName;
        return this;
    }

    /**
     * Identifies a subdivision within a country subdivision. The value must be encrypted.
     *
     * @return districtName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DISTRICT_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDistrictName() {
        return districtName;
    }

    @JsonProperty(JSON_PROPERTY_DISTRICT_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDistrictName(@jakarta.annotation.Nullable String districtName) {
        this.districtName = districtName;
    }

    public TravelRuleGeographicAddress countrySubDivision(
            @jakarta.annotation.Nullable String countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
        return this;
    }

    /**
     * Identifies a subdivision of a country such as state, region, or province. The value must be
     * encrypted.
     *
     * @return countrySubDivision
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COUNTRY_SUB_DIVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountrySubDivision() {
        return countrySubDivision;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY_SUB_DIVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountrySubDivision(@jakarta.annotation.Nullable String countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
    }

    public TravelRuleGeographicAddress addressLine(
            @jakarta.annotation.Nullable List<String> addressLine) {
        this.addressLine = addressLine;
        return this;
    }

    public TravelRuleGeographicAddress addAddressLineItem(String addressLineItem) {
        if (this.addressLine == null) {
            this.addressLine = new ArrayList<>();
        }
        this.addressLine.add(addressLineItem);
        return this;
    }

    /**
     * Information that locates and identifies a specific address, presented in free format text.
     * Each item must be encrypted.
     *
     * @return addressLine
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ADDRESS_LINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getAddressLine() {
        return addressLine;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS_LINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddressLine(@jakarta.annotation.Nullable List<String> addressLine) {
        this.addressLine = addressLine;
    }

    /** Return true if this TravelRuleGeographicAddress object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TravelRuleGeographicAddress travelRuleGeographicAddress = (TravelRuleGeographicAddress) o;
        return Objects.equals(this.streetName, travelRuleGeographicAddress.streetName)
                && Objects.equals(this.townName, travelRuleGeographicAddress.townName)
                && Objects.equals(this.country, travelRuleGeographicAddress.country)
                && Objects.equals(this.buildingNumber, travelRuleGeographicAddress.buildingNumber)
                && Objects.equals(this.postCode, travelRuleGeographicAddress.postCode)
                && Objects.equals(this.addressType, travelRuleGeographicAddress.addressType)
                && Objects.equals(this.department, travelRuleGeographicAddress.department)
                && Objects.equals(this.subDepartment, travelRuleGeographicAddress.subDepartment)
                && Objects.equals(this.buildingName, travelRuleGeographicAddress.buildingName)
                && Objects.equals(this.floor, travelRuleGeographicAddress.floor)
                && Objects.equals(this.postBox, travelRuleGeographicAddress.postBox)
                && Objects.equals(this.room, travelRuleGeographicAddress.room)
                && Objects.equals(
                        this.townLocationName, travelRuleGeographicAddress.townLocationName)
                && Objects.equals(this.districtName, travelRuleGeographicAddress.districtName)
                && Objects.equals(
                        this.countrySubDivision, travelRuleGeographicAddress.countrySubDivision)
                && Objects.equals(this.addressLine, travelRuleGeographicAddress.addressLine);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                streetName,
                townName,
                country,
                buildingNumber,
                postCode,
                addressType,
                department,
                subDepartment,
                buildingName,
                floor,
                postBox,
                room,
                townLocationName,
                districtName,
                countrySubDivision,
                addressLine);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TravelRuleGeographicAddress {\n");
        sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
        sb.append("    townName: ").append(toIndentedString(townName)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    buildingNumber: ").append(toIndentedString(buildingNumber)).append("\n");
        sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
        sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
        sb.append("    department: ").append(toIndentedString(department)).append("\n");
        sb.append("    subDepartment: ").append(toIndentedString(subDepartment)).append("\n");
        sb.append("    buildingName: ").append(toIndentedString(buildingName)).append("\n");
        sb.append("    floor: ").append(toIndentedString(floor)).append("\n");
        sb.append("    postBox: ").append(toIndentedString(postBox)).append("\n");
        sb.append("    room: ").append(toIndentedString(room)).append("\n");
        sb.append("    townLocationName: ").append(toIndentedString(townLocationName)).append("\n");
        sb.append("    districtName: ").append(toIndentedString(districtName)).append("\n");
        sb.append("    countrySubDivision: ")
                .append(toIndentedString(countrySubDivision))
                .append("\n");
        sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `streetName` to the URL query string
        if (getStreetName() != null) {
            joiner.add(
                    String.format(
                            "%sstreetName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStreetName()))));
        }

        // add `townName` to the URL query string
        if (getTownName() != null) {
            joiner.add(
                    String.format(
                            "%stownName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTownName()))));
        }

        // add `country` to the URL query string
        if (getCountry() != null) {
            joiner.add(
                    String.format(
                            "%scountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
        }

        // add `buildingNumber` to the URL query string
        if (getBuildingNumber() != null) {
            joiner.add(
                    String.format(
                            "%sbuildingNumber%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBuildingNumber()))));
        }

        // add `postCode` to the URL query string
        if (getPostCode() != null) {
            joiner.add(
                    String.format(
                            "%spostCode%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPostCode()))));
        }

        // add `addressType` to the URL query string
        if (getAddressType() != null) {
            joiner.add(
                    String.format(
                            "%saddressType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddressType()))));
        }

        // add `department` to the URL query string
        if (getDepartment() != null) {
            joiner.add(
                    String.format(
                            "%sdepartment%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDepartment()))));
        }

        // add `subDepartment` to the URL query string
        if (getSubDepartment() != null) {
            joiner.add(
                    String.format(
                            "%ssubDepartment%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSubDepartment()))));
        }

        // add `buildingName` to the URL query string
        if (getBuildingName() != null) {
            joiner.add(
                    String.format(
                            "%sbuildingName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBuildingName()))));
        }

        // add `floor` to the URL query string
        if (getFloor() != null) {
            joiner.add(
                    String.format(
                            "%sfloor%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getFloor()))));
        }

        // add `postBox` to the URL query string
        if (getPostBox() != null) {
            joiner.add(
                    String.format(
                            "%spostBox%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPostBox()))));
        }

        // add `room` to the URL query string
        if (getRoom() != null) {
            joiner.add(
                    String.format(
                            "%sroom%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getRoom()))));
        }

        // add `townLocationName` to the URL query string
        if (getTownLocationName() != null) {
            joiner.add(
                    String.format(
                            "%stownLocationName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTownLocationName()))));
        }

        // add `districtName` to the URL query string
        if (getDistrictName() != null) {
            joiner.add(
                    String.format(
                            "%sdistrictName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDistrictName()))));
        }

        // add `countrySubDivision` to the URL query string
        if (getCountrySubDivision() != null) {
            joiner.add(
                    String.format(
                            "%scountrySubDivision%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountrySubDivision()))));
        }

        // add `addressLine` to the URL query string
        if (getAddressLine() != null) {
            for (int i = 0; i < getAddressLine().size(); i++) {
                joiner.add(
                        String.format(
                                "%saddressLine%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getAddressLine().get(i)))));
            }
        }

        return joiner.toString();
    }
}
