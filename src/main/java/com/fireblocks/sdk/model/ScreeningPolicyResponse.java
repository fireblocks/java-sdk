/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.StringJoiner;

/** ScreeningPolicyResponse */
@JsonPropertyOrder({
    ScreeningPolicyResponse.JSON_PROPERTY_POLICY,
    ScreeningPolicyResponse.JSON_PROPERTY_POLICY_STATUS,
    ScreeningPolicyResponse.JSON_PROPERTY_IS_DEFAULT,
    ScreeningPolicyResponse.JSON_PROPERTY_CREATE_DATE,
    ScreeningPolicyResponse.JSON_PROPERTY_LAST_UPDATE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ScreeningPolicyResponse {
    public static final String JSON_PROPERTY_POLICY = "policy";
    @jakarta.annotation.Nonnull private TravelRulePolicyRuleResponse policy;

    public static final String JSON_PROPERTY_POLICY_STATUS = "policyStatus";
    @jakarta.annotation.Nullable private String policyStatus;

    public static final String JSON_PROPERTY_IS_DEFAULT = "isDefault";
    @jakarta.annotation.Nonnull private Boolean isDefault;

    public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
    @jakarta.annotation.Nullable private OffsetDateTime createDate;

    public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
    @jakarta.annotation.Nonnull private OffsetDateTime lastUpdate;

    public ScreeningPolicyResponse() {}

    @JsonCreator
    public ScreeningPolicyResponse(
            @JsonProperty(value = JSON_PROPERTY_POLICY, required = true)
                    TravelRulePolicyRuleResponse policy,
            @JsonProperty(value = JSON_PROPERTY_IS_DEFAULT, required = true) Boolean isDefault,
            @JsonProperty(value = JSON_PROPERTY_LAST_UPDATE, required = true)
                    OffsetDateTime lastUpdate) {
        this.policy = policy;
        this.isDefault = isDefault;
        this.lastUpdate = lastUpdate;
    }

    public ScreeningPolicyResponse policy(
            @jakarta.annotation.Nonnull TravelRulePolicyRuleResponse policy) {
        this.policy = policy;
        return this;
    }

    /**
     * Get policy
     *
     * @return policy
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TravelRulePolicyRuleResponse getPolicy() {
        return policy;
    }

    @JsonProperty(JSON_PROPERTY_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPolicy(@jakarta.annotation.Nonnull TravelRulePolicyRuleResponse policy) {
        this.policy = policy;
    }

    public ScreeningPolicyResponse policyStatus(@jakarta.annotation.Nullable String policyStatus) {
        this.policyStatus = policyStatus;
        return this;
    }

    /**
     * Get policyStatus
     *
     * @return policyStatus
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POLICY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPolicyStatus() {
        return policyStatus;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPolicyStatus(@jakarta.annotation.Nullable String policyStatus) {
        this.policyStatus = policyStatus;
    }

    public ScreeningPolicyResponse isDefault(@jakarta.annotation.Nonnull Boolean isDefault) {
        this.isDefault = isDefault;
        return this;
    }

    /**
     * Get isDefault
     *
     * @return isDefault
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsDefault() {
        return isDefault;
    }

    @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsDefault(@jakarta.annotation.Nonnull Boolean isDefault) {
        this.isDefault = isDefault;
    }

    public ScreeningPolicyResponse createDate(
            @jakarta.annotation.Nullable OffsetDateTime createDate) {
        this.createDate = createDate;
        return this;
    }

    /**
     * Get createDate
     *
     * @return createDate
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CREATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getCreateDate() {
        return createDate;
    }

    @JsonProperty(JSON_PROPERTY_CREATE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreateDate(@jakarta.annotation.Nullable OffsetDateTime createDate) {
        this.createDate = createDate;
    }

    public ScreeningPolicyResponse lastUpdate(
            @jakarta.annotation.Nonnull OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }

    /**
     * Get lastUpdate
     *
     * @return lastUpdate
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getLastUpdate() {
        return lastUpdate;
    }

    @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLastUpdate(@jakarta.annotation.Nonnull OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /** Return true if this ScreeningPolicyResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ScreeningPolicyResponse screeningPolicyResponse = (ScreeningPolicyResponse) o;
        return Objects.equals(this.policy, screeningPolicyResponse.policy)
                && Objects.equals(this.policyStatus, screeningPolicyResponse.policyStatus)
                && Objects.equals(this.isDefault, screeningPolicyResponse.isDefault)
                && Objects.equals(this.createDate, screeningPolicyResponse.createDate)
                && Objects.equals(this.lastUpdate, screeningPolicyResponse.lastUpdate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(policy, policyStatus, isDefault, createDate, lastUpdate);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ScreeningPolicyResponse {\n");
        sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
        sb.append("    policyStatus: ").append(toIndentedString(policyStatus)).append("\n");
        sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
        sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
        sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `policy` to the URL query string
        if (getPolicy() != null) {
            joiner.add(getPolicy().toUrlQueryString(prefix + "policy" + suffix));
        }

        // add `policyStatus` to the URL query string
        if (getPolicyStatus() != null) {
            joiner.add(
                    String.format(
                            "%spolicyStatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPolicyStatus()))));
        }

        // add `isDefault` to the URL query string
        if (getIsDefault() != null) {
            joiner.add(
                    String.format(
                            "%sisDefault%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getIsDefault()))));
        }

        // add `createDate` to the URL query string
        if (getCreateDate() != null) {
            joiner.add(
                    String.format(
                            "%screateDate%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCreateDate()))));
        }

        // add `lastUpdate` to the URL query string
        if (getLastUpdate() != null) {
            joiner.add(
                    String.format(
                            "%slastUpdate%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getLastUpdate()))));
        }

        return joiner.toString();
    }
}
