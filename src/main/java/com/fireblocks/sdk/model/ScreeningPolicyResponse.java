/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.TravelRulePolicyRuleResponse;
import java.time.OffsetDateTime;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ScreeningPolicyResponse
 */
@JsonPropertyOrder({
  ScreeningPolicyResponse.JSON_PROPERTY_POLICY,
  ScreeningPolicyResponse.JSON_PROPERTY_POLICY_STATUS,
  ScreeningPolicyResponse.JSON_PROPERTY_IS_DEFAULT,
  ScreeningPolicyResponse.JSON_PROPERTY_CREATE_DATE,
  ScreeningPolicyResponse.JSON_PROPERTY_LAST_UPDATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ScreeningPolicyResponse {
  public static final String JSON_PROPERTY_POLICY = "policy";
  private TravelRulePolicyRuleResponse policy;

  public static final String JSON_PROPERTY_POLICY_STATUS = "policyStatus";
  private String policyStatus;

  public static final String JSON_PROPERTY_IS_DEFAULT = "isDefault";
  private Boolean isDefault;

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  private OffsetDateTime createDate;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  private OffsetDateTime lastUpdate;

  public ScreeningPolicyResponse() { 
  }

  public ScreeningPolicyResponse policy(TravelRulePolicyRuleResponse policy) {
    this.policy = policy;
    return this;
  }

   /**
   * Get policy
   * @return policy
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TravelRulePolicyRuleResponse getPolicy() {
    return policy;
  }


  @JsonProperty(JSON_PROPERTY_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPolicy(TravelRulePolicyRuleResponse policy) {
    this.policy = policy;
  }


  public ScreeningPolicyResponse policyStatus(String policyStatus) {
    this.policyStatus = policyStatus;
    return this;
  }

   /**
   * Get policyStatus
   * @return policyStatus
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POLICY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPolicyStatus() {
    return policyStatus;
  }


  @JsonProperty(JSON_PROPERTY_POLICY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicyStatus(String policyStatus) {
    this.policyStatus = policyStatus;
  }


  public ScreeningPolicyResponse isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDefault() {
    return isDefault;
  }


  @JsonProperty(JSON_PROPERTY_IS_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public ScreeningPolicyResponse createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public ScreeningPolicyResponse lastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * Get lastUpdate
   * @return lastUpdate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  /**
   * Return true if this ScreeningPolicyResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScreeningPolicyResponse screeningPolicyResponse = (ScreeningPolicyResponse) o;
    return Objects.equals(this.policy, screeningPolicyResponse.policy) &&
        Objects.equals(this.policyStatus, screeningPolicyResponse.policyStatus) &&
        Objects.equals(this.isDefault, screeningPolicyResponse.isDefault) &&
        Objects.equals(this.createDate, screeningPolicyResponse.createDate) &&
        Objects.equals(this.lastUpdate, screeningPolicyResponse.lastUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policy, policyStatus, isDefault, createDate, lastUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScreeningPolicyResponse {\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    policyStatus: ").append(toIndentedString(policyStatus)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `policy` to the URL query string
    if (getPolicy() != null) {
      joiner.add(getPolicy().toUrlQueryString(prefix + "policy" + suffix));
    }

    // add `policyStatus` to the URL query string
    if (getPolicyStatus() != null) {
      joiner.add(String.format("%spolicyStatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPolicyStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isDefault` to the URL query string
    if (getIsDefault() != null) {
      joiner.add(String.format("%sisDefault%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsDefault()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `createDate` to the URL query string
    if (getCreateDate() != null) {
      joiner.add(String.format("%screateDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreateDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      joiner.add(String.format("%slastUpdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastUpdate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

