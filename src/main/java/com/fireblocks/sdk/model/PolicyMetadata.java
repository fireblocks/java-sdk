/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** Policy metadata */
@JsonPropertyOrder({
    PolicyMetadata.JSON_PROPERTY_EDITED_BY,
    PolicyMetadata.JSON_PROPERTY_EDITED_AT,
    PolicyMetadata.JSON_PROPERTY_PUBLISHED_BY,
    PolicyMetadata.JSON_PROPERTY_PUBLISHED_AT,
    PolicyMetadata.JSON_PROPERTY_POLICY_TYPE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class PolicyMetadata {
    public static final String JSON_PROPERTY_EDITED_BY = "editedBy";
    @jakarta.annotation.Nullable private String editedBy;

    public static final String JSON_PROPERTY_EDITED_AT = "editedAt";
    @jakarta.annotation.Nullable private String editedAt;

    public static final String JSON_PROPERTY_PUBLISHED_BY = "publishedBy";
    @jakarta.annotation.Nullable private String publishedBy;

    public static final String JSON_PROPERTY_PUBLISHED_AT = "publishedAt";
    @jakarta.annotation.Nullable private String publishedAt;

    public static final String JSON_PROPERTY_POLICY_TYPE = "policyType";
    @jakarta.annotation.Nonnull private PolicyType policyType;

    public PolicyMetadata() {}

    @JsonCreator
    public PolicyMetadata(
            @JsonProperty(value = JSON_PROPERTY_POLICY_TYPE, required = true)
                    PolicyType policyType) {
        this.policyType = policyType;
    }

    public PolicyMetadata editedBy(@jakarta.annotation.Nullable String editedBy) {
        this.editedBy = editedBy;
        return this;
    }

    /**
     * The user ID of the user who last edited the policy
     *
     * @return editedBy
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EDITED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEditedBy() {
        return editedBy;
    }

    @JsonProperty(JSON_PROPERTY_EDITED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEditedBy(@jakarta.annotation.Nullable String editedBy) {
        this.editedBy = editedBy;
    }

    public PolicyMetadata editedAt(@jakarta.annotation.Nullable String editedAt) {
        this.editedAt = editedAt;
        return this;
    }

    /**
     * The timestamp of the last edit of the policy
     *
     * @return editedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EDITED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEditedAt() {
        return editedAt;
    }

    @JsonProperty(JSON_PROPERTY_EDITED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEditedAt(@jakarta.annotation.Nullable String editedAt) {
        this.editedAt = editedAt;
    }

    public PolicyMetadata publishedBy(@jakarta.annotation.Nullable String publishedBy) {
        this.publishedBy = publishedBy;
        return this;
    }

    /**
     * The user ID of the user who last published the policy
     *
     * @return publishedBy
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PUBLISHED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPublishedBy() {
        return publishedBy;
    }

    @JsonProperty(JSON_PROPERTY_PUBLISHED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPublishedBy(@jakarta.annotation.Nullable String publishedBy) {
        this.publishedBy = publishedBy;
    }

    public PolicyMetadata publishedAt(@jakarta.annotation.Nullable String publishedAt) {
        this.publishedAt = publishedAt;
        return this;
    }

    /**
     * The timestamp of the last publish of the policy
     *
     * @return publishedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PUBLISHED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPublishedAt() {
        return publishedAt;
    }

    @JsonProperty(JSON_PROPERTY_PUBLISHED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPublishedAt(@jakarta.annotation.Nullable String publishedAt) {
        this.publishedAt = publishedAt;
    }

    public PolicyMetadata policyType(@jakarta.annotation.Nonnull PolicyType policyType) {
        this.policyType = policyType;
        return this;
    }

    /**
     * Get policyType
     *
     * @return policyType
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_POLICY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public PolicyType getPolicyType() {
        return policyType;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPolicyType(@jakarta.annotation.Nonnull PolicyType policyType) {
        this.policyType = policyType;
    }

    /** Return true if this PolicyMetadata object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PolicyMetadata policyMetadata = (PolicyMetadata) o;
        return Objects.equals(this.editedBy, policyMetadata.editedBy)
                && Objects.equals(this.editedAt, policyMetadata.editedAt)
                && Objects.equals(this.publishedBy, policyMetadata.publishedBy)
                && Objects.equals(this.publishedAt, policyMetadata.publishedAt)
                && Objects.equals(this.policyType, policyMetadata.policyType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(editedBy, editedAt, publishedBy, publishedAt, policyType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PolicyMetadata {\n");
        sb.append("    editedBy: ").append(toIndentedString(editedBy)).append("\n");
        sb.append("    editedAt: ").append(toIndentedString(editedAt)).append("\n");
        sb.append("    publishedBy: ").append(toIndentedString(publishedBy)).append("\n");
        sb.append("    publishedAt: ").append(toIndentedString(publishedAt)).append("\n");
        sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `editedBy` to the URL query string
        if (getEditedBy() != null) {
            joiner.add(
                    String.format(
                            "%seditedBy%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getEditedBy()))));
        }

        // add `editedAt` to the URL query string
        if (getEditedAt() != null) {
            joiner.add(
                    String.format(
                            "%seditedAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getEditedAt()))));
        }

        // add `publishedBy` to the URL query string
        if (getPublishedBy() != null) {
            joiner.add(
                    String.format(
                            "%spublishedBy%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPublishedBy()))));
        }

        // add `publishedAt` to the URL query string
        if (getPublishedAt() != null) {
            joiner.add(
                    String.format(
                            "%spublishedAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPublishedAt()))));
        }

        // add `policyType` to the URL query string
        if (getPolicyType() != null) {
            joiner.add(
                    String.format(
                            "%spolicyType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPolicyType()))));
        }

        return joiner.toString();
    }
}
