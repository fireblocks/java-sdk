/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** ConnectedAccountBalances */
@JsonPropertyOrder({
    ConnectedAccountBalances.JSON_PROPERTY_ASSET_ID,
    ConnectedAccountBalances.JSON_PROPERTY_AVAILABLE_AMOUNT,
    ConnectedAccountBalances.JSON_PROPERTY_TOTAL_AMOUNT,
    ConnectedAccountBalances.JSON_PROPERTY_LOCKED_AMOUNT,
    ConnectedAccountBalances.JSON_PROPERTY_CREDIT_AMOUNT,
    ConnectedAccountBalances.JSON_PROPERTY_BALANCE_TYPE,
    ConnectedAccountBalances.JSON_PROPERTY_BALANCE_NAME
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ConnectedAccountBalances {
    public static final String JSON_PROPERTY_ASSET_ID = "assetId";
    @jakarta.annotation.Nonnull private String assetId;

    public static final String JSON_PROPERTY_AVAILABLE_AMOUNT = "availableAmount";
    @jakarta.annotation.Nonnull private String availableAmount;

    public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
    @jakarta.annotation.Nonnull private String totalAmount;

    public static final String JSON_PROPERTY_LOCKED_AMOUNT = "lockedAmount";
    @jakarta.annotation.Nullable private String lockedAmount;

    public static final String JSON_PROPERTY_CREDIT_AMOUNT = "creditAmount";
    @jakarta.annotation.Nullable private String creditAmount;

    public static final String JSON_PROPERTY_BALANCE_TYPE = "balanceType";
    @jakarta.annotation.Nonnull private String balanceType;

    public static final String JSON_PROPERTY_BALANCE_NAME = "balanceName";
    @jakarta.annotation.Nullable private String balanceName;

    public ConnectedAccountBalances() {}

    @JsonCreator
    public ConnectedAccountBalances(
            @JsonProperty(value = JSON_PROPERTY_ASSET_ID, required = true) String assetId,
            @JsonProperty(value = JSON_PROPERTY_AVAILABLE_AMOUNT, required = true)
                    String availableAmount,
            @JsonProperty(value = JSON_PROPERTY_TOTAL_AMOUNT, required = true) String totalAmount,
            @JsonProperty(value = JSON_PROPERTY_BALANCE_TYPE, required = true) String balanceType) {
        this.assetId = assetId;
        this.availableAmount = availableAmount;
        this.totalAmount = totalAmount;
        this.balanceType = balanceType;
    }

    public ConnectedAccountBalances assetId(@jakarta.annotation.Nonnull String assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * Asset identifier (e.g., BTC, ETH, USDC).
     *
     * @return assetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssetId() {
        return assetId;
    }

    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssetId(@jakarta.annotation.Nonnull String assetId) {
        this.assetId = assetId;
    }

    public ConnectedAccountBalances availableAmount(
            @jakarta.annotation.Nonnull String availableAmount) {
        this.availableAmount = availableAmount;
        return this;
    }

    /**
     * Amount available for use.
     *
     * @return availableAmount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AVAILABLE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAvailableAmount() {
        return availableAmount;
    }

    @JsonProperty(JSON_PROPERTY_AVAILABLE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAvailableAmount(@jakarta.annotation.Nonnull String availableAmount) {
        this.availableAmount = availableAmount;
    }

    public ConnectedAccountBalances totalAmount(@jakarta.annotation.Nonnull String totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }

    /**
     * Total amount including locked/held balances.
     *
     * @return totalAmount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTotalAmount() {
        return totalAmount;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTotalAmount(@jakarta.annotation.Nonnull String totalAmount) {
        this.totalAmount = totalAmount;
    }

    public ConnectedAccountBalances lockedAmount(@jakarta.annotation.Nullable String lockedAmount) {
        this.lockedAmount = lockedAmount;
        return this;
    }

    /**
     * Amount currently locked/held.
     *
     * @return lockedAmount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LOCKED_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLockedAmount() {
        return lockedAmount;
    }

    @JsonProperty(JSON_PROPERTY_LOCKED_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLockedAmount(@jakarta.annotation.Nullable String lockedAmount) {
        this.lockedAmount = lockedAmount;
    }

    public ConnectedAccountBalances creditAmount(@jakarta.annotation.Nullable String creditAmount) {
        this.creditAmount = creditAmount;
        return this;
    }

    /**
     * Credit line amount, if applicable (0 when not used).
     *
     * @return creditAmount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CREDIT_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCreditAmount() {
        return creditAmount;
    }

    @JsonProperty(JSON_PROPERTY_CREDIT_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreditAmount(@jakarta.annotation.Nullable String creditAmount) {
        this.creditAmount = creditAmount;
    }

    public ConnectedAccountBalances balanceType(@jakarta.annotation.Nonnull String balanceType) {
        this.balanceType = balanceType;
        return this;
    }

    /**
     * Wallet type/category (e.g., SPOT, MARGIN, FUNDING).
     *
     * @return balanceType
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BALANCE_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBalanceType() {
        return balanceType;
    }

    @JsonProperty(JSON_PROPERTY_BALANCE_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBalanceType(@jakarta.annotation.Nonnull String balanceType) {
        this.balanceType = balanceType;
    }

    public ConnectedAccountBalances balanceName(@jakarta.annotation.Nullable String balanceName) {
        this.balanceName = balanceName;
        return this;
    }

    /**
     * Display name for the balance type (at the provider)
     *
     * @return balanceName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BALANCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBalanceName() {
        return balanceName;
    }

    @JsonProperty(JSON_PROPERTY_BALANCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBalanceName(@jakarta.annotation.Nullable String balanceName) {
        this.balanceName = balanceName;
    }

    /** Return true if this ConnectedAccountBalances object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConnectedAccountBalances connectedAccountBalances = (ConnectedAccountBalances) o;
        return Objects.equals(this.assetId, connectedAccountBalances.assetId)
                && Objects.equals(this.availableAmount, connectedAccountBalances.availableAmount)
                && Objects.equals(this.totalAmount, connectedAccountBalances.totalAmount)
                && Objects.equals(this.lockedAmount, connectedAccountBalances.lockedAmount)
                && Objects.equals(this.creditAmount, connectedAccountBalances.creditAmount)
                && Objects.equals(this.balanceType, connectedAccountBalances.balanceType)
                && Objects.equals(this.balanceName, connectedAccountBalances.balanceName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                assetId,
                availableAmount,
                totalAmount,
                lockedAmount,
                creditAmount,
                balanceType,
                balanceName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConnectedAccountBalances {\n");
        sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
        sb.append("    availableAmount: ").append(toIndentedString(availableAmount)).append("\n");
        sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
        sb.append("    lockedAmount: ").append(toIndentedString(lockedAmount)).append("\n");
        sb.append("    creditAmount: ").append(toIndentedString(creditAmount)).append("\n");
        sb.append("    balanceType: ").append(toIndentedString(balanceType)).append("\n");
        sb.append("    balanceName: ").append(toIndentedString(balanceName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `assetId` to the URL query string
        if (getAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sassetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAssetId()))));
        }

        // add `availableAmount` to the URL query string
        if (getAvailableAmount() != null) {
            joiner.add(
                    String.format(
                            "%savailableAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAvailableAmount()))));
        }

        // add `totalAmount` to the URL query string
        if (getTotalAmount() != null) {
            joiner.add(
                    String.format(
                            "%stotalAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTotalAmount()))));
        }

        // add `lockedAmount` to the URL query string
        if (getLockedAmount() != null) {
            joiner.add(
                    String.format(
                            "%slockedAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getLockedAmount()))));
        }

        // add `creditAmount` to the URL query string
        if (getCreditAmount() != null) {
            joiner.add(
                    String.format(
                            "%screditAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCreditAmount()))));
        }

        // add `balanceType` to the URL query string
        if (getBalanceType() != null) {
            joiner.add(
                    String.format(
                            "%sbalanceType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBalanceType()))));
        }

        // add `balanceName` to the URL query string
        if (getBalanceName() != null) {
            joiner.add(
                    String.format(
                            "%sbalanceName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBalanceName()))));
        }

        return joiner.toString();
    }
}
