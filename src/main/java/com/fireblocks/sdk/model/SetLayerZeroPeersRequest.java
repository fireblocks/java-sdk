/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

/** SetLayerZeroPeersRequest */
@JsonPropertyOrder({
    SetLayerZeroPeersRequest.JSON_PROPERTY_VAULT_ACCOUNT_ID,
    SetLayerZeroPeersRequest.JSON_PROPERTY_SOURCE_ADAPTER_TOKEN_LINK_ID,
    SetLayerZeroPeersRequest.JSON_PROPERTY_DESTINATION_ADAPTER_TOKEN_LINK_IDS,
    SetLayerZeroPeersRequest.JSON_PROPERTY_BIDIRECTIONAL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SetLayerZeroPeersRequest {
    public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
    private String vaultAccountId;

    public static final String JSON_PROPERTY_SOURCE_ADAPTER_TOKEN_LINK_ID =
            "sourceAdapterTokenLinkId";
    private UUID sourceAdapterTokenLinkId;

    public static final String JSON_PROPERTY_DESTINATION_ADAPTER_TOKEN_LINK_IDS =
            "destinationAdapterTokenLinkIds";
    private List<UUID> destinationAdapterTokenLinkIds = new ArrayList<>();

    public static final String JSON_PROPERTY_BIDIRECTIONAL = "bidirectional";
    private Boolean bidirectional;

    public SetLayerZeroPeersRequest() {}

    public SetLayerZeroPeersRequest vaultAccountId(String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
        return this;
    }

    /**
     * The id of the vault account that will be used to inititate transactions ot set peers
     *
     * @return vaultAccountId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getVaultAccountId() {
        return vaultAccountId;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVaultAccountId(String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
    }

    public SetLayerZeroPeersRequest sourceAdapterTokenLinkId(UUID sourceAdapterTokenLinkId) {
        this.sourceAdapterTokenLinkId = sourceAdapterTokenLinkId;
        return this;
    }

    /**
     * &#x60;token_link&#x60; ID of the source adapter contract
     *
     * @return sourceAdapterTokenLinkId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SOURCE_ADAPTER_TOKEN_LINK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getSourceAdapterTokenLinkId() {
        return sourceAdapterTokenLinkId;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_ADAPTER_TOKEN_LINK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSourceAdapterTokenLinkId(UUID sourceAdapterTokenLinkId) {
        this.sourceAdapterTokenLinkId = sourceAdapterTokenLinkId;
    }

    public SetLayerZeroPeersRequest destinationAdapterTokenLinkIds(
            List<UUID> destinationAdapterTokenLinkIds) {
        this.destinationAdapterTokenLinkIds = destinationAdapterTokenLinkIds;
        return this;
    }

    public SetLayerZeroPeersRequest addDestinationAdapterTokenLinkIdsItem(
            UUID destinationAdapterTokenLinkIdsItem) {
        if (this.destinationAdapterTokenLinkIds == null) {
            this.destinationAdapterTokenLinkIds = new ArrayList<>();
        }
        this.destinationAdapterTokenLinkIds.add(destinationAdapterTokenLinkIdsItem);
        return this;
    }

    /**
     * Array of &#x60;token_link&#x60; IDs for destination adapter contracts
     *
     * @return destinationAdapterTokenLinkIds
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DESTINATION_ADAPTER_TOKEN_LINK_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<UUID> getDestinationAdapterTokenLinkIds() {
        return destinationAdapterTokenLinkIds;
    }

    @JsonProperty(JSON_PROPERTY_DESTINATION_ADAPTER_TOKEN_LINK_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDestinationAdapterTokenLinkIds(List<UUID> destinationAdapterTokenLinkIds) {
        this.destinationAdapterTokenLinkIds = destinationAdapterTokenLinkIds;
    }

    public SetLayerZeroPeersRequest bidirectional(Boolean bidirectional) {
        this.bidirectional = bidirectional;
        return this;
    }

    /**
     * If true, also sets peers from destination(s) back to source
     *
     * @return bidirectional
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BIDIRECTIONAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getBidirectional() {
        return bidirectional;
    }

    @JsonProperty(JSON_PROPERTY_BIDIRECTIONAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBidirectional(Boolean bidirectional) {
        this.bidirectional = bidirectional;
    }

    /** Return true if this SetLayerZeroPeersRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SetLayerZeroPeersRequest setLayerZeroPeersRequest = (SetLayerZeroPeersRequest) o;
        return Objects.equals(this.vaultAccountId, setLayerZeroPeersRequest.vaultAccountId)
                && Objects.equals(
                        this.sourceAdapterTokenLinkId,
                        setLayerZeroPeersRequest.sourceAdapterTokenLinkId)
                && Objects.equals(
                        this.destinationAdapterTokenLinkIds,
                        setLayerZeroPeersRequest.destinationAdapterTokenLinkIds)
                && Objects.equals(this.bidirectional, setLayerZeroPeersRequest.bidirectional);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                vaultAccountId,
                sourceAdapterTokenLinkId,
                destinationAdapterTokenLinkIds,
                bidirectional);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SetLayerZeroPeersRequest {\n");
        sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
        sb.append("    sourceAdapterTokenLinkId: ")
                .append(toIndentedString(sourceAdapterTokenLinkId))
                .append("\n");
        sb.append("    destinationAdapterTokenLinkIds: ")
                .append(toIndentedString(destinationAdapterTokenLinkIds))
                .append("\n");
        sb.append("    bidirectional: ").append(toIndentedString(bidirectional)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `vaultAccountId` to the URL query string
        if (getVaultAccountId() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getVaultAccountId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `sourceAdapterTokenLinkId` to the URL query string
        if (getSourceAdapterTokenLinkId() != null) {
            joiner.add(
                    String.format(
                            "%ssourceAdapterTokenLinkId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getSourceAdapterTokenLinkId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `destinationAdapterTokenLinkIds` to the URL query string
        if (getDestinationAdapterTokenLinkIds() != null) {
            for (int i = 0; i < getDestinationAdapterTokenLinkIds().size(); i++) {
                if (getDestinationAdapterTokenLinkIds().get(i) != null) {
                    joiner.add(
                            String.format(
                                    "%sdestinationAdapterTokenLinkIds%s%s=%s",
                                    prefix,
                                    suffix,
                                    "".equals(suffix)
                                            ? ""
                                            : String.format(
                                                    "%s%d%s", containerPrefix, i, containerSuffix),
                                    URLEncoder.encode(
                                                    String.valueOf(
                                                            getDestinationAdapterTokenLinkIds()
                                                                    .get(i)),
                                                    StandardCharsets.UTF_8)
                                            .replaceAll("\\+", "%20")));
                }
            }
        }

        // add `bidirectional` to the URL query string
        if (getBidirectional() != null) {
            joiner.add(
                    String.format(
                            "%sbidirectional%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getBidirectional()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
