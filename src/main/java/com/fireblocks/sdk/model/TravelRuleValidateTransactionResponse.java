/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** TravelRuleValidateTransactionResponse */
@JsonPropertyOrder({
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_IS_VALID,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_TYPE,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_BENEFICIARY_ADDRESS_TYPE,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_ADDRESS_SOURCE,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_BENEFICIARY_V_A_S_PDID,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME,
    TravelRuleValidateTransactionResponse.JSON_PROPERTY_WARNINGS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class TravelRuleValidateTransactionResponse {
    public static final String JSON_PROPERTY_IS_VALID = "isValid";
    @jakarta.annotation.Nonnull private Boolean isValid;

    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nonnull private String type;

    public static final String JSON_PROPERTY_BENEFICIARY_ADDRESS_TYPE = "beneficiaryAddressType";
    @jakarta.annotation.Nonnull private String beneficiaryAddressType;

    public static final String JSON_PROPERTY_ADDRESS_SOURCE = "addressSource";
    @jakarta.annotation.Nonnull private String addressSource;

    public static final String JSON_PROPERTY_BENEFICIARY_V_A_S_PDID = "beneficiaryVASPdid";
    @jakarta.annotation.Nonnull private String beneficiaryVASPdid;

    public static final String JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME = "beneficiaryVASPname";
    @jakarta.annotation.Nonnull private String beneficiaryVASPname;

    public static final String JSON_PROPERTY_WARNINGS = "warnings";
    @jakarta.annotation.Nonnull private List<String> warnings;

    public TravelRuleValidateTransactionResponse() {}

    @JsonCreator
    public TravelRuleValidateTransactionResponse(
            @JsonProperty(value = JSON_PROPERTY_IS_VALID, required = true) Boolean isValid,
            @JsonProperty(value = JSON_PROPERTY_TYPE, required = true) String type,
            @JsonProperty(value = JSON_PROPERTY_BENEFICIARY_ADDRESS_TYPE, required = true)
                    String beneficiaryAddressType,
            @JsonProperty(value = JSON_PROPERTY_ADDRESS_SOURCE, required = true)
                    String addressSource,
            @JsonProperty(value = JSON_PROPERTY_BENEFICIARY_V_A_S_PDID, required = true)
                    String beneficiaryVASPdid,
            @JsonProperty(value = JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME, required = true)
                    String beneficiaryVASPname,
            @JsonProperty(value = JSON_PROPERTY_WARNINGS, required = true) List<String> warnings) {
        this.isValid = isValid;
        this.type = type;
        this.beneficiaryAddressType = beneficiaryAddressType;
        this.addressSource = addressSource;
        this.beneficiaryVASPdid = beneficiaryVASPdid;
        this.beneficiaryVASPname = beneficiaryVASPname;
        this.warnings = warnings;
    }

    public TravelRuleValidateTransactionResponse isValid(
            @jakarta.annotation.Nonnull Boolean isValid) {
        this.isValid = isValid;
        return this;
    }

    /**
     * \&quot;isValid\&quot; will tell you if you have collected all the information needed for the
     * travel rule data transfer. Once this field &#x3D; \&quot;true\&quot;, you can move on to the
     * next step which is to transfer the front-end information to your back-end and perform Travel
     * Rule Transaction create
     *
     * @return isValid
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsValid() {
        return isValid;
    }

    @JsonProperty(JSON_PROPERTY_IS_VALID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsValid(@jakarta.annotation.Nonnull Boolean isValid) {
        this.isValid = isValid;
    }

    public TravelRuleValidateTransactionResponse type(@jakarta.annotation.Nonnull String type) {
        this.type = type;
        return this;
    }

    /**
     * \&quot;type\&quot; will tell you if the virtual asset value converted to FIAT value of the
     * withdrawal request is above (&#x3D;TRAVELRULE) or below (&#x3D;BELOW_THRESHOLD) the threshold
     * in your jurisdiction. If it is to an unhosted wallet which does not require travel rule
     * information to be sent and only collected, it will say NON_CUSTODIAL.
     *
     * @return type
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@jakarta.annotation.Nonnull String type) {
        this.type = type;
    }

    public TravelRuleValidateTransactionResponse beneficiaryAddressType(
            @jakarta.annotation.Nonnull String beneficiaryAddressType) {
        this.beneficiaryAddressType = beneficiaryAddressType;
        return this;
    }

    /**
     * \&quot;beneficiaryAddressType\&quot; will tell you if your blockchain analytics provider or
     * internal address book has been able to identify the wallet address.
     *
     * @return beneficiaryAddressType
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBeneficiaryAddressType() {
        return beneficiaryAddressType;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBeneficiaryAddressType(
            @jakarta.annotation.Nonnull String beneficiaryAddressType) {
        this.beneficiaryAddressType = beneficiaryAddressType;
    }

    public TravelRuleValidateTransactionResponse addressSource(
            @jakarta.annotation.Nonnull String addressSource) {
        this.addressSource = addressSource;
        return this;
    }

    /**
     * \&quot;addressSource\&quot; will tell you if the address was found in your internal address
     * book or identified by the blockchain analytics provider.
     *
     * @return addressSource
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ADDRESS_SOURCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAddressSource() {
        return addressSource;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS_SOURCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAddressSource(@jakarta.annotation.Nonnull String addressSource) {
        this.addressSource = addressSource;
    }

    public TravelRuleValidateTransactionResponse beneficiaryVASPdid(
            @jakarta.annotation.Nonnull String beneficiaryVASPdid) {
        this.beneficiaryVASPdid = beneficiaryVASPdid;
        return this;
    }

    /**
     * The VASP DID of the beneficiary VASP
     *
     * @return beneficiaryVASPdid
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBeneficiaryVASPdid() {
        return beneficiaryVASPdid;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBeneficiaryVASPdid(@jakarta.annotation.Nonnull String beneficiaryVASPdid) {
        this.beneficiaryVASPdid = beneficiaryVASPdid;
    }

    public TravelRuleValidateTransactionResponse beneficiaryVASPname(
            @jakarta.annotation.Nonnull String beneficiaryVASPname) {
        this.beneficiaryVASPname = beneficiaryVASPname;
        return this;
    }

    /**
     * \&quot;beneficiaryVASPname\&quot; will tell you the name of the VASP that has been identified
     * as the owner of the wallet address. This name is used in a subsequent call to get its DID.
     *
     * @return beneficiaryVASPname
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBeneficiaryVASPname() {
        return beneficiaryVASPname;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBeneficiaryVASPname(@jakarta.annotation.Nonnull String beneficiaryVASPname) {
        this.beneficiaryVASPname = beneficiaryVASPname;
    }

    public TravelRuleValidateTransactionResponse warnings(
            @jakarta.annotation.Nonnull List<String> warnings) {
        this.warnings = warnings;
        return this;
    }

    public TravelRuleValidateTransactionResponse addWarningsItem(String warningsItem) {
        if (this.warnings == null) {
            this.warnings = new ArrayList<>();
        }
        this.warnings.add(warningsItem);
        return this;
    }

    /**
     * \&quot;errors/warnings\&quot; will tell you what information about the beneficiary you need
     * to collect from the sender.
     *
     * @return warnings
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_WARNINGS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getWarnings() {
        return warnings;
    }

    @JsonProperty(JSON_PROPERTY_WARNINGS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setWarnings(@jakarta.annotation.Nonnull List<String> warnings) {
        this.warnings = warnings;
    }

    /** Return true if this TravelRuleValidateTransactionResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TravelRuleValidateTransactionResponse travelRuleValidateTransactionResponse =
                (TravelRuleValidateTransactionResponse) o;
        return Objects.equals(this.isValid, travelRuleValidateTransactionResponse.isValid)
                && Objects.equals(this.type, travelRuleValidateTransactionResponse.type)
                && Objects.equals(
                        this.beneficiaryAddressType,
                        travelRuleValidateTransactionResponse.beneficiaryAddressType)
                && Objects.equals(
                        this.addressSource, travelRuleValidateTransactionResponse.addressSource)
                && Objects.equals(
                        this.beneficiaryVASPdid,
                        travelRuleValidateTransactionResponse.beneficiaryVASPdid)
                && Objects.equals(
                        this.beneficiaryVASPname,
                        travelRuleValidateTransactionResponse.beneficiaryVASPname)
                && Objects.equals(this.warnings, travelRuleValidateTransactionResponse.warnings);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                isValid,
                type,
                beneficiaryAddressType,
                addressSource,
                beneficiaryVASPdid,
                beneficiaryVASPname,
                warnings);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TravelRuleValidateTransactionResponse {\n");
        sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    beneficiaryAddressType: ")
                .append(toIndentedString(beneficiaryAddressType))
                .append("\n");
        sb.append("    addressSource: ").append(toIndentedString(addressSource)).append("\n");
        sb.append("    beneficiaryVASPdid: ")
                .append(toIndentedString(beneficiaryVASPdid))
                .append("\n");
        sb.append("    beneficiaryVASPname: ")
                .append(toIndentedString(beneficiaryVASPname))
                .append("\n");
        sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `isValid` to the URL query string
        if (getIsValid() != null) {
            joiner.add(
                    String.format(
                            "%sisValid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getIsValid()))));
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `beneficiaryAddressType` to the URL query string
        if (getBeneficiaryAddressType() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryAddressType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getBeneficiaryAddressType()))));
        }

        // add `addressSource` to the URL query string
        if (getAddressSource() != null) {
            joiner.add(
                    String.format(
                            "%saddressSource%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddressSource()))));
        }

        // add `beneficiaryVASPdid` to the URL query string
        if (getBeneficiaryVASPdid() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryVASPdid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBeneficiaryVASPdid()))));
        }

        // add `beneficiaryVASPname` to the URL query string
        if (getBeneficiaryVASPname() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryVASPname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getBeneficiaryVASPname()))));
        }

        // add `warnings` to the URL query string
        if (getWarnings() != null) {
            for (int i = 0; i < getWarnings().size(); i++) {
                joiner.add(
                        String.format(
                                "%swarnings%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getWarnings().get(i)))));
            }
        }

        return joiner.toString();
    }
}
