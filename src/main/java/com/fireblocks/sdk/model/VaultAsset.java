/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.math.BigDecimal;
import java.util.Objects;
import java.util.StringJoiner;

/** VaultAsset */
@JsonPropertyOrder({
    VaultAsset.JSON_PROPERTY_ID,
    VaultAsset.JSON_PROPERTY_TOTAL,
    VaultAsset.JSON_PROPERTY_BALANCE,
    VaultAsset.JSON_PROPERTY_AVAILABLE,
    VaultAsset.JSON_PROPERTY_PENDING,
    VaultAsset.JSON_PROPERTY_FROZEN,
    VaultAsset.JSON_PROPERTY_LOCKED_AMOUNT,
    VaultAsset.JSON_PROPERTY_STAKED,
    VaultAsset.JSON_PROPERTY_TOTAL_STAKED_C_P_U,
    VaultAsset.JSON_PROPERTY_TOTAL_STAKED_NETWORK,
    VaultAsset.JSON_PROPERTY_SELF_STAKED_C_P_U,
    VaultAsset.JSON_PROPERTY_SELF_STAKED_NETWORK,
    VaultAsset.JSON_PROPERTY_PENDING_REFUND_C_P_U,
    VaultAsset.JSON_PROPERTY_PENDING_REFUND_NETWORK,
    VaultAsset.JSON_PROPERTY_BLOCK_HEIGHT,
    VaultAsset.JSON_PROPERTY_BLOCK_HASH,
    VaultAsset.JSON_PROPERTY_REWARDS_INFO
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class VaultAsset {
    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nullable private String id;

    public static final String JSON_PROPERTY_TOTAL = "total";
    @jakarta.annotation.Nullable private String total;

    public static final String JSON_PROPERTY_BALANCE = "balance";
    @jakarta.annotation.Nullable private String balance;

    public static final String JSON_PROPERTY_AVAILABLE = "available";
    @jakarta.annotation.Nullable private String available;

    public static final String JSON_PROPERTY_PENDING = "pending";
    @jakarta.annotation.Nullable private String pending;

    public static final String JSON_PROPERTY_FROZEN = "frozen";
    @jakarta.annotation.Nullable private String frozen;

    public static final String JSON_PROPERTY_LOCKED_AMOUNT = "lockedAmount";
    @jakarta.annotation.Nullable private String lockedAmount;

    public static final String JSON_PROPERTY_STAKED = "staked";
    @jakarta.annotation.Nullable private String staked;

    public static final String JSON_PROPERTY_TOTAL_STAKED_C_P_U = "totalStakedCPU";
    @jakarta.annotation.Nullable private BigDecimal totalStakedCPU;

    public static final String JSON_PROPERTY_TOTAL_STAKED_NETWORK = "totalStakedNetwork";
    @jakarta.annotation.Nullable private String totalStakedNetwork;

    public static final String JSON_PROPERTY_SELF_STAKED_C_P_U = "selfStakedCPU";
    @jakarta.annotation.Nullable private String selfStakedCPU;

    public static final String JSON_PROPERTY_SELF_STAKED_NETWORK = "selfStakedNetwork";
    @jakarta.annotation.Nullable private String selfStakedNetwork;

    public static final String JSON_PROPERTY_PENDING_REFUND_C_P_U = "pendingRefundCPU";
    @jakarta.annotation.Nullable private String pendingRefundCPU;

    public static final String JSON_PROPERTY_PENDING_REFUND_NETWORK = "pendingRefundNetwork";
    @jakarta.annotation.Nullable private String pendingRefundNetwork;

    public static final String JSON_PROPERTY_BLOCK_HEIGHT = "blockHeight";
    @jakarta.annotation.Nullable private String blockHeight;

    public static final String JSON_PROPERTY_BLOCK_HASH = "blockHash";
    @jakarta.annotation.Nullable private String blockHash;

    public static final String JSON_PROPERTY_REWARDS_INFO = "rewardsInfo";
    @jakarta.annotation.Nullable private RewardsInfo rewardsInfo;

    public VaultAsset() {}

    public VaultAsset id(@jakarta.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public VaultAsset total(@jakarta.annotation.Nullable String total) {
        this.total = total;
        return this;
    }

    /**
     * The total wallet balance. In EOS this value includes the network balance, self staking and
     * pending refund. For all other coins it is the balance as it appears on the blockchain.
     *
     * @return total
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTotal() {
        return total;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotal(@jakarta.annotation.Nullable String total) {
        this.total = total;
    }

    public VaultAsset balance(@jakarta.annotation.Nullable String balance) {
        this.balance = balance;
        return this;
    }

    /**
     * Deprecated - replaced by \&quot;total\&quot;
     *
     * @return balance
     * @deprecated
     */
    @Deprecated
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BALANCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBalance() {
        return balance;
    }

    @JsonProperty(JSON_PROPERTY_BALANCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBalance(@jakarta.annotation.Nullable String balance) {
        this.balance = balance;
    }

    public VaultAsset available(@jakarta.annotation.Nullable String available) {
        this.available = available;
        return this;
    }

    /**
     * Funds available for transfer. Equals the blockchain balance minus any locked amounts
     *
     * @return available
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AVAILABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAvailable() {
        return available;
    }

    @JsonProperty(JSON_PROPERTY_AVAILABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAvailable(@jakarta.annotation.Nullable String available) {
        this.available = available;
    }

    public VaultAsset pending(@jakarta.annotation.Nullable String pending) {
        this.pending = pending;
        return this;
    }

    /**
     * The cumulative balance of all transactions pending to be cleared
     *
     * @return pending
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PENDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPending() {
        return pending;
    }

    @JsonProperty(JSON_PROPERTY_PENDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPending(@jakarta.annotation.Nullable String pending) {
        this.pending = pending;
    }

    public VaultAsset frozen(@jakarta.annotation.Nullable String frozen) {
        this.frozen = frozen;
        return this;
    }

    /**
     * The cumulative frozen balance
     *
     * @return frozen
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FROZEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFrozen() {
        return frozen;
    }

    @JsonProperty(JSON_PROPERTY_FROZEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFrozen(@jakarta.annotation.Nullable String frozen) {
        this.frozen = frozen;
    }

    public VaultAsset lockedAmount(@jakarta.annotation.Nullable String lockedAmount) {
        this.lockedAmount = lockedAmount;
        return this;
    }

    /**
     * Funds in outgoing transactions that are not yet published to the network
     *
     * @return lockedAmount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LOCKED_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLockedAmount() {
        return lockedAmount;
    }

    @JsonProperty(JSON_PROPERTY_LOCKED_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLockedAmount(@jakarta.annotation.Nullable String lockedAmount) {
        this.lockedAmount = lockedAmount;
    }

    public VaultAsset staked(@jakarta.annotation.Nullable String staked) {
        this.staked = staked;
        return this;
    }

    /**
     * Staked balance
     *
     * @return staked
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STAKED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getStaked() {
        return staked;
    }

    @JsonProperty(JSON_PROPERTY_STAKED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStaked(@jakarta.annotation.Nullable String staked) {
        this.staked = staked;
    }

    public VaultAsset totalStakedCPU(@jakarta.annotation.Nullable BigDecimal totalStakedCPU) {
        this.totalStakedCPU = totalStakedCPU;
        return this;
    }

    /**
     * Deprecated
     *
     * @return totalStakedCPU
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL_STAKED_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getTotalStakedCPU() {
        return totalStakedCPU;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_STAKED_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalStakedCPU(@jakarta.annotation.Nullable BigDecimal totalStakedCPU) {
        this.totalStakedCPU = totalStakedCPU;
    }

    public VaultAsset totalStakedNetwork(@jakarta.annotation.Nullable String totalStakedNetwork) {
        this.totalStakedNetwork = totalStakedNetwork;
        return this;
    }

    /**
     * Deprecated
     *
     * @return totalStakedNetwork
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL_STAKED_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTotalStakedNetwork() {
        return totalStakedNetwork;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_STAKED_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalStakedNetwork(@jakarta.annotation.Nullable String totalStakedNetwork) {
        this.totalStakedNetwork = totalStakedNetwork;
    }

    public VaultAsset selfStakedCPU(@jakarta.annotation.Nullable String selfStakedCPU) {
        this.selfStakedCPU = selfStakedCPU;
        return this;
    }

    /**
     * Deprecated
     *
     * @return selfStakedCPU
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SELF_STAKED_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSelfStakedCPU() {
        return selfStakedCPU;
    }

    @JsonProperty(JSON_PROPERTY_SELF_STAKED_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelfStakedCPU(@jakarta.annotation.Nullable String selfStakedCPU) {
        this.selfStakedCPU = selfStakedCPU;
    }

    public VaultAsset selfStakedNetwork(@jakarta.annotation.Nullable String selfStakedNetwork) {
        this.selfStakedNetwork = selfStakedNetwork;
        return this;
    }

    /**
     * Deprecated
     *
     * @return selfStakedNetwork
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SELF_STAKED_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSelfStakedNetwork() {
        return selfStakedNetwork;
    }

    @JsonProperty(JSON_PROPERTY_SELF_STAKED_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelfStakedNetwork(@jakarta.annotation.Nullable String selfStakedNetwork) {
        this.selfStakedNetwork = selfStakedNetwork;
    }

    public VaultAsset pendingRefundCPU(@jakarta.annotation.Nullable String pendingRefundCPU) {
        this.pendingRefundCPU = pendingRefundCPU;
        return this;
    }

    /**
     * Deprecated
     *
     * @return pendingRefundCPU
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PENDING_REFUND_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPendingRefundCPU() {
        return pendingRefundCPU;
    }

    @JsonProperty(JSON_PROPERTY_PENDING_REFUND_C_P_U)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPendingRefundCPU(@jakarta.annotation.Nullable String pendingRefundCPU) {
        this.pendingRefundCPU = pendingRefundCPU;
    }

    public VaultAsset pendingRefundNetwork(
            @jakarta.annotation.Nullable String pendingRefundNetwork) {
        this.pendingRefundNetwork = pendingRefundNetwork;
        return this;
    }

    /**
     * Deprecated
     *
     * @return pendingRefundNetwork
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PENDING_REFUND_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPendingRefundNetwork() {
        return pendingRefundNetwork;
    }

    @JsonProperty(JSON_PROPERTY_PENDING_REFUND_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPendingRefundNetwork(@jakarta.annotation.Nullable String pendingRefundNetwork) {
        this.pendingRefundNetwork = pendingRefundNetwork;
    }

    public VaultAsset blockHeight(@jakarta.annotation.Nullable String blockHeight) {
        this.blockHeight = blockHeight;
        return this;
    }

    /**
     * Get blockHeight
     *
     * @return blockHeight
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BLOCK_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBlockHeight() {
        return blockHeight;
    }

    @JsonProperty(JSON_PROPERTY_BLOCK_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBlockHeight(@jakarta.annotation.Nullable String blockHeight) {
        this.blockHeight = blockHeight;
    }

    public VaultAsset blockHash(@jakarta.annotation.Nullable String blockHash) {
        this.blockHash = blockHash;
        return this;
    }

    /**
     * Get blockHash
     *
     * @return blockHash
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BLOCK_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBlockHash() {
        return blockHash;
    }

    @JsonProperty(JSON_PROPERTY_BLOCK_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBlockHash(@jakarta.annotation.Nullable String blockHash) {
        this.blockHash = blockHash;
    }

    public VaultAsset rewardsInfo(@jakarta.annotation.Nullable RewardsInfo rewardsInfo) {
        this.rewardsInfo = rewardsInfo;
        return this;
    }

    /**
     * Get rewardsInfo
     *
     * @return rewardsInfo
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_REWARDS_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RewardsInfo getRewardsInfo() {
        return rewardsInfo;
    }

    @JsonProperty(JSON_PROPERTY_REWARDS_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRewardsInfo(@jakarta.annotation.Nullable RewardsInfo rewardsInfo) {
        this.rewardsInfo = rewardsInfo;
    }

    /** Return true if this VaultAsset object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VaultAsset vaultAsset = (VaultAsset) o;
        return Objects.equals(this.id, vaultAsset.id)
                && Objects.equals(this.total, vaultAsset.total)
                && Objects.equals(this.balance, vaultAsset.balance)
                && Objects.equals(this.available, vaultAsset.available)
                && Objects.equals(this.pending, vaultAsset.pending)
                && Objects.equals(this.frozen, vaultAsset.frozen)
                && Objects.equals(this.lockedAmount, vaultAsset.lockedAmount)
                && Objects.equals(this.staked, vaultAsset.staked)
                && Objects.equals(this.totalStakedCPU, vaultAsset.totalStakedCPU)
                && Objects.equals(this.totalStakedNetwork, vaultAsset.totalStakedNetwork)
                && Objects.equals(this.selfStakedCPU, vaultAsset.selfStakedCPU)
                && Objects.equals(this.selfStakedNetwork, vaultAsset.selfStakedNetwork)
                && Objects.equals(this.pendingRefundCPU, vaultAsset.pendingRefundCPU)
                && Objects.equals(this.pendingRefundNetwork, vaultAsset.pendingRefundNetwork)
                && Objects.equals(this.blockHeight, vaultAsset.blockHeight)
                && Objects.equals(this.blockHash, vaultAsset.blockHash)
                && Objects.equals(this.rewardsInfo, vaultAsset.rewardsInfo);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                id,
                total,
                balance,
                available,
                pending,
                frozen,
                lockedAmount,
                staked,
                totalStakedCPU,
                totalStakedNetwork,
                selfStakedCPU,
                selfStakedNetwork,
                pendingRefundCPU,
                pendingRefundNetwork,
                blockHeight,
                blockHash,
                rewardsInfo);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VaultAsset {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
        sb.append("    available: ").append(toIndentedString(available)).append("\n");
        sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
        sb.append("    frozen: ").append(toIndentedString(frozen)).append("\n");
        sb.append("    lockedAmount: ").append(toIndentedString(lockedAmount)).append("\n");
        sb.append("    staked: ").append(toIndentedString(staked)).append("\n");
        sb.append("    totalStakedCPU: ").append(toIndentedString(totalStakedCPU)).append("\n");
        sb.append("    totalStakedNetwork: ")
                .append(toIndentedString(totalStakedNetwork))
                .append("\n");
        sb.append("    selfStakedCPU: ").append(toIndentedString(selfStakedCPU)).append("\n");
        sb.append("    selfStakedNetwork: ")
                .append(toIndentedString(selfStakedNetwork))
                .append("\n");
        sb.append("    pendingRefundCPU: ").append(toIndentedString(pendingRefundCPU)).append("\n");
        sb.append("    pendingRefundNetwork: ")
                .append(toIndentedString(pendingRefundNetwork))
                .append("\n");
        sb.append("    blockHeight: ").append(toIndentedString(blockHeight)).append("\n");
        sb.append("    blockHash: ").append(toIndentedString(blockHash)).append("\n");
        sb.append("    rewardsInfo: ").append(toIndentedString(rewardsInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `total` to the URL query string
        if (getTotal() != null) {
            joiner.add(
                    String.format(
                            "%stotal%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTotal()))));
        }

        // add `balance` to the URL query string
        if (getBalance() != null) {
            joiner.add(
                    String.format(
                            "%sbalance%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBalance()))));
        }

        // add `available` to the URL query string
        if (getAvailable() != null) {
            joiner.add(
                    String.format(
                            "%savailable%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAvailable()))));
        }

        // add `pending` to the URL query string
        if (getPending() != null) {
            joiner.add(
                    String.format(
                            "%spending%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPending()))));
        }

        // add `frozen` to the URL query string
        if (getFrozen() != null) {
            joiner.add(
                    String.format(
                            "%sfrozen%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getFrozen()))));
        }

        // add `lockedAmount` to the URL query string
        if (getLockedAmount() != null) {
            joiner.add(
                    String.format(
                            "%slockedAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getLockedAmount()))));
        }

        // add `staked` to the URL query string
        if (getStaked() != null) {
            joiner.add(
                    String.format(
                            "%sstaked%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStaked()))));
        }

        // add `totalStakedCPU` to the URL query string
        if (getTotalStakedCPU() != null) {
            joiner.add(
                    String.format(
                            "%stotalStakedCPU%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTotalStakedCPU()))));
        }

        // add `totalStakedNetwork` to the URL query string
        if (getTotalStakedNetwork() != null) {
            joiner.add(
                    String.format(
                            "%stotalStakedNetwork%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTotalStakedNetwork()))));
        }

        // add `selfStakedCPU` to the URL query string
        if (getSelfStakedCPU() != null) {
            joiner.add(
                    String.format(
                            "%sselfStakedCPU%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSelfStakedCPU()))));
        }

        // add `selfStakedNetwork` to the URL query string
        if (getSelfStakedNetwork() != null) {
            joiner.add(
                    String.format(
                            "%sselfStakedNetwork%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSelfStakedNetwork()))));
        }

        // add `pendingRefundCPU` to the URL query string
        if (getPendingRefundCPU() != null) {
            joiner.add(
                    String.format(
                            "%spendingRefundCPU%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPendingRefundCPU()))));
        }

        // add `pendingRefundNetwork` to the URL query string
        if (getPendingRefundNetwork() != null) {
            joiner.add(
                    String.format(
                            "%spendingRefundNetwork%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getPendingRefundNetwork()))));
        }

        // add `blockHeight` to the URL query string
        if (getBlockHeight() != null) {
            joiner.add(
                    String.format(
                            "%sblockHeight%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBlockHeight()))));
        }

        // add `blockHash` to the URL query string
        if (getBlockHash() != null) {
            joiner.add(
                    String.format(
                            "%sblockHash%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBlockHash()))));
        }

        // add `rewardsInfo` to the URL query string
        if (getRewardsInfo() != null) {
            joiner.add(getRewardsInfo().toUrlQueryString(prefix + "rewardsInfo" + suffix));
        }

        return joiner.toString();
    }
}
