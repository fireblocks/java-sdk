/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** LayerZeroAdapterCreateParams */
@JsonPropertyOrder({
    LayerZeroAdapterCreateParams.JSON_PROPERTY_TOKEN_LINK_ID,
    LayerZeroAdapterCreateParams.JSON_PROPERTY_DELEGATE_ADDRESS,
    LayerZeroAdapterCreateParams.JSON_PROPERTY_DEFAULT_ADMIN_ADDRESS,
    LayerZeroAdapterCreateParams.JSON_PROPERTY_PAUSER_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LayerZeroAdapterCreateParams {
    public static final String JSON_PROPERTY_TOKEN_LINK_ID = "tokenLinkId";
    private String tokenLinkId;

    public static final String JSON_PROPERTY_DELEGATE_ADDRESS = "delegateAddress";
    private String delegateAddress;

    public static final String JSON_PROPERTY_DEFAULT_ADMIN_ADDRESS = "defaultAdminAddress";
    private String defaultAdminAddress;

    public static final String JSON_PROPERTY_PAUSER_ADDRESS = "pauserAddress";
    private String pauserAddress;

    public LayerZeroAdapterCreateParams() {}

    public LayerZeroAdapterCreateParams tokenLinkId(String tokenLinkId) {
        this.tokenLinkId = tokenLinkId;
        return this;
    }

    /**
     * The token link id of the base token to deploy the adapters for
     *
     * @return tokenLinkId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TOKEN_LINK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTokenLinkId() {
        return tokenLinkId;
    }

    @JsonProperty(JSON_PROPERTY_TOKEN_LINK_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTokenLinkId(String tokenLinkId) {
        this.tokenLinkId = tokenLinkId;
    }

    public LayerZeroAdapterCreateParams delegateAddress(String delegateAddress) {
        this.delegateAddress = delegateAddress;
        return this;
    }

    /**
     * Address that will receive &#x60;CONTRACT_ADMIN_ROLE&#x60;.
     *
     * @return delegateAddress
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DELEGATE_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDelegateAddress() {
        return delegateAddress;
    }

    @JsonProperty(JSON_PROPERTY_DELEGATE_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDelegateAddress(String delegateAddress) {
        this.delegateAddress = delegateAddress;
    }

    public LayerZeroAdapterCreateParams defaultAdminAddress(String defaultAdminAddress) {
        this.defaultAdminAddress = defaultAdminAddress;
        return this;
    }

    /**
     * Address that will receive &#x60;DEFAULT_ADMIN_ROLE&#x60; on the adapter contract.
     *
     * @return defaultAdminAddress
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DEFAULT_ADMIN_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDefaultAdminAddress() {
        return defaultAdminAddress;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_ADMIN_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultAdminAddress(String defaultAdminAddress) {
        this.defaultAdminAddress = defaultAdminAddress;
    }

    public LayerZeroAdapterCreateParams pauserAddress(String pauserAddress) {
        this.pauserAddress = pauserAddress;
        return this;
    }

    /**
     * Address that will receive &#x60;PAUSER_ROLE&#x60;.
     *
     * @return pauserAddress
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PAUSER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getPauserAddress() {
        return pauserAddress;
    }

    @JsonProperty(JSON_PROPERTY_PAUSER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPauserAddress(String pauserAddress) {
        this.pauserAddress = pauserAddress;
    }

    /** Return true if this LayerZeroAdapterCreateParams object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LayerZeroAdapterCreateParams layerZeroAdapterCreateParams =
                (LayerZeroAdapterCreateParams) o;
        return Objects.equals(this.tokenLinkId, layerZeroAdapterCreateParams.tokenLinkId)
                && Objects.equals(
                        this.delegateAddress, layerZeroAdapterCreateParams.delegateAddress)
                && Objects.equals(
                        this.defaultAdminAddress, layerZeroAdapterCreateParams.defaultAdminAddress)
                && Objects.equals(this.pauserAddress, layerZeroAdapterCreateParams.pauserAddress);
    }

    @Override
    public int hashCode() {
        return Objects.hash(tokenLinkId, delegateAddress, defaultAdminAddress, pauserAddress);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LayerZeroAdapterCreateParams {\n");
        sb.append("    tokenLinkId: ").append(toIndentedString(tokenLinkId)).append("\n");
        sb.append("    delegateAddress: ").append(toIndentedString(delegateAddress)).append("\n");
        sb.append("    defaultAdminAddress: ")
                .append(toIndentedString(defaultAdminAddress))
                .append("\n");
        sb.append("    pauserAddress: ").append(toIndentedString(pauserAddress)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `tokenLinkId` to the URL query string
        if (getTokenLinkId() != null) {
            joiner.add(
                    String.format(
                            "%stokenLinkId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getTokenLinkId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `delegateAddress` to the URL query string
        if (getDelegateAddress() != null) {
            joiner.add(
                    String.format(
                            "%sdelegateAddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getDelegateAddress()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `defaultAdminAddress` to the URL query string
        if (getDefaultAdminAddress() != null) {
            joiner.add(
                    String.format(
                            "%sdefaultAdminAddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getDefaultAdminAddress()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `pauserAddress` to the URL query string
        if (getPauserAddress() != null) {
            joiner.add(
                    String.format(
                            "%spauserAddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getPauserAddress()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
