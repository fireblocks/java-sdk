/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.OneTimeAddress;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * DestinationTransferPeerPath
 */
@JsonPropertyOrder({
  DestinationTransferPeerPath.JSON_PROPERTY_TYPE,
  DestinationTransferPeerPath.JSON_PROPERTY_SUB_TYPE,
  DestinationTransferPeerPath.JSON_PROPERTY_ID,
  DestinationTransferPeerPath.JSON_PROPERTY_NAME,
  DestinationTransferPeerPath.JSON_PROPERTY_WALLET_ID,
  DestinationTransferPeerPath.JSON_PROPERTY_ONE_TIME_ADDRESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DestinationTransferPeerPath {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    VAULT_ACCOUNT("VAULT_ACCOUNT"),
    
    EXCHANGE_ACCOUNT("EXCHANGE_ACCOUNT"),
    
    INTERNAL_WALLET("INTERNAL_WALLET"),
    
    EXTERNAL_WALLET("EXTERNAL_WALLET"),
    
    NETWORK_CONNECTION("NETWORK_CONNECTION"),
    
    FIAT_ACCOUNT("FIAT_ACCOUNT"),
    
    COMPOUND("COMPOUND"),
    
    GAS_STATION("GAS_STATION"),
    
    ONE_TIME_ADDRESS("ONE_TIME_ADDRESS"),
    
    UNKNOWN("UNKNOWN"),
    
    END_USER_WALLET("END_USER_WALLET");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Gets or Sets subType
   */
  public enum SubTypeEnum {
    BINANCE("BINANCE"),
    
    BINANCEUS("BINANCEUS"),
    
    BITFINEX("BITFINEX"),
    
    BITHUMB("BITHUMB"),
    
    BITMEX("BITMEX"),
    
    BITSO("BITSO"),
    
    BITSTAMP("BITSTAMP"),
    
    BITTREX("BITTREX"),
    
    BLINC("BLINC"),
    
    BYBIT("BYBIT"),
    
    CIRCLE("CIRCLE"),
    
    COINBASEEXCHANGE("COINBASEEXCHANGE"),
    
    COINBASEPRO("COINBASEPRO"),
    
    COINMETRO("COINMETRO"),
    
    COINSPRO("COINSPRO"),
    
    CRYPTOCOM("CRYPTOCOM"),
    
    DERIBIT("DERIBIT"),
    
    GEMINI("GEMINI"),
    
    HITBTC("HITBTC"),
    
    HUOBI("HUOBI"),
    
    INDEPENDENTRESERVE("INDEPENDENTRESERVE"),
    
    KORBIT("KORBIT"),
    
    KRAKEN("KRAKEN"),
    
    KRAKENINTL("KRAKENINTL"),
    
    KUCOIN("KUCOIN"),
    
    LIQUID("LIQUID"),
    
    OKCOIN("OKCOIN"),
    
    OKEX("OKEX"),
    
    PAXOS("PAXOS"),
    
    POLONIEX("POLONIEX"),
    
    EXTERNAL("External"),
    
    INTERNAL("Internal");

    private String value;

    SubTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubTypeEnum fromValue(String value) {
      for (SubTypeEnum b : SubTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SUB_TYPE = "subType";
  private SubTypeEnum subType;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_WALLET_ID = "walletId";
  private UUID walletId;

  public static final String JSON_PROPERTY_ONE_TIME_ADDRESS = "oneTimeAddress";
  private OneTimeAddress oneTimeAddress;

  public DestinationTransferPeerPath() { 
  }

  public DestinationTransferPeerPath type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public DestinationTransferPeerPath subType(SubTypeEnum subType) {
    this.subType = subType;
    return this;
  }

   /**
   * Get subType
   * @return subType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubTypeEnum getSubType() {
    return subType;
  }


  @JsonProperty(JSON_PROPERTY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubType(SubTypeEnum subType) {
    this.subType = subType;
  }


  public DestinationTransferPeerPath id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public DestinationTransferPeerPath name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public DestinationTransferPeerPath walletId(UUID walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * Get walletId
   * @return walletId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getWalletId() {
    return walletId;
  }


  @JsonProperty(JSON_PROPERTY_WALLET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWalletId(UUID walletId) {
    this.walletId = walletId;
  }


  public DestinationTransferPeerPath oneTimeAddress(OneTimeAddress oneTimeAddress) {
    this.oneTimeAddress = oneTimeAddress;
    return this;
  }

   /**
   * Get oneTimeAddress
   * @return oneTimeAddress
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ONE_TIME_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OneTimeAddress getOneTimeAddress() {
    return oneTimeAddress;
  }


  @JsonProperty(JSON_PROPERTY_ONE_TIME_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOneTimeAddress(OneTimeAddress oneTimeAddress) {
    this.oneTimeAddress = oneTimeAddress;
  }


  /**
   * Return true if this DestinationTransferPeerPath object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DestinationTransferPeerPath destinationTransferPeerPath = (DestinationTransferPeerPath) o;
    return Objects.equals(this.type, destinationTransferPeerPath.type) &&
        Objects.equals(this.subType, destinationTransferPeerPath.subType) &&
        Objects.equals(this.id, destinationTransferPeerPath.id) &&
        Objects.equals(this.name, destinationTransferPeerPath.name) &&
        Objects.equals(this.walletId, destinationTransferPeerPath.walletId) &&
        Objects.equals(this.oneTimeAddress, destinationTransferPeerPath.oneTimeAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, subType, id, name, walletId, oneTimeAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DestinationTransferPeerPath {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    oneTimeAddress: ").append(toIndentedString(oneTimeAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

