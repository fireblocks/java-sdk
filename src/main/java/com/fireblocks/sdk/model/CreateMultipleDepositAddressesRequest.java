/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateMultipleDepositAddressesRequest */
@JsonPropertyOrder({
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_VAULT_ACCOUNT_ID,
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_ASSET_ID,
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_COUNT,
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_DESCRIPTIONS,
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM,
    CreateMultipleDepositAddressesRequest.JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM_INDEX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateMultipleDepositAddressesRequest {
    public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
    private Integer vaultAccountId;

    public static final String JSON_PROPERTY_ASSET_ID = "assetId";
    private String assetId;

    public static final String JSON_PROPERTY_COUNT = "count";
    private Integer count;

    public static final String JSON_PROPERTY_DESCRIPTIONS = "descriptions";
    private List<String> descriptions;

    public static final String JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM =
            "vaultAccountToCopyDescFrom";
    private Integer vaultAccountToCopyDescFrom;

    public static final String JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM_INDEX =
            "vaultAccountToCopyDescFromIndex";
    private Integer vaultAccountToCopyDescFromIndex;

    public CreateMultipleDepositAddressesRequest() {}

    public CreateMultipleDepositAddressesRequest vaultAccountId(Integer vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
        return this;
    }

    /**
     * Existing Vault account ID to add deposit addresses to
     *
     * @return vaultAccountId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getVaultAccountId() {
        return vaultAccountId;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVaultAccountId(Integer vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
    }

    public CreateMultipleDepositAddressesRequest assetId(String assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * asset ID
     *
     * @return assetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssetId() {
        return assetId;
    }

    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssetId(String assetId) {
        this.assetId = assetId;
    }

    public CreateMultipleDepositAddressesRequest count(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Count of deposit addresses to issue
     *
     * @return count
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCount() {
        return count;
    }

    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCount(Integer count) {
        this.count = count;
    }

    public CreateMultipleDepositAddressesRequest descriptions(List<String> descriptions) {
        this.descriptions = descriptions;
        return this;
    }

    public CreateMultipleDepositAddressesRequest addDescriptionsItem(String descriptionsItem) {
        if (this.descriptions == null) {
            this.descriptions = new ArrayList<>();
        }
        this.descriptions.add(descriptionsItem);
        return this;
    }

    /**
     * Desctiptions of the newly created addresses
     *
     * @return descriptions
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getDescriptions() {
        return descriptions;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescriptions(List<String> descriptions) {
        this.descriptions = descriptions;
    }

    public CreateMultipleDepositAddressesRequest vaultAccountToCopyDescFrom(
            Integer vaultAccountToCopyDescFrom) {
        this.vaultAccountToCopyDescFrom = vaultAccountToCopyDescFrom;
        return this;
    }

    /**
     * Existing Vault Account ID to copy deposit addresses descriptions from in case no descriptions
     * were provided
     *
     * @return vaultAccountToCopyDescFrom
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getVaultAccountToCopyDescFrom() {
        return vaultAccountToCopyDescFrom;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVaultAccountToCopyDescFrom(Integer vaultAccountToCopyDescFrom) {
        this.vaultAccountToCopyDescFrom = vaultAccountToCopyDescFrom;
    }

    public CreateMultipleDepositAddressesRequest vaultAccountToCopyDescFromIndex(
            Integer vaultAccountToCopyDescFromIndex) {
        this.vaultAccountToCopyDescFromIndex = vaultAccountToCopyDescFromIndex;
        return this;
    }

    /**
     * Existing length within the vault account to copy deposit addresses descriptions from
     *
     * @return vaultAccountToCopyDescFromIndex
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getVaultAccountToCopyDescFromIndex() {
        return vaultAccountToCopyDescFromIndex;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_TO_COPY_DESC_FROM_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVaultAccountToCopyDescFromIndex(Integer vaultAccountToCopyDescFromIndex) {
        this.vaultAccountToCopyDescFromIndex = vaultAccountToCopyDescFromIndex;
    }

    /** Return true if this CreateMultipleDepositAddressesRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateMultipleDepositAddressesRequest createMultipleDepositAddressesRequest =
                (CreateMultipleDepositAddressesRequest) o;
        return Objects.equals(
                        this.vaultAccountId, createMultipleDepositAddressesRequest.vaultAccountId)
                && Objects.equals(this.assetId, createMultipleDepositAddressesRequest.assetId)
                && Objects.equals(this.count, createMultipleDepositAddressesRequest.count)
                && Objects.equals(
                        this.descriptions, createMultipleDepositAddressesRequest.descriptions)
                && Objects.equals(
                        this.vaultAccountToCopyDescFrom,
                        createMultipleDepositAddressesRequest.vaultAccountToCopyDescFrom)
                && Objects.equals(
                        this.vaultAccountToCopyDescFromIndex,
                        createMultipleDepositAddressesRequest.vaultAccountToCopyDescFromIndex);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                vaultAccountId,
                assetId,
                count,
                descriptions,
                vaultAccountToCopyDescFrom,
                vaultAccountToCopyDescFromIndex);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateMultipleDepositAddressesRequest {\n");
        sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
        sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
        sb.append("    vaultAccountToCopyDescFrom: ")
                .append(toIndentedString(vaultAccountToCopyDescFrom))
                .append("\n");
        sb.append("    vaultAccountToCopyDescFromIndex: ")
                .append(toIndentedString(vaultAccountToCopyDescFromIndex))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `vaultAccountId` to the URL query string
        if (getVaultAccountId() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getVaultAccountId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `assetId` to the URL query string
        if (getAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sassetId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getAssetId()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `count` to the URL query string
        if (getCount() != null) {
            joiner.add(
                    String.format(
                            "%scount%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getCount()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `descriptions` to the URL query string
        if (getDescriptions() != null) {
            for (int i = 0; i < getDescriptions().size(); i++) {
                joiner.add(
                        String.format(
                                "%sdescriptions%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                String.valueOf(getDescriptions().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `vaultAccountToCopyDescFrom` to the URL query string
        if (getVaultAccountToCopyDescFrom() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountToCopyDescFrom%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getVaultAccountToCopyDescFrom()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `vaultAccountToCopyDescFromIndex` to the URL query string
        if (getVaultAccountToCopyDescFromIndex() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountToCopyDescFromIndex%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getVaultAccountToCopyDescFromIndex()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
