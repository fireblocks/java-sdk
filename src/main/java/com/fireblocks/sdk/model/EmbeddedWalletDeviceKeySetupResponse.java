/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** EmbeddedWalletDeviceKeySetupResponse */
@JsonPropertyOrder({
    EmbeddedWalletDeviceKeySetupResponse.JSON_PROPERTY_STATUS,
    EmbeddedWalletDeviceKeySetupResponse.JSON_PROPERTY_DEVICE_ID,
    EmbeddedWalletDeviceKeySetupResponse.JSON_PROPERTY_ENABLED,
    EmbeddedWalletDeviceKeySetupResponse.JSON_PROPERTY_SETUP_STATUS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class EmbeddedWalletDeviceKeySetupResponse {
    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nonnull private EmbeddedWalletSetUpStatus status;

    public static final String JSON_PROPERTY_DEVICE_ID = "deviceId";
    @jakarta.annotation.Nonnull private String deviceId;

    public static final String JSON_PROPERTY_ENABLED = "enabled";
    @jakarta.annotation.Nonnull private Boolean enabled;

    public static final String JSON_PROPERTY_SETUP_STATUS = "setupStatus";

    @jakarta.annotation.Nonnull
    private List<EmbeddedWalletDeviceKeySetupResponseSetupStatusInner> setupStatus =
            new ArrayList<>();

    public EmbeddedWalletDeviceKeySetupResponse() {}

    @JsonCreator
    public EmbeddedWalletDeviceKeySetupResponse(
            @JsonProperty(value = JSON_PROPERTY_STATUS, required = true)
                    EmbeddedWalletSetUpStatus status,
            @JsonProperty(value = JSON_PROPERTY_DEVICE_ID, required = true) String deviceId,
            @JsonProperty(value = JSON_PROPERTY_ENABLED, required = true) Boolean enabled,
            @JsonProperty(value = JSON_PROPERTY_SETUP_STATUS, required = true)
                    List<EmbeddedWalletDeviceKeySetupResponseSetupStatusInner> setupStatus) {
        this.status = status;
        this.deviceId = deviceId;
        this.enabled = enabled;
        this.setupStatus = setupStatus;
    }

    public EmbeddedWalletDeviceKeySetupResponse status(
            @jakarta.annotation.Nonnull EmbeddedWalletSetUpStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EmbeddedWalletSetUpStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(@jakarta.annotation.Nonnull EmbeddedWalletSetUpStatus status) {
        this.status = status;
    }

    public EmbeddedWalletDeviceKeySetupResponse deviceId(
            @jakarta.annotation.Nonnull String deviceId) {
        this.deviceId = deviceId;
        return this;
    }

    /**
     * deviceId
     *
     * @return deviceId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DEVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDeviceId() {
        return deviceId;
    }

    @JsonProperty(JSON_PROPERTY_DEVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDeviceId(@jakarta.annotation.Nonnull String deviceId) {
        this.deviceId = deviceId;
    }

    public EmbeddedWalletDeviceKeySetupResponse enabled(
            @jakarta.annotation.Nonnull Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * enabled
     *
     * @return enabled
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getEnabled() {
        return enabled;
    }

    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnabled(@jakarta.annotation.Nonnull Boolean enabled) {
        this.enabled = enabled;
    }

    public EmbeddedWalletDeviceKeySetupResponse setupStatus(
            @jakarta.annotation.Nonnull
                    List<EmbeddedWalletDeviceKeySetupResponseSetupStatusInner> setupStatus) {
        this.setupStatus = setupStatus;
        return this;
    }

    public EmbeddedWalletDeviceKeySetupResponse addSetupStatusItem(
            EmbeddedWalletDeviceKeySetupResponseSetupStatusInner setupStatusItem) {
        if (this.setupStatus == null) {
            this.setupStatus = new ArrayList<>();
        }
        this.setupStatus.add(setupStatusItem);
        return this;
    }

    /**
     * setupStatus
     *
     * @return setupStatus
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SETUP_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<EmbeddedWalletDeviceKeySetupResponseSetupStatusInner> getSetupStatus() {
        return setupStatus;
    }

    @JsonProperty(JSON_PROPERTY_SETUP_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSetupStatus(
            @jakarta.annotation.Nonnull
                    List<EmbeddedWalletDeviceKeySetupResponseSetupStatusInner> setupStatus) {
        this.setupStatus = setupStatus;
    }

    /** Return true if this EmbeddedWalletDeviceKeySetupResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmbeddedWalletDeviceKeySetupResponse embeddedWalletDeviceKeySetupResponse =
                (EmbeddedWalletDeviceKeySetupResponse) o;
        return Objects.equals(this.status, embeddedWalletDeviceKeySetupResponse.status)
                && Objects.equals(this.deviceId, embeddedWalletDeviceKeySetupResponse.deviceId)
                && Objects.equals(this.enabled, embeddedWalletDeviceKeySetupResponse.enabled)
                && Objects.equals(
                        this.setupStatus, embeddedWalletDeviceKeySetupResponse.setupStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(status, deviceId, enabled, setupStatus);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EmbeddedWalletDeviceKeySetupResponse {\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    setupStatus: ").append(toIndentedString(setupStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(getStatus().toUrlQueryString(prefix + "status" + suffix));
        }

        // add `deviceId` to the URL query string
        if (getDeviceId() != null) {
            joiner.add(
                    String.format(
                            "%sdeviceId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDeviceId()))));
        }

        // add `enabled` to the URL query string
        if (getEnabled() != null) {
            joiner.add(
                    String.format(
                            "%senabled%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getEnabled()))));
        }

        // add `setupStatus` to the URL query string
        if (getSetupStatus() != null) {
            for (int i = 0; i < getSetupStatus().size(); i++) {
                if (getSetupStatus().get(i) != null) {
                    joiner.add(
                            getSetupStatus()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%ssetupStatus%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}
