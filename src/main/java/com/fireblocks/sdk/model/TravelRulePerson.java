/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;
import java.util.StringJoiner;

/** TravelRulePerson */
@JsonPropertyOrder({
    TravelRulePerson.JSON_PROPERTY_NATURAL_PERSON,
    TravelRulePerson.JSON_PROPERTY_LEGAL_PERSON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TravelRulePerson {
    public static final String JSON_PROPERTY_NATURAL_PERSON = "naturalPerson";
    private TravelRuleNaturalPerson naturalPerson;

    public static final String JSON_PROPERTY_LEGAL_PERSON = "legalPerson";
    private TravelRuleLegalPerson legalPerson;

    public TravelRulePerson() {}

    public TravelRulePerson naturalPerson(TravelRuleNaturalPerson naturalPerson) {
        this.naturalPerson = naturalPerson;
        return this;
    }

    /**
     * Get naturalPerson
     *
     * @return naturalPerson
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NATURAL_PERSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRuleNaturalPerson getNaturalPerson() {
        return naturalPerson;
    }

    @JsonProperty(JSON_PROPERTY_NATURAL_PERSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNaturalPerson(TravelRuleNaturalPerson naturalPerson) {
        this.naturalPerson = naturalPerson;
    }

    public TravelRulePerson legalPerson(TravelRuleLegalPerson legalPerson) {
        this.legalPerson = legalPerson;
        return this;
    }

    /**
     * Get legalPerson
     *
     * @return legalPerson
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LEGAL_PERSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRuleLegalPerson getLegalPerson() {
        return legalPerson;
    }

    @JsonProperty(JSON_PROPERTY_LEGAL_PERSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLegalPerson(TravelRuleLegalPerson legalPerson) {
        this.legalPerson = legalPerson;
    }

    /** Return true if this TravelRulePerson object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TravelRulePerson travelRulePerson = (TravelRulePerson) o;
        return Objects.equals(this.naturalPerson, travelRulePerson.naturalPerson)
                && Objects.equals(this.legalPerson, travelRulePerson.legalPerson);
    }

    @Override
    public int hashCode() {
        return Objects.hash(naturalPerson, legalPerson);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TravelRulePerson {\n");
        sb.append("    naturalPerson: ").append(toIndentedString(naturalPerson)).append("\n");
        sb.append("    legalPerson: ").append(toIndentedString(legalPerson)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `naturalPerson` to the URL query string
        if (getNaturalPerson() != null) {
            joiner.add(getNaturalPerson().toUrlQueryString(prefix + "naturalPerson" + suffix));
        }

        // add `legalPerson` to the URL query string
        if (getLegalPerson() != null) {
            joiner.add(getLegalPerson().toUrlQueryString(prefix + "legalPerson" + suffix));
        }

        return joiner.toString();
    }
}
