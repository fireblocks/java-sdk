/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** ExecutionStep */
@JsonPropertyOrder({
    ExecutionStep.JSON_PROPERTY_TYPE,
    ExecutionStep.JSON_PROPERTY_STATUS,
    ExecutionStep.JSON_PROPERTY_FEE,
    ExecutionStep.JSON_PROPERTY_TX_ID,
    ExecutionStep.JSON_PROPERTY_TX_HASH,
    ExecutionStep.JSON_PROPERTY_ERROR
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ExecutionStep {
    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nonnull private ExecutionStepType type;

    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nonnull private ExecutionStepStatusEnum status;

    public static final String JSON_PROPERTY_FEE = "fee";
    @jakarta.annotation.Nullable private Fee fee;

    public static final String JSON_PROPERTY_TX_ID = "txId";
    @jakarta.annotation.Nullable private String txId;

    public static final String JSON_PROPERTY_TX_HASH = "txHash";
    @jakarta.annotation.Nullable private String txHash;

    public static final String JSON_PROPERTY_ERROR = "error";
    @jakarta.annotation.Nullable private ExecutionStepError error;

    public ExecutionStep() {}

    @JsonCreator
    public ExecutionStep(
            @JsonProperty(value = JSON_PROPERTY_TYPE, required = true) ExecutionStepType type,
            @JsonProperty(value = JSON_PROPERTY_STATUS, required = true)
                    ExecutionStepStatusEnum status) {
        this.type = type;
        this.status = status;
    }

    public ExecutionStep type(@jakarta.annotation.Nonnull ExecutionStepType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ExecutionStepType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@jakarta.annotation.Nonnull ExecutionStepType type) {
        this.type = type;
    }

    public ExecutionStep status(@jakarta.annotation.Nonnull ExecutionStepStatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ExecutionStepStatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(@jakarta.annotation.Nonnull ExecutionStepStatusEnum status) {
        this.status = status;
    }

    public ExecutionStep fee(@jakarta.annotation.Nullable Fee fee) {
        this.fee = fee;
        return this;
    }

    /**
     * Get fee
     *
     * @return fee
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Fee getFee() {
        return fee;
    }

    @JsonProperty(JSON_PROPERTY_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFee(@jakarta.annotation.Nullable Fee fee) {
        this.fee = fee;
    }

    public ExecutionStep txId(@jakarta.annotation.Nullable String txId) {
        this.txId = txId;
        return this;
    }

    /**
     * Get txId
     *
     * @return txId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TX_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTxId() {
        return txId;
    }

    @JsonProperty(JSON_PROPERTY_TX_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTxId(@jakarta.annotation.Nullable String txId) {
        this.txId = txId;
    }

    public ExecutionStep txHash(@jakarta.annotation.Nullable String txHash) {
        this.txHash = txHash;
        return this;
    }

    /**
     * Get txHash
     *
     * @return txHash
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TX_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTxHash() {
        return txHash;
    }

    @JsonProperty(JSON_PROPERTY_TX_HASH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTxHash(@jakarta.annotation.Nullable String txHash) {
        this.txHash = txHash;
    }

    public ExecutionStep error(@jakarta.annotation.Nullable ExecutionStepError error) {
        this.error = error;
        return this;
    }

    /**
     * Get error
     *
     * @return error
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ERROR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ExecutionStepError getError() {
        return error;
    }

    @JsonProperty(JSON_PROPERTY_ERROR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setError(@jakarta.annotation.Nullable ExecutionStepError error) {
        this.error = error;
    }

    /** Return true if this ExecutionStep object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExecutionStep executionStep = (ExecutionStep) o;
        return Objects.equals(this.type, executionStep.type)
                && Objects.equals(this.status, executionStep.status)
                && Objects.equals(this.fee, executionStep.fee)
                && Objects.equals(this.txId, executionStep.txId)
                && Objects.equals(this.txHash, executionStep.txHash)
                && Objects.equals(this.error, executionStep.error);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, status, fee, txId, txHash, error);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExecutionStep {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
        sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
        sb.append("    txHash: ").append(toIndentedString(txHash)).append("\n");
        sb.append("    error: ").append(toIndentedString(error)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(
                    String.format(
                            "%sstatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
        }

        // add `fee` to the URL query string
        if (getFee() != null) {
            joiner.add(getFee().toUrlQueryString(prefix + "fee" + suffix));
        }

        // add `txId` to the URL query string
        if (getTxId() != null) {
            joiner.add(
                    String.format(
                            "%stxId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTxId()))));
        }

        // add `txHash` to the URL query string
        if (getTxHash() != null) {
            joiner.add(
                    String.format(
                            "%stxHash%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTxHash()))));
        }

        // add `error` to the URL query string
        if (getError() != null) {
            joiner.add(
                    String.format(
                            "%serror%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getError()))));
        }

        return joiner.toString();
    }
}
