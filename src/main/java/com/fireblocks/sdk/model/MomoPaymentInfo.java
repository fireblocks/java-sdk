/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** Mobile Money (MOMO) payment information for African mobile payment services */
@JsonPropertyOrder({
    MomoPaymentInfo.JSON_PROPERTY_RAIL,
    MomoPaymentInfo.JSON_PROPERTY_ADDRESSING_SYSTEM,
    MomoPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME,
    MomoPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME,
    MomoPaymentInfo.JSON_PROPERTY_COUNTRY,
    MomoPaymentInfo.JSON_PROPERTY_MOBILE_PHONE_NUMBER,
    MomoPaymentInfo.JSON_PROPERTY_PROVIDER,
    MomoPaymentInfo.JSON_PROPERTY_BENEFICIARY_DOCUMENT_ID,
    MomoPaymentInfo.JSON_PROPERTY_BENEFICIARY_RELATIONSHIP
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class MomoPaymentInfo {
    /** The payment rail type for mobile money transfers */
    public enum RailEnum {
        MOMO(String.valueOf("MOMO"));

        private String value;

        RailEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RailEnum fromValue(String value) {
            for (RailEnum b : RailEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_RAIL = "rail";
    @jakarta.annotation.Nonnull private RailEnum rail;

    /** The addressing system used for mobile money transfers */
    public enum AddressingSystemEnum {
        MOMO(String.valueOf("MOMO"));

        private String value;

        AddressingSystemEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static AddressingSystemEnum fromValue(String value) {
            for (AddressingSystemEnum b : AddressingSystemEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_ADDRESSING_SYSTEM = "addressingSystem";
    @jakarta.annotation.Nonnull private AddressingSystemEnum addressingSystem;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME = "accountHolderGivenName";
    @jakarta.annotation.Nonnull private String accountHolderGivenName;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME = "accountHolderSurname";
    @jakarta.annotation.Nonnull private String accountHolderSurname;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    @jakarta.annotation.Nonnull private String country;

    public static final String JSON_PROPERTY_MOBILE_PHONE_NUMBER = "mobilePhoneNumber";
    @jakarta.annotation.Nonnull private String mobilePhoneNumber;

    /** The mobile money service provider */
    public enum ProviderEnum {
        M_PESA(String.valueOf("M_PESA")),

        AIRTEL(String.valueOf("AIRTEL")),

        MTN(String.valueOf("MTN")),

        TIGO(String.valueOf("TIGO"));

        private String value;

        ProviderEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ProviderEnum fromValue(String value) {
            for (ProviderEnum b : ProviderEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_PROVIDER = "provider";
    @jakarta.annotation.Nonnull private ProviderEnum provider;

    public static final String JSON_PROPERTY_BENEFICIARY_DOCUMENT_ID = "beneficiaryDocumentId";
    @jakarta.annotation.Nullable private String beneficiaryDocumentId;

    public static final String JSON_PROPERTY_BENEFICIARY_RELATIONSHIP = "beneficiaryRelationship";
    @jakarta.annotation.Nullable private String beneficiaryRelationship;

    public MomoPaymentInfo() {}

    @JsonCreator
    public MomoPaymentInfo(
            @JsonProperty(value = JSON_PROPERTY_RAIL, required = true) RailEnum rail,
            @JsonProperty(value = JSON_PROPERTY_ADDRESSING_SYSTEM, required = true)
                    AddressingSystemEnum addressingSystem,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME, required = true)
                    String accountHolderGivenName,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME, required = true)
                    String accountHolderSurname,
            @JsonProperty(value = JSON_PROPERTY_COUNTRY, required = true) String country,
            @JsonProperty(value = JSON_PROPERTY_MOBILE_PHONE_NUMBER, required = true)
                    String mobilePhoneNumber,
            @JsonProperty(value = JSON_PROPERTY_PROVIDER, required = true) ProviderEnum provider) {
        this.rail = rail;
        this.addressingSystem = addressingSystem;
        this.accountHolderGivenName = accountHolderGivenName;
        this.accountHolderSurname = accountHolderSurname;
        this.country = country;
        this.mobilePhoneNumber = mobilePhoneNumber;
        this.provider = provider;
    }

    public MomoPaymentInfo rail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
        return this;
    }

    /**
     * The payment rail type for mobile money transfers
     *
     * @return rail
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RailEnum getRail() {
        return rail;
    }

    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
    }

    public MomoPaymentInfo addressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
        return this;
    }

    /**
     * The addressing system used for mobile money transfers
     *
     * @return addressingSystem
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AddressingSystemEnum getAddressingSystem() {
        return addressingSystem;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAddressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
    }

    public MomoPaymentInfo accountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
        return this;
    }

    /**
     * The given name (first name) of the account holder
     *
     * @return accountHolderGivenName
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderGivenName() {
        return accountHolderGivenName;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
    }

    public MomoPaymentInfo accountHolderSurname(
            @jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
        return this;
    }

    /**
     * The surname (last name) of the account holder
     *
     * @return accountHolderSurname
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderSurname() {
        return accountHolderSurname;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderSurname(@jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
    }

    public MomoPaymentInfo country(@jakarta.annotation.Nonnull String country) {
        this.country = country;
        return this;
    }

    /**
     * The country for the transfer (ISO 3166-1 alpha-2 code)
     *
     * @return country
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCountry(@jakarta.annotation.Nonnull String country) {
        this.country = country;
    }

    public MomoPaymentInfo mobilePhoneNumber(@jakarta.annotation.Nonnull String mobilePhoneNumber) {
        this.mobilePhoneNumber = mobilePhoneNumber;
        return this;
    }

    /**
     * The mobile phone number associated with the mobile money account
     *
     * @return mobilePhoneNumber
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getMobilePhoneNumber() {
        return mobilePhoneNumber;
    }

    @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMobilePhoneNumber(@jakarta.annotation.Nonnull String mobilePhoneNumber) {
        this.mobilePhoneNumber = mobilePhoneNumber;
    }

    public MomoPaymentInfo provider(@jakarta.annotation.Nonnull ProviderEnum provider) {
        this.provider = provider;
        return this;
    }

    /**
     * The mobile money service provider
     *
     * @return provider
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PROVIDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ProviderEnum getProvider() {
        return provider;
    }

    @JsonProperty(JSON_PROPERTY_PROVIDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProvider(@jakarta.annotation.Nonnull ProviderEnum provider) {
        this.provider = provider;
    }

    public MomoPaymentInfo beneficiaryDocumentId(
            @jakarta.annotation.Nullable String beneficiaryDocumentId) {
        this.beneficiaryDocumentId = beneficiaryDocumentId;
        return this;
    }

    /**
     * The document ID of the beneficiary
     *
     * @return beneficiaryDocumentId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryDocumentId() {
        return beneficiaryDocumentId;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryDocumentId(
            @jakarta.annotation.Nullable String beneficiaryDocumentId) {
        this.beneficiaryDocumentId = beneficiaryDocumentId;
    }

    public MomoPaymentInfo beneficiaryRelationship(
            @jakarta.annotation.Nullable String beneficiaryRelationship) {
        this.beneficiaryRelationship = beneficiaryRelationship;
        return this;
    }

    /**
     * The relationship between sender and beneficiary
     *
     * @return beneficiaryRelationship
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_RELATIONSHIP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryRelationship() {
        return beneficiaryRelationship;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_RELATIONSHIP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryRelationship(
            @jakarta.annotation.Nullable String beneficiaryRelationship) {
        this.beneficiaryRelationship = beneficiaryRelationship;
    }

    /** Return true if this MomoPaymentInfo object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MomoPaymentInfo momoPaymentInfo = (MomoPaymentInfo) o;
        return Objects.equals(this.rail, momoPaymentInfo.rail)
                && Objects.equals(this.addressingSystem, momoPaymentInfo.addressingSystem)
                && Objects.equals(
                        this.accountHolderGivenName, momoPaymentInfo.accountHolderGivenName)
                && Objects.equals(this.accountHolderSurname, momoPaymentInfo.accountHolderSurname)
                && Objects.equals(this.country, momoPaymentInfo.country)
                && Objects.equals(this.mobilePhoneNumber, momoPaymentInfo.mobilePhoneNumber)
                && Objects.equals(this.provider, momoPaymentInfo.provider)
                && Objects.equals(this.beneficiaryDocumentId, momoPaymentInfo.beneficiaryDocumentId)
                && Objects.equals(
                        this.beneficiaryRelationship, momoPaymentInfo.beneficiaryRelationship);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                rail,
                addressingSystem,
                accountHolderGivenName,
                accountHolderSurname,
                country,
                mobilePhoneNumber,
                provider,
                beneficiaryDocumentId,
                beneficiaryRelationship);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MomoPaymentInfo {\n");
        sb.append("    rail: ").append(toIndentedString(rail)).append("\n");
        sb.append("    addressingSystem: ").append(toIndentedString(addressingSystem)).append("\n");
        sb.append("    accountHolderGivenName: ")
                .append(toIndentedString(accountHolderGivenName))
                .append("\n");
        sb.append("    accountHolderSurname: ")
                .append(toIndentedString(accountHolderSurname))
                .append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    mobilePhoneNumber: ")
                .append(toIndentedString(mobilePhoneNumber))
                .append("\n");
        sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
        sb.append("    beneficiaryDocumentId: ")
                .append(toIndentedString(beneficiaryDocumentId))
                .append("\n");
        sb.append("    beneficiaryRelationship: ")
                .append(toIndentedString(beneficiaryRelationship))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `rail` to the URL query string
        if (getRail() != null) {
            joiner.add(
                    String.format(
                            "%srail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getRail()))));
        }

        // add `addressingSystem` to the URL query string
        if (getAddressingSystem() != null) {
            joiner.add(
                    String.format(
                            "%saddressingSystem%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddressingSystem()))));
        }

        // add `accountHolderGivenName` to the URL query string
        if (getAccountHolderGivenName() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderGivenName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderGivenName()))));
        }

        // add `accountHolderSurname` to the URL query string
        if (getAccountHolderSurname() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderSurname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderSurname()))));
        }

        // add `country` to the URL query string
        if (getCountry() != null) {
            joiner.add(
                    String.format(
                            "%scountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
        }

        // add `mobilePhoneNumber` to the URL query string
        if (getMobilePhoneNumber() != null) {
            joiner.add(
                    String.format(
                            "%smobilePhoneNumber%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getMobilePhoneNumber()))));
        }

        // add `provider` to the URL query string
        if (getProvider() != null) {
            joiner.add(
                    String.format(
                            "%sprovider%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getProvider()))));
        }

        // add `beneficiaryDocumentId` to the URL query string
        if (getBeneficiaryDocumentId() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryDocumentId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getBeneficiaryDocumentId()))));
        }

        // add `beneficiaryRelationship` to the URL query string
        if (getBeneficiaryRelationship() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryRelationship%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getBeneficiaryRelationship()))));
        }

        return joiner.toString();
    }
}
