/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** Details of the transaction&#39;s fee. */
@JsonPropertyOrder({
    FeeInfo.JSON_PROPERTY_NETWORK_FEE,
    FeeInfo.JSON_PROPERTY_SERVICE_FEE,
    FeeInfo.JSON_PROPERTY_GAS_PRICE,
    FeeInfo.JSON_PROPERTY_PAID_BY_RELAY,
    FeeInfo.JSON_PROPERTY_RELAY_TYPE,
    FeeInfo.JSON_PROPERTY_RELAY_ID,
    FeeInfo.JSON_PROPERTY_RELAY_NAME,
    FeeInfo.JSON_PROPERTY_FEE_U_S_D
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FeeInfo {
    public static final String JSON_PROPERTY_NETWORK_FEE = "networkFee";
    private String networkFee;

    public static final String JSON_PROPERTY_SERVICE_FEE = "serviceFee";
    private String serviceFee;

    public static final String JSON_PROPERTY_GAS_PRICE = "gasPrice";
    private String gasPrice;

    public static final String JSON_PROPERTY_PAID_BY_RELAY = "paidByRelay";
    private Boolean paidByRelay;

    /** Wether the relay is the same tenant (LOCAL) or another tenant (THIRD_PARTY) */
    public enum RelayTypeEnum {
        LOCAL("LOCAL"),

        THIRD_PARTY("THIRD_PARTY");

        private String value;

        RelayTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RelayTypeEnum fromValue(String value) {
            for (RelayTypeEnum b : RelayTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_RELAY_TYPE = "relayType";
    private RelayTypeEnum relayType;

    public static final String JSON_PROPERTY_RELAY_ID = "relayId";
    private String relayId;

    public static final String JSON_PROPERTY_RELAY_NAME = "relayName";
    private String relayName;

    public static final String JSON_PROPERTY_FEE_U_S_D = "feeUSD";
    private String feeUSD;

    public FeeInfo() {}

    public FeeInfo networkFee(String networkFee) {
        this.networkFee = networkFee;
        return this;
    }

    /**
     * The fee paid to the network
     *
     * @return networkFee
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NETWORK_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNetworkFee() {
        return networkFee;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNetworkFee(String networkFee) {
        this.networkFee = networkFee;
    }

    public FeeInfo serviceFee(String serviceFee) {
        this.serviceFee = serviceFee;
        return this;
    }

    /**
     * The total fee deducted by the exchange from the actual requested amount (serviceFee &#x3D;
     * amount - netAmount)
     *
     * @return serviceFee
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SERVICE_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getServiceFee() {
        return serviceFee;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_FEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServiceFee(String serviceFee) {
        this.serviceFee = serviceFee;
    }

    public FeeInfo gasPrice(String gasPrice) {
        this.gasPrice = gasPrice;
        return this;
    }

    /**
     * Get gasPrice
     *
     * @return gasPrice
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_GAS_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getGasPrice() {
        return gasPrice;
    }

    @JsonProperty(JSON_PROPERTY_GAS_PRICE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGasPrice(String gasPrice) {
        this.gasPrice = gasPrice;
    }

    public FeeInfo paidByRelay(Boolean paidByRelay) {
        this.paidByRelay = paidByRelay;
        return this;
    }

    /**
     * Wether the fee was paid by the relay or not
     *
     * @return paidByRelay
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PAID_BY_RELAY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getPaidByRelay() {
        return paidByRelay;
    }

    @JsonProperty(JSON_PROPERTY_PAID_BY_RELAY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaidByRelay(Boolean paidByRelay) {
        this.paidByRelay = paidByRelay;
    }

    public FeeInfo relayType(RelayTypeEnum relayType) {
        this.relayType = relayType;
        return this;
    }

    /**
     * Wether the relay is the same tenant (LOCAL) or another tenant (THIRD_PARTY)
     *
     * @return relayType
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RELAY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RelayTypeEnum getRelayType() {
        return relayType;
    }

    @JsonProperty(JSON_PROPERTY_RELAY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRelayType(RelayTypeEnum relayType) {
        this.relayType = relayType;
    }

    public FeeInfo relayId(String relayId) {
        this.relayId = relayId;
        return this;
    }

    /**
     * The vault account ID of the relay
     *
     * @return relayId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RELAY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRelayId() {
        return relayId;
    }

    @JsonProperty(JSON_PROPERTY_RELAY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRelayId(String relayId) {
        this.relayId = relayId;
    }

    public FeeInfo relayName(String relayName) {
        this.relayName = relayName;
        return this;
    }

    /**
     * The name of the tenant, only for THIRD_PARTY relays
     *
     * @return relayName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RELAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRelayName() {
        return relayName;
    }

    @JsonProperty(JSON_PROPERTY_RELAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRelayName(String relayName) {
        this.relayName = relayName;
    }

    public FeeInfo feeUSD(String feeUSD) {
        this.feeUSD = feeUSD;
        return this;
    }

    /**
     * The USD value of the fee
     *
     * @return feeUSD
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FEE_U_S_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFeeUSD() {
        return feeUSD;
    }

    @JsonProperty(JSON_PROPERTY_FEE_U_S_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeeUSD(String feeUSD) {
        this.feeUSD = feeUSD;
    }

    /** Return true if this FeeInfo object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FeeInfo feeInfo = (FeeInfo) o;
        return Objects.equals(this.networkFee, feeInfo.networkFee)
                && Objects.equals(this.serviceFee, feeInfo.serviceFee)
                && Objects.equals(this.gasPrice, feeInfo.gasPrice)
                && Objects.equals(this.paidByRelay, feeInfo.paidByRelay)
                && Objects.equals(this.relayType, feeInfo.relayType)
                && Objects.equals(this.relayId, feeInfo.relayId)
                && Objects.equals(this.relayName, feeInfo.relayName)
                && Objects.equals(this.feeUSD, feeInfo.feeUSD);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                networkFee,
                serviceFee,
                gasPrice,
                paidByRelay,
                relayType,
                relayId,
                relayName,
                feeUSD);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class FeeInfo {\n");
        sb.append("    networkFee: ").append(toIndentedString(networkFee)).append("\n");
        sb.append("    serviceFee: ").append(toIndentedString(serviceFee)).append("\n");
        sb.append("    gasPrice: ").append(toIndentedString(gasPrice)).append("\n");
        sb.append("    paidByRelay: ").append(toIndentedString(paidByRelay)).append("\n");
        sb.append("    relayType: ").append(toIndentedString(relayType)).append("\n");
        sb.append("    relayId: ").append(toIndentedString(relayId)).append("\n");
        sb.append("    relayName: ").append(toIndentedString(relayName)).append("\n");
        sb.append("    feeUSD: ").append(toIndentedString(feeUSD)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `networkFee` to the URL query string
        if (getNetworkFee() != null) {
            joiner.add(
                    String.format(
                            "%snetworkFee%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getNetworkFee()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `serviceFee` to the URL query string
        if (getServiceFee() != null) {
            joiner.add(
                    String.format(
                            "%sserviceFee%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getServiceFee()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `gasPrice` to the URL query string
        if (getGasPrice() != null) {
            joiner.add(
                    String.format(
                            "%sgasPrice%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getGasPrice()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `paidByRelay` to the URL query string
        if (getPaidByRelay() != null) {
            joiner.add(
                    String.format(
                            "%spaidByRelay%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getPaidByRelay()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `relayType` to the URL query string
        if (getRelayType() != null) {
            joiner.add(
                    String.format(
                            "%srelayType%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getRelayType()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `relayId` to the URL query string
        if (getRelayId() != null) {
            joiner.add(
                    String.format(
                            "%srelayId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getRelayId()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `relayName` to the URL query string
        if (getRelayName() != null) {
            joiner.add(
                    String.format(
                            "%srelayName%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getRelayName()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `feeUSD` to the URL query string
        if (getFeeUSD() != null) {
            joiner.add(
                    String.format(
                            "%sfeeUSD%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getFeeUSD()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
