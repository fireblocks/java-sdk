/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.PolicyMetadata;
import com.fireblocks.sdk.model.PolicyRule;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * Response object for draft operations
 */
@JsonPropertyOrder({
  DraftResponse.JSON_PROPERTY_STATUS,
  DraftResponse.JSON_PROPERTY_RULES,
  DraftResponse.JSON_PROPERTY_DRAFT_ID,
  DraftResponse.JSON_PROPERTY_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DraftResponse {
  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_RULES = "rules";
  private List<PolicyRule> rules = new ArrayList<>();

  public static final String JSON_PROPERTY_DRAFT_ID = "draftId";
  private String draftId;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private PolicyMetadata metadata;

  public DraftResponse() { 
  }

  public DraftResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Operation status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public DraftResponse rules(List<PolicyRule> rules) {
    this.rules = rules;
    return this;
  }

  public DraftResponse addRulesItem(PolicyRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Draft rules
   * @return rules
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PolicyRule> getRules() {
    return rules;
  }


  @JsonProperty(JSON_PROPERTY_RULES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRules(List<PolicyRule> rules) {
    this.rules = rules;
  }


  public DraftResponse draftId(String draftId) {
    this.draftId = draftId;
    return this;
  }

   /**
   * Draft unique id
   * @return draftId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DRAFT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDraftId() {
    return draftId;
  }


  @JsonProperty(JSON_PROPERTY_DRAFT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDraftId(String draftId) {
    this.draftId = draftId;
  }


  public DraftResponse metadata(PolicyMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PolicyMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(PolicyMetadata metadata) {
    this.metadata = metadata;
  }


  /**
   * Return true if this DraftResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DraftResponse draftResponse = (DraftResponse) o;
    return Objects.equals(this.status, draftResponse.status) &&
        Objects.equals(this.rules, draftResponse.rules) &&
        Objects.equals(this.draftId, draftResponse.draftId) &&
        Objects.equals(this.metadata, draftResponse.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, rules, draftId, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DraftResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    draftId: ").append(toIndentedString(draftId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

