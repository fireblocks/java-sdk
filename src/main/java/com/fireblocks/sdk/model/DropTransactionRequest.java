/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DropTransactionRequest
 */
@JsonPropertyOrder({
  DropTransactionRequest.JSON_PROPERTY_TX_ID,
  DropTransactionRequest.JSON_PROPERTY_FEE_LEVEL,
  DropTransactionRequest.JSON_PROPERTY_GAS_PRICE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DropTransactionRequest {
  public static final String JSON_PROPERTY_TX_ID = "txId";
  private String txId;

  public static final String JSON_PROPERTY_FEE_LEVEL = "feeLevel";
  private String feeLevel;

  public static final String JSON_PROPERTY_GAS_PRICE = "gasPrice";
  private String gasPrice;

  public DropTransactionRequest() { 
  }

  public DropTransactionRequest txId(String txId) {
    this.txId = txId;
    return this;
  }

   /**
   * Get txId
   * @return txId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTxId() {
    return txId;
  }


  @JsonProperty(JSON_PROPERTY_TX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxId(String txId) {
    this.txId = txId;
  }


  public DropTransactionRequest feeLevel(String feeLevel) {
    this.feeLevel = feeLevel;
    return this;
  }

   /**
   * Get feeLevel
   * @return feeLevel
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeeLevel() {
    return feeLevel;
  }


  @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeeLevel(String feeLevel) {
    this.feeLevel = feeLevel;
  }


  public DropTransactionRequest gasPrice(String gasPrice) {
    this.gasPrice = gasPrice;
    return this;
  }

   /**
   * Get gasPrice
   * @return gasPrice
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GAS_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGasPrice() {
    return gasPrice;
  }


  @JsonProperty(JSON_PROPERTY_GAS_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGasPrice(String gasPrice) {
    this.gasPrice = gasPrice;
  }


  /**
   * Return true if this DropTransactionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DropTransactionRequest dropTransactionRequest = (DropTransactionRequest) o;
    return Objects.equals(this.txId, dropTransactionRequest.txId) &&
        Objects.equals(this.feeLevel, dropTransactionRequest.feeLevel) &&
        Objects.equals(this.gasPrice, dropTransactionRequest.gasPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(txId, feeLevel, gasPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DropTransactionRequest {\n");
    sb.append("    txId: ").append(toIndentedString(txId)).append("\n");
    sb.append("    feeLevel: ").append(toIndentedString(feeLevel)).append("\n");
    sb.append("    gasPrice: ").append(toIndentedString(gasPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `txId` to the URL query string
    if (getTxId() != null) {
      joiner.add(String.format("%stxId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTxId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `feeLevel` to the URL query string
    if (getFeeLevel() != null) {
      joiner.add(String.format("%sfeeLevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFeeLevel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `gasPrice` to the URL query string
    if (getGasPrice() != null) {
      joiner.add(String.format("%sgasPrice%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGasPrice()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

