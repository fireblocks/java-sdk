/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;
import java.util.StringJoiner;

/** EstimatedTransactionFeeResponse */
@JsonPropertyOrder({
    EstimatedTransactionFeeResponse.JSON_PROPERTY_LOW,
    EstimatedTransactionFeeResponse.JSON_PROPERTY_MEDIUM,
    EstimatedTransactionFeeResponse.JSON_PROPERTY_HIGH,
    EstimatedTransactionFeeResponse.JSON_PROPERTY_FEE_DETAILS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class EstimatedTransactionFeeResponse {
    public static final String JSON_PROPERTY_LOW = "low";
    @jakarta.annotation.Nonnull private TransactionFee low;

    public static final String JSON_PROPERTY_MEDIUM = "medium";
    @jakarta.annotation.Nonnull private TransactionFee medium;

    public static final String JSON_PROPERTY_HIGH = "high";
    @jakarta.annotation.Nonnull private TransactionFee high;

    public static final String JSON_PROPERTY_FEE_DETAILS = "feeDetails";
    @jakarta.annotation.Nullable private EstimatedFeeDetails feeDetails;

    public EstimatedTransactionFeeResponse() {}

    @JsonCreator
    public EstimatedTransactionFeeResponse(
            @JsonProperty(value = JSON_PROPERTY_LOW, required = true) TransactionFee low,
            @JsonProperty(value = JSON_PROPERTY_MEDIUM, required = true) TransactionFee medium,
            @JsonProperty(value = JSON_PROPERTY_HIGH, required = true) TransactionFee high) {
        this.low = low;
        this.medium = medium;
        this.high = high;
    }

    public EstimatedTransactionFeeResponse low(@jakarta.annotation.Nonnull TransactionFee low) {
        this.low = low;
        return this;
    }

    /**
     * Get low
     *
     * @return low
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LOW)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TransactionFee getLow() {
        return low;
    }

    @JsonProperty(JSON_PROPERTY_LOW)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLow(@jakarta.annotation.Nonnull TransactionFee low) {
        this.low = low;
    }

    public EstimatedTransactionFeeResponse medium(
            @jakarta.annotation.Nonnull TransactionFee medium) {
        this.medium = medium;
        return this;
    }

    /**
     * Get medium
     *
     * @return medium
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_MEDIUM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TransactionFee getMedium() {
        return medium;
    }

    @JsonProperty(JSON_PROPERTY_MEDIUM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMedium(@jakarta.annotation.Nonnull TransactionFee medium) {
        this.medium = medium;
    }

    public EstimatedTransactionFeeResponse high(@jakarta.annotation.Nonnull TransactionFee high) {
        this.high = high;
        return this;
    }

    /**
     * Get high
     *
     * @return high
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HIGH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TransactionFee getHigh() {
        return high;
    }

    @JsonProperty(JSON_PROPERTY_HIGH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHigh(@jakarta.annotation.Nonnull TransactionFee high) {
        this.high = high;
    }

    public EstimatedTransactionFeeResponse feeDetails(
            @jakarta.annotation.Nullable EstimatedFeeDetails feeDetails) {
        this.feeDetails = feeDetails;
        return this;
    }

    /**
     * Get feeDetails
     *
     * @return feeDetails
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FEE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public EstimatedFeeDetails getFeeDetails() {
        return feeDetails;
    }

    @JsonProperty(JSON_PROPERTY_FEE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFeeDetails(@jakarta.annotation.Nullable EstimatedFeeDetails feeDetails) {
        this.feeDetails = feeDetails;
    }

    /** Return true if this EstimatedTransactionFeeResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EstimatedTransactionFeeResponse estimatedTransactionFeeResponse =
                (EstimatedTransactionFeeResponse) o;
        return Objects.equals(this.low, estimatedTransactionFeeResponse.low)
                && Objects.equals(this.medium, estimatedTransactionFeeResponse.medium)
                && Objects.equals(this.high, estimatedTransactionFeeResponse.high)
                && Objects.equals(this.feeDetails, estimatedTransactionFeeResponse.feeDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(low, medium, high, feeDetails);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EstimatedTransactionFeeResponse {\n");
        sb.append("    low: ").append(toIndentedString(low)).append("\n");
        sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
        sb.append("    high: ").append(toIndentedString(high)).append("\n");
        sb.append("    feeDetails: ").append(toIndentedString(feeDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `low` to the URL query string
        if (getLow() != null) {
            joiner.add(getLow().toUrlQueryString(prefix + "low" + suffix));
        }

        // add `medium` to the URL query string
        if (getMedium() != null) {
            joiner.add(getMedium().toUrlQueryString(prefix + "medium" + suffix));
        }

        // add `high` to the URL query string
        if (getHigh() != null) {
            joiner.add(getHigh().toUrlQueryString(prefix + "high" + suffix));
        }

        // add `feeDetails` to the URL query string
        if (getFeeDetails() != null) {
            joiner.add(getFeeDetails().toUrlQueryString(prefix + "feeDetails" + suffix));
        }

        return joiner.toString();
    }
}
