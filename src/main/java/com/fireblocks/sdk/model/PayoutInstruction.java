/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** PayoutInstruction */
@JsonPropertyOrder({
    PayoutInstruction.JSON_PROPERTY_ID,
    PayoutInstruction.JSON_PROPERTY_PAYEE_ACCOUNT,
    PayoutInstruction.JSON_PROPERTY_AMOUNT
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class PayoutInstruction {
    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nullable private String id;

    public static final String JSON_PROPERTY_PAYEE_ACCOUNT = "payeeAccount";
    @jakarta.annotation.Nonnull private PayeeAccount payeeAccount;

    public static final String JSON_PROPERTY_AMOUNT = "amount";
    @jakarta.annotation.Nonnull private InstructionAmount amount;

    public PayoutInstruction() {}

    @JsonCreator
    public PayoutInstruction(
            @JsonProperty(value = JSON_PROPERTY_PAYEE_ACCOUNT, required = true)
                    PayeeAccount payeeAccount,
            @JsonProperty(value = JSON_PROPERTY_AMOUNT, required = true) InstructionAmount amount) {
        this.payeeAccount = payeeAccount;
        this.amount = amount;
    }

    public PayoutInstruction id(@jakarta.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public PayoutInstruction payeeAccount(@jakarta.annotation.Nonnull PayeeAccount payeeAccount) {
        this.payeeAccount = payeeAccount;
        return this;
    }

    /**
     * Get payeeAccount
     *
     * @return payeeAccount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_PAYEE_ACCOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public PayeeAccount getPayeeAccount() {
        return payeeAccount;
    }

    @JsonProperty(JSON_PROPERTY_PAYEE_ACCOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPayeeAccount(@jakarta.annotation.Nonnull PayeeAccount payeeAccount) {
        this.payeeAccount = payeeAccount;
    }

    public PayoutInstruction amount(@jakarta.annotation.Nonnull InstructionAmount amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Get amount
     *
     * @return amount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public InstructionAmount getAmount() {
        return amount;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAmount(@jakarta.annotation.Nonnull InstructionAmount amount) {
        this.amount = amount;
    }

    /** Return true if this PayoutInstruction object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PayoutInstruction payoutInstruction = (PayoutInstruction) o;
        return Objects.equals(this.id, payoutInstruction.id)
                && Objects.equals(this.payeeAccount, payoutInstruction.payeeAccount)
                && Objects.equals(this.amount, payoutInstruction.amount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, payeeAccount, amount);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PayoutInstruction {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    payeeAccount: ").append(toIndentedString(payeeAccount)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `payeeAccount` to the URL query string
        if (getPayeeAccount() != null) {
            joiner.add(getPayeeAccount().toUrlQueryString(prefix + "payeeAccount" + suffix));
        }

        // add `amount` to the URL query string
        if (getAmount() != null) {
            joiner.add(getAmount().toUrlQueryString(prefix + "amount" + suffix));
        }

        return joiner.toString();
    }
}
