/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.InstructionAmount;
import com.fireblocks.sdk.model.PayeeAccount;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * PayoutInstruction
 */
@JsonPropertyOrder({
  PayoutInstruction.JSON_PROPERTY_ID,
  PayoutInstruction.JSON_PROPERTY_PAYEE_ACCOUNT,
  PayoutInstruction.JSON_PROPERTY_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PayoutInstruction {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PAYEE_ACCOUNT = "payeeAccount";
  private PayeeAccount payeeAccount;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private InstructionAmount amount;

  public PayoutInstruction() { 
  }

  public PayoutInstruction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PayoutInstruction payeeAccount(PayeeAccount payeeAccount) {
    this.payeeAccount = payeeAccount;
    return this;
  }

   /**
   * Get payeeAccount
   * @return payeeAccount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYEE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public PayeeAccount getPayeeAccount() {
    return payeeAccount;
  }


  @JsonProperty(JSON_PROPERTY_PAYEE_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayeeAccount(PayeeAccount payeeAccount) {
    this.payeeAccount = payeeAccount;
  }


  public PayoutInstruction amount(InstructionAmount amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InstructionAmount getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(InstructionAmount amount) {
    this.amount = amount;
  }


  /**
   * Return true if this PayoutInstruction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutInstruction payoutInstruction = (PayoutInstruction) o;
    return Objects.equals(this.id, payoutInstruction.id) &&
        Objects.equals(this.payeeAccount, payoutInstruction.payeeAccount) &&
        Objects.equals(this.amount, payoutInstruction.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, payeeAccount, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutInstruction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    payeeAccount: ").append(toIndentedString(payeeAccount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

