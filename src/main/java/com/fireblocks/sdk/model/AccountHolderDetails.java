/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** AccountHolderDetails */
@JsonPropertyOrder({
    AccountHolderDetails.JSON_PROPERTY_NAME,
    AccountHolderDetails.JSON_PROPERTY_CITY,
    AccountHolderDetails.JSON_PROPERTY_COUNTRY,
    AccountHolderDetails.JSON_PROPERTY_SUBDIVISION,
    AccountHolderDetails.JSON_PROPERTY_ADDRESS,
    AccountHolderDetails.JSON_PROPERTY_POSTAL_CODE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class AccountHolderDetails {
    public static final String JSON_PROPERTY_NAME = "name";
    @jakarta.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_CITY = "city";
    @jakarta.annotation.Nullable private String city;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    @jakarta.annotation.Nullable private String country;

    public static final String JSON_PROPERTY_SUBDIVISION = "subdivision";
    @jakarta.annotation.Nullable private String subdivision;

    public static final String JSON_PROPERTY_ADDRESS = "address";
    @jakarta.annotation.Nullable private String address;

    public static final String JSON_PROPERTY_POSTAL_CODE = "postalCode";
    @jakarta.annotation.Nullable private String postalCode;

    public AccountHolderDetails() {}

    @JsonCreator
    public AccountHolderDetails(
            @JsonProperty(value = JSON_PROPERTY_NAME, required = true) String name) {
        this.name = name;
    }

    public AccountHolderDetails name(@jakarta.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Full name of the account holder.
     *
     * @return name
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@jakarta.annotation.Nonnull String name) {
        this.name = name;
    }

    public AccountHolderDetails city(@jakarta.annotation.Nullable String city) {
        this.city = city;
        return this;
    }

    /**
     * Get city
     *
     * @return city
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCity() {
        return city;
    }

    @JsonProperty(JSON_PROPERTY_CITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCity(@jakarta.annotation.Nullable String city) {
        this.city = city;
    }

    public AccountHolderDetails country(@jakarta.annotation.Nullable String country) {
        this.country = country;
        return this;
    }

    /**
     * Country code, as specified in ISO 3166-1 alpha-2.
     *
     * @return country
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountry(@jakarta.annotation.Nullable String country) {
        this.country = country;
    }

    public AccountHolderDetails subdivision(@jakarta.annotation.Nullable String subdivision) {
        this.subdivision = subdivision;
        return this;
    }

    /**
     * Country administrative subdivision, as specified in ISO 3166-2.
     *
     * @return subdivision
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUBDIVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubdivision() {
        return subdivision;
    }

    @JsonProperty(JSON_PROPERTY_SUBDIVISION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubdivision(@jakarta.annotation.Nullable String subdivision) {
        this.subdivision = subdivision;
    }

    public AccountHolderDetails address(@jakarta.annotation.Nullable String address) {
        this.address = address;
        return this;
    }

    /**
     * Account holder street address.
     *
     * @return address
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAddress() {
        return address;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddress(@jakarta.annotation.Nullable String address) {
        this.address = address;
    }

    public AccountHolderDetails postalCode(@jakarta.annotation.Nullable String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * Get postalCode
     *
     * @return postalCode
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPostalCode() {
        return postalCode;
    }

    @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPostalCode(@jakarta.annotation.Nullable String postalCode) {
        this.postalCode = postalCode;
    }

    /** Return true if this AccountHolderDetails object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AccountHolderDetails accountHolderDetails = (AccountHolderDetails) o;
        return Objects.equals(this.name, accountHolderDetails.name)
                && Objects.equals(this.city, accountHolderDetails.city)
                && Objects.equals(this.country, accountHolderDetails.country)
                && Objects.equals(this.subdivision, accountHolderDetails.subdivision)
                && Objects.equals(this.address, accountHolderDetails.address)
                && Objects.equals(this.postalCode, accountHolderDetails.postalCode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, city, country, subdivision, address, postalCode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AccountHolderDetails {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    subdivision: ").append(toIndentedString(subdivision)).append("\n");
        sb.append("    address: ").append(toIndentedString(address)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getName()))));
        }

        // add `city` to the URL query string
        if (getCity() != null) {
            joiner.add(
                    String.format(
                            "%scity%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCity()))));
        }

        // add `country` to the URL query string
        if (getCountry() != null) {
            joiner.add(
                    String.format(
                            "%scountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
        }

        // add `subdivision` to the URL query string
        if (getSubdivision() != null) {
            joiner.add(
                    String.format(
                            "%ssubdivision%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSubdivision()))));
        }

        // add `address` to the URL query string
        if (getAddress() != null) {
            joiner.add(
                    String.format(
                            "%saddress%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddress()))));
        }

        // add `postalCode` to the URL query string
        if (getPostalCode() != null) {
            joiner.add(
                    String.format(
                            "%spostalCode%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPostalCode()))));
        }

        return joiner.toString();
    }
}
