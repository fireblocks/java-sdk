/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.AmlScreeningResult;
import com.fireblocks.sdk.model.AuthorizationInfo;
import com.fireblocks.sdk.model.DestinationTransferPeerPathResponse;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * TransactionResponseDestination
 */
@JsonPropertyOrder({
  TransactionResponseDestination.JSON_PROPERTY_DESTINATION_ADDRESS,
  TransactionResponseDestination.JSON_PROPERTY_DESTINATION_ADDRESS_DESCRIPTION,
  TransactionResponseDestination.JSON_PROPERTY_AMOUNT,
  TransactionResponseDestination.JSON_PROPERTY_AMOUNT_U_S_D,
  TransactionResponseDestination.JSON_PROPERTY_AML_SCREENING_RESULT,
  TransactionResponseDestination.JSON_PROPERTY_DESTINATION,
  TransactionResponseDestination.JSON_PROPERTY_AUTHORIZATION_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransactionResponseDestination {
  public static final String JSON_PROPERTY_DESTINATION_ADDRESS = "destinationAddress";
  private JsonNullable<Object> destinationAddress = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_DESTINATION_ADDRESS_DESCRIPTION = "destinationAddressDescription";
  private JsonNullable<Object> destinationAddressDescription = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private String amount;

  public static final String JSON_PROPERTY_AMOUNT_U_S_D = "amountUSD";
  private String amountUSD;

  public static final String JSON_PROPERTY_AML_SCREENING_RESULT = "amlScreeningResult";
  private AmlScreeningResult amlScreeningResult;

  public static final String JSON_PROPERTY_DESTINATION = "destination";
  private DestinationTransferPeerPathResponse destination;

  public static final String JSON_PROPERTY_AUTHORIZATION_INFO = "authorizationInfo";
  private AuthorizationInfo authorizationInfo;

  public TransactionResponseDestination() { 
  }

  public TransactionResponseDestination destinationAddress(Object destinationAddress) {
    this.destinationAddress = JsonNullable.<Object>of(destinationAddress);
    return this;
  }

   /**
   * Address where the asset was transferred.
   * @return destinationAddress
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDestinationAddress() {
        return destinationAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESTINATION_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDestinationAddress_JsonNullable() {
    return destinationAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_DESTINATION_ADDRESS)
  public void setDestinationAddress_JsonNullable(JsonNullable<Object> destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public void setDestinationAddress(Object destinationAddress) {
    this.destinationAddress = JsonNullable.<Object>of(destinationAddress);
  }


  public TransactionResponseDestination destinationAddressDescription(Object destinationAddressDescription) {
    this.destinationAddressDescription = JsonNullable.<Object>of(destinationAddressDescription);
    return this;
  }

   /**
   * Description of the address.
   * @return destinationAddressDescription
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getDestinationAddressDescription() {
        return destinationAddressDescription.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESTINATION_ADDRESS_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDestinationAddressDescription_JsonNullable() {
    return destinationAddressDescription;
  }
  
  @JsonProperty(JSON_PROPERTY_DESTINATION_ADDRESS_DESCRIPTION)
  public void setDestinationAddressDescription_JsonNullable(JsonNullable<Object> destinationAddressDescription) {
    this.destinationAddressDescription = destinationAddressDescription;
  }

  public void setDestinationAddressDescription(Object destinationAddressDescription) {
    this.destinationAddressDescription = JsonNullable.<Object>of(destinationAddressDescription);
  }


  public TransactionResponseDestination amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The amount to be sent to this destination.
   * @return amount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(String amount) {
    this.amount = amount;
  }


  public TransactionResponseDestination amountUSD(String amountUSD) {
    this.amountUSD = amountUSD;
    return this;
  }

   /**
   * The USD value of the requested amount.
   * @return amountUSD
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT_U_S_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAmountUSD() {
    return amountUSD;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT_U_S_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmountUSD(String amountUSD) {
    this.amountUSD = amountUSD;
  }


  public TransactionResponseDestination amlScreeningResult(AmlScreeningResult amlScreeningResult) {
    this.amlScreeningResult = amlScreeningResult;
    return this;
  }

   /**
   * Get amlScreeningResult
   * @return amlScreeningResult
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AML_SCREENING_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmlScreeningResult getAmlScreeningResult() {
    return amlScreeningResult;
  }


  @JsonProperty(JSON_PROPERTY_AML_SCREENING_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmlScreeningResult(AmlScreeningResult amlScreeningResult) {
    this.amlScreeningResult = amlScreeningResult;
  }


  public TransactionResponseDestination destination(DestinationTransferPeerPathResponse destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DestinationTransferPeerPathResponse getDestination() {
    return destination;
  }


  @JsonProperty(JSON_PROPERTY_DESTINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDestination(DestinationTransferPeerPathResponse destination) {
    this.destination = destination;
  }


  public TransactionResponseDestination authorizationInfo(AuthorizationInfo authorizationInfo) {
    this.authorizationInfo = authorizationInfo;
    return this;
  }

   /**
   * Get authorizationInfo
   * @return authorizationInfo
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AuthorizationInfo getAuthorizationInfo() {
    return authorizationInfo;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationInfo(AuthorizationInfo authorizationInfo) {
    this.authorizationInfo = authorizationInfo;
  }


  /**
   * Return true if this TransactionResponseDestination object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionResponseDestination transactionResponseDestination = (TransactionResponseDestination) o;
    return equalsNullable(this.destinationAddress, transactionResponseDestination.destinationAddress) &&
        equalsNullable(this.destinationAddressDescription, transactionResponseDestination.destinationAddressDescription) &&
        Objects.equals(this.amount, transactionResponseDestination.amount) &&
        Objects.equals(this.amountUSD, transactionResponseDestination.amountUSD) &&
        Objects.equals(this.amlScreeningResult, transactionResponseDestination.amlScreeningResult) &&
        Objects.equals(this.destination, transactionResponseDestination.destination) &&
        Objects.equals(this.authorizationInfo, transactionResponseDestination.authorizationInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(destinationAddress), hashCodeNullable(destinationAddressDescription), amount, amountUSD, amlScreeningResult, destination, authorizationInfo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionResponseDestination {\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    destinationAddressDescription: ").append(toIndentedString(destinationAddressDescription)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountUSD: ").append(toIndentedString(amountUSD)).append("\n");
    sb.append("    amlScreeningResult: ").append(toIndentedString(amlScreeningResult)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    authorizationInfo: ").append(toIndentedString(authorizationInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

