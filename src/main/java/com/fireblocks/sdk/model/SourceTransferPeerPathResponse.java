/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

/** Source of the transaction. */
@JsonPropertyOrder({
    SourceTransferPeerPathResponse.JSON_PROPERTY_TYPE,
    SourceTransferPeerPathResponse.JSON_PROPERTY_SUB_TYPE,
    SourceTransferPeerPathResponse.JSON_PROPERTY_ID,
    SourceTransferPeerPathResponse.JSON_PROPERTY_NAME,
    SourceTransferPeerPathResponse.JSON_PROPERTY_WALLET_ID
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class SourceTransferPeerPathResponse {
    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nonnull private TransferPeerPathType type;

    public static final String JSON_PROPERTY_SUB_TYPE = "subType";
    @jakarta.annotation.Nullable private String subType;

    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nullable private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    @jakarta.annotation.Nullable private String name;

    public static final String JSON_PROPERTY_WALLET_ID = "walletId";
    @jakarta.annotation.Nullable private UUID walletId;

    public SourceTransferPeerPathResponse() {}

    @JsonCreator
    public SourceTransferPeerPathResponse(
            @JsonProperty(value = JSON_PROPERTY_TYPE, required = true) TransferPeerPathType type) {
        this.type = type;
    }

    public SourceTransferPeerPathResponse type(
            @jakarta.annotation.Nonnull TransferPeerPathType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TransferPeerPathType getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@jakarta.annotation.Nonnull TransferPeerPathType type) {
        this.type = type;
    }

    public SourceTransferPeerPathResponse subType(@jakarta.annotation.Nullable String subType) {
        this.subType = subType;
        return this;
    }

    /**
     * In case the type is set to &#x60;EXCHANGE_ACCOUNT&#x60; or &#x60;FIAT_ACCOUNT&#x60;, the
     * specific exchange vendor name or fiat vendor name. In case the type is set to
     * &#x60;INTERNAL_WALLET&#x60; or &#x60;EXTERNAL_WALLET&#x60;, the subType is set to
     * &#x60;Internal&#x60; or &#x60;External&#x60;.
     *
     * @return subType
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUB_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSubType() {
        return subType;
    }

    @JsonProperty(JSON_PROPERTY_SUB_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubType(@jakarta.annotation.Nullable String subType) {
        this.subType = subType;
    }

    public SourceTransferPeerPathResponse id(@jakarta.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * The ID of the peer. You can retrieve the ID of each venue object using the endpoints for
     * [listing vault
     * accounts](https://developers.fireblocks.com/reference/get_vault-accounts-paged), [listing
     * exchange account](https://developers.fireblocks.com/reference/get_exchange-accounts),
     * [listing fiat accounts](https://developers.fireblocks.com/reference/get_fiat-accounts),
     * [listing internal wallets](https://developers.fireblocks.com/reference/get_internal-wallets),
     * [listing external wallets](https://developers.fireblocks.com/reference/get_external-wallets),
     * [listing network
     * connections](https://developers.fireblocks.com/reference/get_network-connections). For the
     * other types, this parameter is not needed.
     *
     * @return id
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(@jakarta.annotation.Nullable String id) {
        this.id = id;
    }

    public SourceTransferPeerPathResponse name(@jakarta.annotation.Nullable String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the peer.
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable String name) {
        this.name = name;
    }

    public SourceTransferPeerPathResponse walletId(@jakarta.annotation.Nullable UUID walletId) {
        this.walletId = walletId;
        return this;
    }

    /**
     * Get walletId
     *
     * @return walletId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_WALLET_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getWalletId() {
        return walletId;
    }

    @JsonProperty(JSON_PROPERTY_WALLET_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWalletId(@jakarta.annotation.Nullable UUID walletId) {
        this.walletId = walletId;
    }

    /** Return true if this SourceTransferPeerPathResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SourceTransferPeerPathResponse sourceTransferPeerPathResponse =
                (SourceTransferPeerPathResponse) o;
        return Objects.equals(this.type, sourceTransferPeerPathResponse.type)
                && Objects.equals(this.subType, sourceTransferPeerPathResponse.subType)
                && Objects.equals(this.id, sourceTransferPeerPathResponse.id)
                && Objects.equals(this.name, sourceTransferPeerPathResponse.name)
                && Objects.equals(this.walletId, sourceTransferPeerPathResponse.walletId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(type, subType, id, name, walletId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SourceTransferPeerPathResponse {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `subType` to the URL query string
        if (getSubType() != null) {
            joiner.add(
                    String.format(
                            "%ssubType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSubType()))));
        }

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getName()))));
        }

        // add `walletId` to the URL query string
        if (getWalletId() != null) {
            joiner.add(
                    String.format(
                            "%swalletId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getWalletId()))));
        }

        return joiner.toString();
    }
}
