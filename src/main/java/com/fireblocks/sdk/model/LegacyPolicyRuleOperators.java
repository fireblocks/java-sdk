/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** Defines users/groups who can initiate the type of transaction to which the rule applies. */
@JsonPropertyOrder({
    LegacyPolicyRuleOperators.JSON_PROPERTY_WILDCARD,
    LegacyPolicyRuleOperators.JSON_PROPERTY_USERS,
    LegacyPolicyRuleOperators.JSON_PROPERTY_USERS_GROUPS,
    LegacyPolicyRuleOperators.JSON_PROPERTY_SERVICES
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class LegacyPolicyRuleOperators {
    /**
     * If used then this property should appear as the only child property * \&quot;*\&quot; - All
     * users are allowed
     */
    public enum WildcardEnum {
        STAR(String.valueOf("*"));

        private String value;

        WildcardEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static WildcardEnum fromValue(String value) {
            for (WildcardEnum b : WildcardEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_WILDCARD = "wildcard";
    @jakarta.annotation.Nullable private WildcardEnum wildcard;

    public static final String JSON_PROPERTY_USERS = "users";
    @jakarta.annotation.Nullable private List<String> users;

    public static final String JSON_PROPERTY_USERS_GROUPS = "usersGroups";
    @jakarta.annotation.Nullable private List<String> usersGroups;

    public static final String JSON_PROPERTY_SERVICES = "services";
    @jakarta.annotation.Nullable private List<String> services;

    public LegacyPolicyRuleOperators() {}

    public LegacyPolicyRuleOperators wildcard(@jakarta.annotation.Nullable WildcardEnum wildcard) {
        this.wildcard = wildcard;
        return this;
    }

    /**
     * If used then this property should appear as the only child property * \&quot;*\&quot; - All
     * users are allowed
     *
     * @return wildcard
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_WILDCARD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public WildcardEnum getWildcard() {
        return wildcard;
    }

    @JsonProperty(JSON_PROPERTY_WILDCARD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWildcard(@jakarta.annotation.Nullable WildcardEnum wildcard) {
        this.wildcard = wildcard;
    }

    public LegacyPolicyRuleOperators users(@jakarta.annotation.Nullable List<String> users) {
        this.users = users;
        return this;
    }

    public LegacyPolicyRuleOperators addUsersItem(String usersItem) {
        if (this.users == null) {
            this.users = new ArrayList<>();
        }
        this.users.add(usersItem);
        return this;
    }

    /**
     * Set of users ids
     *
     * @return users
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_USERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getUsers() {
        return users;
    }

    @JsonProperty(JSON_PROPERTY_USERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsers(@jakarta.annotation.Nullable List<String> users) {
        this.users = users;
    }

    public LegacyPolicyRuleOperators usersGroups(
            @jakarta.annotation.Nullable List<String> usersGroups) {
        this.usersGroups = usersGroups;
        return this;
    }

    public LegacyPolicyRuleOperators addUsersGroupsItem(String usersGroupsItem) {
        if (this.usersGroups == null) {
            this.usersGroups = new ArrayList<>();
        }
        this.usersGroups.add(usersGroupsItem);
        return this;
    }

    /**
     * Set of group ids
     *
     * @return usersGroups
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_USERS_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getUsersGroups() {
        return usersGroups;
    }

    @JsonProperty(JSON_PROPERTY_USERS_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsersGroups(@jakarta.annotation.Nullable List<String> usersGroups) {
        this.usersGroups = usersGroups;
    }

    public LegacyPolicyRuleOperators services(@jakarta.annotation.Nullable List<String> services) {
        this.services = services;
        return this;
    }

    public LegacyPolicyRuleOperators addServicesItem(String servicesItem) {
        if (this.services == null) {
            this.services = new ArrayList<>();
        }
        this.services.add(servicesItem);
        return this;
    }

    /**
     * set of services to initiate transactions
     *
     * @return services
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SERVICES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getServices() {
        return services;
    }

    @JsonProperty(JSON_PROPERTY_SERVICES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServices(@jakarta.annotation.Nullable List<String> services) {
        this.services = services;
    }

    /** Return true if this LegacyPolicyRule_operators object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LegacyPolicyRuleOperators legacyPolicyRuleOperators = (LegacyPolicyRuleOperators) o;
        return Objects.equals(this.wildcard, legacyPolicyRuleOperators.wildcard)
                && Objects.equals(this.users, legacyPolicyRuleOperators.users)
                && Objects.equals(this.usersGroups, legacyPolicyRuleOperators.usersGroups)
                && Objects.equals(this.services, legacyPolicyRuleOperators.services);
    }

    @Override
    public int hashCode() {
        return Objects.hash(wildcard, users, usersGroups, services);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LegacyPolicyRuleOperators {\n");
        sb.append("    wildcard: ").append(toIndentedString(wildcard)).append("\n");
        sb.append("    users: ").append(toIndentedString(users)).append("\n");
        sb.append("    usersGroups: ").append(toIndentedString(usersGroups)).append("\n");
        sb.append("    services: ").append(toIndentedString(services)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `wildcard` to the URL query string
        if (getWildcard() != null) {
            joiner.add(
                    String.format(
                            "%swildcard%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getWildcard()))));
        }

        // add `users` to the URL query string
        if (getUsers() != null) {
            for (int i = 0; i < getUsers().size(); i++) {
                joiner.add(
                        String.format(
                                "%susers%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(ApiClient.valueToString(getUsers().get(i)))));
            }
        }

        // add `usersGroups` to the URL query string
        if (getUsersGroups() != null) {
            for (int i = 0; i < getUsersGroups().size(); i++) {
                joiner.add(
                        String.format(
                                "%susersGroups%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getUsersGroups().get(i)))));
            }
        }

        // add `services` to the URL query string
        if (getServices() != null) {
            for (int i = 0; i < getServices().size(); i++) {
                joiner.add(
                        String.format(
                                "%sservices%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getServices().get(i)))));
            }
        }

        return joiner.toString();
    }
}
