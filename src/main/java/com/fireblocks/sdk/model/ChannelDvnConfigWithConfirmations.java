/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;
import java.util.StringJoiner;

/** ChannelDvnConfigWithConfirmations */
@JsonPropertyOrder({
    ChannelDvnConfigWithConfirmations.JSON_PROPERTY_SEND_CONFIG,
    ChannelDvnConfigWithConfirmations.JSON_PROPERTY_RECEIVE_CONFIG
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ChannelDvnConfigWithConfirmations {
    public static final String JSON_PROPERTY_SEND_CONFIG = "sendConfig";
    private ChannelDvnConfigWithConfirmationsSendConfig sendConfig;

    public static final String JSON_PROPERTY_RECEIVE_CONFIG = "receiveConfig";
    private ChannelDvnConfigWithConfirmationsReceiveConfig receiveConfig;

    public ChannelDvnConfigWithConfirmations() {}

    public ChannelDvnConfigWithConfirmations sendConfig(
            ChannelDvnConfigWithConfirmationsSendConfig sendConfig) {
        this.sendConfig = sendConfig;
        return this;
    }

    /**
     * Get sendConfig
     *
     * @return sendConfig
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SEND_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ChannelDvnConfigWithConfirmationsSendConfig getSendConfig() {
        return sendConfig;
    }

    @JsonProperty(JSON_PROPERTY_SEND_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSendConfig(ChannelDvnConfigWithConfirmationsSendConfig sendConfig) {
        this.sendConfig = sendConfig;
    }

    public ChannelDvnConfigWithConfirmations receiveConfig(
            ChannelDvnConfigWithConfirmationsReceiveConfig receiveConfig) {
        this.receiveConfig = receiveConfig;
        return this;
    }

    /**
     * Get receiveConfig
     *
     * @return receiveConfig
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RECEIVE_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ChannelDvnConfigWithConfirmationsReceiveConfig getReceiveConfig() {
        return receiveConfig;
    }

    @JsonProperty(JSON_PROPERTY_RECEIVE_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReceiveConfig(ChannelDvnConfigWithConfirmationsReceiveConfig receiveConfig) {
        this.receiveConfig = receiveConfig;
    }

    /** Return true if this ChannelDvnConfigWithConfirmations object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ChannelDvnConfigWithConfirmations channelDvnConfigWithConfirmations =
                (ChannelDvnConfigWithConfirmations) o;
        return Objects.equals(this.sendConfig, channelDvnConfigWithConfirmations.sendConfig)
                && Objects.equals(
                        this.receiveConfig, channelDvnConfigWithConfirmations.receiveConfig);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sendConfig, receiveConfig);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ChannelDvnConfigWithConfirmations {\n");
        sb.append("    sendConfig: ").append(toIndentedString(sendConfig)).append("\n");
        sb.append("    receiveConfig: ").append(toIndentedString(receiveConfig)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `sendConfig` to the URL query string
        if (getSendConfig() != null) {
            joiner.add(getSendConfig().toUrlQueryString(prefix + "sendConfig" + suffix));
        }

        // add `receiveConfig` to the URL query string
        if (getReceiveConfig() != null) {
            joiner.add(getReceiveConfig().toUrlQueryString(prefix + "receiveConfig" + suffix));
        }

        return joiner.toString();
    }
}
