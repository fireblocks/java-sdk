/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** Type of account */
public enum AccountType2 {
    EXCHANGE("EXCHANGE"),

    UNMANAGED("UNMANAGED"),

    VAULT("VAULT"),

    GLOBAL_WHITELIST("GLOBAL_WHITELIST"),

    NETWORK_CONNECTION("NETWORK_CONNECTION"),

    FIAT_ACCOUNT("FIAT_ACCOUNT"),

    CONNECTED_ACCOUNT("CONNECTED_ACCOUNT"),

    ONE_TIME_ADDRESS("ONE_TIME_ADDRESS"),

    SRC_DST_NA("SRC_DST_NA"),

    MULTIPLE_VENUES("MULTIPLE_VENUES"),

    END_USER_WALLET("END_USER_WALLET"),

    OEC_PARTNER("OEC_PARTNER"),

    CONTRACT("CONTRACT"),

    INTERNAL("INTERNAL"),

    EXTERNAL("EXTERNAL"),

    DAPP_CONNECTION("DAPP_CONNECTION"),

    UNKNOWN("UNKNOWN"),

    STAR("*"),

    ANY("ANY");

    private String value;

    AccountType2(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    @JsonCreator
    public static AccountType2 fromValue(String value) {
        for (AccountType2 b : AccountType2.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        if (prefix == null) {
            prefix = "";
        }

        return String.format("%s=%s", prefix, this.toString());
    }
}
