/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** TravelRuleValidateFullTransactionRequest */
@JsonPropertyOrder({
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR_V_A_S_PDID,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY_V_A_S_PDID,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_TRANSACTION_ASSET,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_TRANSACTION_AMOUNT,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR_V_A_S_PNAME,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_TRANSACTION_BLOCKCHAIN_INFO,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ENCRYPTED,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_PROTOCOL,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_SKIP_BENEFICIARY_DATA_VALIDATION,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR_REF,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY_REF,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR_REF,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR_PROOF,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY_PROOF,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_BENEFICIARY_DID,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_ORIGINATOR_DID,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_IS_NON_CUSTODIAL,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_NOTIFICATION_EMAIL,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_PII,
    TravelRuleValidateFullTransactionRequest.JSON_PROPERTY_PII_URL
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class TravelRuleValidateFullTransactionRequest {
    public static final String JSON_PROPERTY_ORIGINATOR_V_A_S_PDID = "originatorVASPdid";
    @jakarta.annotation.Nullable private String originatorVASPdid;

    public static final String JSON_PROPERTY_BENEFICIARY_V_A_S_PDID = "beneficiaryVASPdid";
    @jakarta.annotation.Nullable private String beneficiaryVASPdid;

    public static final String JSON_PROPERTY_TRANSACTION_ASSET = "transactionAsset";
    @jakarta.annotation.Nullable private String transactionAsset;

    public static final String JSON_PROPERTY_TRANSACTION_AMOUNT = "transactionAmount";
    @jakarta.annotation.Nullable private String transactionAmount;

    public static final String JSON_PROPERTY_ORIGINATOR_V_A_S_PNAME = "originatorVASPname";
    @jakarta.annotation.Nullable private String originatorVASPname;

    public static final String JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME = "beneficiaryVASPname";
    @jakarta.annotation.Nullable private String beneficiaryVASPname;

    public static final String JSON_PROPERTY_TRANSACTION_BLOCKCHAIN_INFO =
            "transactionBlockchainInfo";

    @jakarta.annotation.Nullable
    private TravelRuleTransactionBlockchainInfo transactionBlockchainInfo;

    public static final String JSON_PROPERTY_ORIGINATOR = "originator";
    @jakarta.annotation.Nonnull private TravelRuleValidatePiiIVMS originator;

    public static final String JSON_PROPERTY_BENEFICIARY = "beneficiary";
    @jakarta.annotation.Nonnull private TravelRuleValidatePiiIVMS beneficiary;

    public static final String JSON_PROPERTY_ENCRYPTED = "encrypted";
    @jakarta.annotation.Nullable private String encrypted;

    /** The protocol used to perform the travel rule. */
    public enum ProtocolEnum {
        TR_LIGHT(String.valueOf("TRLight")),

        TRP(String.valueOf("TRP")),

        OPEN_VASP(String.valueOf("OpenVASP")),

        GTR(String.valueOf("GTR"));

        private String value;

        ProtocolEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ProtocolEnum fromValue(String value) {
            for (ProtocolEnum b : ProtocolEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_PROTOCOL = "protocol";
    @jakarta.annotation.Nullable private ProtocolEnum protocol;

    public static final String JSON_PROPERTY_SKIP_BENEFICIARY_DATA_VALIDATION =
            "skipBeneficiaryDataValidation";
    @jakarta.annotation.Nullable private Boolean skipBeneficiaryDataValidation;

    public static final String JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR = "travelRuleBehavior";
    @jakarta.annotation.Nullable private Boolean travelRuleBehavior;

    public static final String JSON_PROPERTY_ORIGINATOR_REF = "originatorRef";
    @jakarta.annotation.Nullable private String originatorRef;

    public static final String JSON_PROPERTY_BENEFICIARY_REF = "beneficiaryRef";
    @jakarta.annotation.Nullable private String beneficiaryRef;

    public static final String JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR_REF = "travelRuleBehaviorRef";
    @jakarta.annotation.Nullable private String travelRuleBehaviorRef;

    public static final String JSON_PROPERTY_ORIGINATOR_PROOF = "originatorProof";
    @jakarta.annotation.Nullable private TravelRuleOwnershipProof originatorProof;

    public static final String JSON_PROPERTY_BENEFICIARY_PROOF = "beneficiaryProof";
    @jakarta.annotation.Nullable private TravelRuleOwnershipProof beneficiaryProof;

    public static final String JSON_PROPERTY_BENEFICIARY_DID = "beneficiaryDid";
    @jakarta.annotation.Nullable private String beneficiaryDid;

    public static final String JSON_PROPERTY_ORIGINATOR_DID = "originatorDid";
    @jakarta.annotation.Nullable private String originatorDid;

    public static final String JSON_PROPERTY_IS_NON_CUSTODIAL = "isNonCustodial";
    @jakarta.annotation.Nullable private Boolean isNonCustodial;

    public static final String JSON_PROPERTY_NOTIFICATION_EMAIL = "notificationEmail";
    @jakarta.annotation.Nullable private String notificationEmail;

    public static final String JSON_PROPERTY_PII = "pii";
    @jakarta.annotation.Nullable private TravelRulePiiIVMS pii;

    public static final String JSON_PROPERTY_PII_URL = "pii_url";
    @jakarta.annotation.Nullable private String piiUrl;

    public TravelRuleValidateFullTransactionRequest() {}

    @JsonCreator
    public TravelRuleValidateFullTransactionRequest(
            @JsonProperty(value = JSON_PROPERTY_ORIGINATOR, required = true)
                    TravelRuleValidatePiiIVMS originator,
            @JsonProperty(value = JSON_PROPERTY_BENEFICIARY, required = true)
                    TravelRuleValidatePiiIVMS beneficiary) {
        this.originator = originator;
        this.beneficiary = beneficiary;
    }

    public TravelRuleValidateFullTransactionRequest originatorVASPdid(
            @jakarta.annotation.Nullable String originatorVASPdid) {
        this.originatorVASPdid = originatorVASPdid;
        return this;
    }

    /**
     * The Decentralized Identifier (DID) of the exchange (VASP) that is sending the virtual assets.
     * This identifier is unique to the exchange and is generated when the exchange&#39;s account is
     * created in the Notabene network.
     *
     * @return originatorVASPdid
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGINATOR_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOriginatorVASPdid() {
        return originatorVASPdid;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatorVASPdid(@jakarta.annotation.Nullable String originatorVASPdid) {
        this.originatorVASPdid = originatorVASPdid;
    }

    public TravelRuleValidateFullTransactionRequest beneficiaryVASPdid(
            @jakarta.annotation.Nullable String beneficiaryVASPdid) {
        this.beneficiaryVASPdid = beneficiaryVASPdid;
        return this;
    }

    /**
     * The Decentralized Identifier (DID) of the exchange (VASP) that is receiving the virtual
     * assets. This identifier is unique to the exchange and is generated when the exchange&#39;s
     * account is created in the Notabene network.
     *
     * @return beneficiaryVASPdid
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryVASPdid() {
        return beneficiaryVASPdid;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PDID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryVASPdid(@jakarta.annotation.Nullable String beneficiaryVASPdid) {
        this.beneficiaryVASPdid = beneficiaryVASPdid;
    }

    public TravelRuleValidateFullTransactionRequest transactionAsset(
            @jakarta.annotation.Nullable String transactionAsset) {
        this.transactionAsset = transactionAsset;
        return this;
    }

    /**
     * Transaction asset symbol (e.g., BTC, ETH, USDC). By using the &#x60;notation&#x60; query
     * string, users can select the type of asset notation: - &#x60;fireblocks&#x60;: Converts asset
     * symbols to Fireblocks notation. - &#x60;notabene&#x60;: Retains the original Notabene asset
     * symbol format.
     *
     * @return transactionAsset
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRANSACTION_ASSET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTransactionAsset() {
        return transactionAsset;
    }

    @JsonProperty(JSON_PROPERTY_TRANSACTION_ASSET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransactionAsset(@jakarta.annotation.Nullable String transactionAsset) {
        this.transactionAsset = transactionAsset;
    }

    public TravelRuleValidateFullTransactionRequest transactionAmount(
            @jakarta.annotation.Nullable String transactionAmount) {
        this.transactionAmount = transactionAmount;
        return this;
    }

    /**
     * Transaction amount in the transaction asset. For example, if the asset is BTC, the amount is
     * the value in BTC units. By using the &#x60;notation&#x60; query string, users can select the
     * type of amount notation: - &#x60;fireblocks&#x60;: Converts the amount to Fireblocks notation
     * (e.g., adjusted for decimals). - &#x60;notabene&#x60;: Retains the original Notabene amount
     * format.
     *
     * @return transactionAmount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTransactionAmount() {
        return transactionAmount;
    }

    @JsonProperty(JSON_PROPERTY_TRANSACTION_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransactionAmount(@jakarta.annotation.Nullable String transactionAmount) {
        this.transactionAmount = transactionAmount;
    }

    public TravelRuleValidateFullTransactionRequest originatorVASPname(
            @jakarta.annotation.Nullable String originatorVASPname) {
        this.originatorVASPname = originatorVASPname;
        return this;
    }

    /**
     * The name of the VASP acting as the transaction originator.
     *
     * @return originatorVASPname
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGINATOR_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOriginatorVASPname() {
        return originatorVASPname;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatorVASPname(@jakarta.annotation.Nullable String originatorVASPname) {
        this.originatorVASPname = originatorVASPname;
    }

    public TravelRuleValidateFullTransactionRequest beneficiaryVASPname(
            @jakarta.annotation.Nullable String beneficiaryVASPname) {
        this.beneficiaryVASPname = beneficiaryVASPname;
        return this;
    }

    /**
     * The name of the VASP acting as the transaction beneficiary.
     *
     * @return beneficiaryVASPname
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryVASPname() {
        return beneficiaryVASPname;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_V_A_S_PNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryVASPname(@jakarta.annotation.Nullable String beneficiaryVASPname) {
        this.beneficiaryVASPname = beneficiaryVASPname;
    }

    public TravelRuleValidateFullTransactionRequest transactionBlockchainInfo(
            @jakarta.annotation.Nullable
                    TravelRuleTransactionBlockchainInfo transactionBlockchainInfo) {
        this.transactionBlockchainInfo = transactionBlockchainInfo;
        return this;
    }

    /**
     * Get transactionBlockchainInfo
     *
     * @return transactionBlockchainInfo
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRANSACTION_BLOCKCHAIN_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRuleTransactionBlockchainInfo getTransactionBlockchainInfo() {
        return transactionBlockchainInfo;
    }

    @JsonProperty(JSON_PROPERTY_TRANSACTION_BLOCKCHAIN_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransactionBlockchainInfo(
            @jakarta.annotation.Nullable
                    TravelRuleTransactionBlockchainInfo transactionBlockchainInfo) {
        this.transactionBlockchainInfo = transactionBlockchainInfo;
    }

    public TravelRuleValidateFullTransactionRequest originator(
            @jakarta.annotation.Nonnull TravelRuleValidatePiiIVMS originator) {
        this.originator = originator;
        return this;
    }

    /**
     * Get originator
     *
     * @return originator
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ORIGINATOR)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TravelRuleValidatePiiIVMS getOriginator() {
        return originator;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOriginator(@jakarta.annotation.Nonnull TravelRuleValidatePiiIVMS originator) {
        this.originator = originator;
    }

    public TravelRuleValidateFullTransactionRequest beneficiary(
            @jakarta.annotation.Nonnull TravelRuleValidatePiiIVMS beneficiary) {
        this.beneficiary = beneficiary;
        return this;
    }

    /**
     * Get beneficiary
     *
     * @return beneficiary
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BENEFICIARY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TravelRuleValidatePiiIVMS getBeneficiary() {
        return beneficiary;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBeneficiary(@jakarta.annotation.Nonnull TravelRuleValidatePiiIVMS beneficiary) {
        this.beneficiary = beneficiary;
    }

    public TravelRuleValidateFullTransactionRequest encrypted(
            @jakarta.annotation.Nullable String encrypted) {
        this.encrypted = encrypted;
        return this;
    }

    /**
     * Encrypted data related to the transaction.
     *
     * @return encrypted
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ENCRYPTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEncrypted() {
        return encrypted;
    }

    @JsonProperty(JSON_PROPERTY_ENCRYPTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEncrypted(@jakarta.annotation.Nullable String encrypted) {
        this.encrypted = encrypted;
    }

    public TravelRuleValidateFullTransactionRequest protocol(
            @jakarta.annotation.Nullable ProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * The protocol used to perform the travel rule.
     *
     * @return protocol
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ProtocolEnum getProtocol() {
        return protocol;
    }

    @JsonProperty(JSON_PROPERTY_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProtocol(@jakarta.annotation.Nullable ProtocolEnum protocol) {
        this.protocol = protocol;
    }

    public TravelRuleValidateFullTransactionRequest skipBeneficiaryDataValidation(
            @jakarta.annotation.Nullable Boolean skipBeneficiaryDataValidation) {
        this.skipBeneficiaryDataValidation = skipBeneficiaryDataValidation;
        return this;
    }

    /**
     * Whether to skip validation of beneficiary data.
     *
     * @return skipBeneficiaryDataValidation
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SKIP_BENEFICIARY_DATA_VALIDATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSkipBeneficiaryDataValidation() {
        return skipBeneficiaryDataValidation;
    }

    @JsonProperty(JSON_PROPERTY_SKIP_BENEFICIARY_DATA_VALIDATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSkipBeneficiaryDataValidation(
            @jakarta.annotation.Nullable Boolean skipBeneficiaryDataValidation) {
        this.skipBeneficiaryDataValidation = skipBeneficiaryDataValidation;
    }

    public TravelRuleValidateFullTransactionRequest travelRuleBehavior(
            @jakarta.annotation.Nullable Boolean travelRuleBehavior) {
        this.travelRuleBehavior = travelRuleBehavior;
        return this;
    }

    /**
     * Whether to check if the transaction complies with the travel rule in the beneficiary
     * VASP&#39;s jurisdiction.
     *
     * @return travelRuleBehavior
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getTravelRuleBehavior() {
        return travelRuleBehavior;
    }

    @JsonProperty(JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTravelRuleBehavior(@jakarta.annotation.Nullable Boolean travelRuleBehavior) {
        this.travelRuleBehavior = travelRuleBehavior;
    }

    public TravelRuleValidateFullTransactionRequest originatorRef(
            @jakarta.annotation.Nullable String originatorRef) {
        this.originatorRef = originatorRef;
        return this;
    }

    /**
     * A reference ID related to the originator of the transaction.
     *
     * @return originatorRef
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGINATOR_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOriginatorRef() {
        return originatorRef;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatorRef(@jakarta.annotation.Nullable String originatorRef) {
        this.originatorRef = originatorRef;
    }

    public TravelRuleValidateFullTransactionRequest beneficiaryRef(
            @jakarta.annotation.Nullable String beneficiaryRef) {
        this.beneficiaryRef = beneficiaryRef;
        return this;
    }

    /**
     * A reference ID related to the beneficiary of the transaction.
     *
     * @return beneficiaryRef
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryRef() {
        return beneficiaryRef;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryRef(@jakarta.annotation.Nullable String beneficiaryRef) {
        this.beneficiaryRef = beneficiaryRef;
    }

    public TravelRuleValidateFullTransactionRequest travelRuleBehaviorRef(
            @jakarta.annotation.Nullable String travelRuleBehaviorRef) {
        this.travelRuleBehaviorRef = travelRuleBehaviorRef;
        return this;
    }

    /**
     * A reference ID related to the travel rule behavior.
     *
     * @return travelRuleBehaviorRef
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTravelRuleBehaviorRef() {
        return travelRuleBehaviorRef;
    }

    @JsonProperty(JSON_PROPERTY_TRAVEL_RULE_BEHAVIOR_REF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTravelRuleBehaviorRef(
            @jakarta.annotation.Nullable String travelRuleBehaviorRef) {
        this.travelRuleBehaviorRef = travelRuleBehaviorRef;
    }

    public TravelRuleValidateFullTransactionRequest originatorProof(
            @jakarta.annotation.Nullable TravelRuleOwnershipProof originatorProof) {
        this.originatorProof = originatorProof;
        return this;
    }

    /**
     * Get originatorProof
     *
     * @return originatorProof
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGINATOR_PROOF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRuleOwnershipProof getOriginatorProof() {
        return originatorProof;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR_PROOF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatorProof(
            @jakarta.annotation.Nullable TravelRuleOwnershipProof originatorProof) {
        this.originatorProof = originatorProof;
    }

    public TravelRuleValidateFullTransactionRequest beneficiaryProof(
            @jakarta.annotation.Nullable TravelRuleOwnershipProof beneficiaryProof) {
        this.beneficiaryProof = beneficiaryProof;
        return this;
    }

    /**
     * Get beneficiaryProof
     *
     * @return beneficiaryProof
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_PROOF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRuleOwnershipProof getBeneficiaryProof() {
        return beneficiaryProof;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_PROOF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryProof(
            @jakarta.annotation.Nullable TravelRuleOwnershipProof beneficiaryProof) {
        this.beneficiaryProof = beneficiaryProof;
    }

    public TravelRuleValidateFullTransactionRequest beneficiaryDid(
            @jakarta.annotation.Nullable String beneficiaryDid) {
        this.beneficiaryDid = beneficiaryDid;
        return this;
    }

    /**
     * The Decentralized Identifier (DID) of the person at the receiving exchange (VASP). This
     * identifier is generated when the customer is registered in the Notabene network, or
     * automatically created based on the &#x60;beneficiaryRef&#x60;. - If neither
     * &#x60;beneficiaryRef&#x60; nor &#x60;beneficiaryDid&#x60; is provided in the
     * &#x60;txCreate&#x60; payload, a new random DID is generated for every transaction.
     *
     * @return beneficiaryDid
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_DID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryDid() {
        return beneficiaryDid;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_DID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryDid(@jakarta.annotation.Nullable String beneficiaryDid) {
        this.beneficiaryDid = beneficiaryDid;
    }

    public TravelRuleValidateFullTransactionRequest originatorDid(
            @jakarta.annotation.Nullable String originatorDid) {
        this.originatorDid = originatorDid;
        return this;
    }

    /**
     * The Decentralized Identifier (DID) of the person at the exchange (VASP) who is requesting the
     * withdrawal. This identifier is generated when the customer is registered in the Notabene
     * network or automatically created based on the &#x60;originatorRef&#x60;. - If neither
     * &#x60;originatorRef&#x60; nor &#x60;originatorDid&#x60; is provided in the
     * &#x60;txCreate&#x60; payload, a new random DID is generated for every transaction.
     *
     * @return originatorDid
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ORIGINATOR_DID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOriginatorDid() {
        return originatorDid;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATOR_DID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatorDid(@jakarta.annotation.Nullable String originatorDid) {
        this.originatorDid = originatorDid;
    }

    public TravelRuleValidateFullTransactionRequest isNonCustodial(
            @jakarta.annotation.Nullable Boolean isNonCustodial) {
        this.isNonCustodial = isNonCustodial;
        return this;
    }

    /**
     * Indicates if the transaction involves a non-custodial wallet.
     *
     * @return isNonCustodial
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_IS_NON_CUSTODIAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsNonCustodial() {
        return isNonCustodial;
    }

    @JsonProperty(JSON_PROPERTY_IS_NON_CUSTODIAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsNonCustodial(@jakarta.annotation.Nullable Boolean isNonCustodial) {
        this.isNonCustodial = isNonCustodial;
    }

    public TravelRuleValidateFullTransactionRequest notificationEmail(
            @jakarta.annotation.Nullable String notificationEmail) {
        this.notificationEmail = notificationEmail;
        return this;
    }

    /**
     * The email address where a notification should be sent upon completion of the travel rule
     *
     * @return notificationEmail
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NOTIFICATION_EMAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNotificationEmail() {
        return notificationEmail;
    }

    @JsonProperty(JSON_PROPERTY_NOTIFICATION_EMAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotificationEmail(@jakarta.annotation.Nullable String notificationEmail) {
        this.notificationEmail = notificationEmail;
    }

    public TravelRuleValidateFullTransactionRequest pii(
            @jakarta.annotation.Nullable TravelRulePiiIVMS pii) {
        this.pii = pii;
        return this;
    }

    /**
     * Get pii
     *
     * @return pii
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PII)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TravelRulePiiIVMS getPii() {
        return pii;
    }

    @JsonProperty(JSON_PROPERTY_PII)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPii(@jakarta.annotation.Nullable TravelRulePiiIVMS pii) {
        this.pii = pii;
    }

    public TravelRuleValidateFullTransactionRequest piiUrl(
            @jakarta.annotation.Nullable String piiUrl) {
        this.piiUrl = piiUrl;
        return this;
    }

    /**
     * The URL of the personal identifiable information related to the transaction
     *
     * @return piiUrl
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PII_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPiiUrl() {
        return piiUrl;
    }

    @JsonProperty(JSON_PROPERTY_PII_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPiiUrl(@jakarta.annotation.Nullable String piiUrl) {
        this.piiUrl = piiUrl;
    }

    /** Return true if this TravelRuleValidateFullTransactionRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TravelRuleValidateFullTransactionRequest travelRuleValidateFullTransactionRequest =
                (TravelRuleValidateFullTransactionRequest) o;
        return Objects.equals(
                        this.originatorVASPdid,
                        travelRuleValidateFullTransactionRequest.originatorVASPdid)
                && Objects.equals(
                        this.beneficiaryVASPdid,
                        travelRuleValidateFullTransactionRequest.beneficiaryVASPdid)
                && Objects.equals(
                        this.transactionAsset,
                        travelRuleValidateFullTransactionRequest.transactionAsset)
                && Objects.equals(
                        this.transactionAmount,
                        travelRuleValidateFullTransactionRequest.transactionAmount)
                && Objects.equals(
                        this.originatorVASPname,
                        travelRuleValidateFullTransactionRequest.originatorVASPname)
                && Objects.equals(
                        this.beneficiaryVASPname,
                        travelRuleValidateFullTransactionRequest.beneficiaryVASPname)
                && Objects.equals(
                        this.transactionBlockchainInfo,
                        travelRuleValidateFullTransactionRequest.transactionBlockchainInfo)
                && Objects.equals(
                        this.originator, travelRuleValidateFullTransactionRequest.originator)
                && Objects.equals(
                        this.beneficiary, travelRuleValidateFullTransactionRequest.beneficiary)
                && Objects.equals(
                        this.encrypted, travelRuleValidateFullTransactionRequest.encrypted)
                && Objects.equals(this.protocol, travelRuleValidateFullTransactionRequest.protocol)
                && Objects.equals(
                        this.skipBeneficiaryDataValidation,
                        travelRuleValidateFullTransactionRequest.skipBeneficiaryDataValidation)
                && Objects.equals(
                        this.travelRuleBehavior,
                        travelRuleValidateFullTransactionRequest.travelRuleBehavior)
                && Objects.equals(
                        this.originatorRef, travelRuleValidateFullTransactionRequest.originatorRef)
                && Objects.equals(
                        this.beneficiaryRef,
                        travelRuleValidateFullTransactionRequest.beneficiaryRef)
                && Objects.equals(
                        this.travelRuleBehaviorRef,
                        travelRuleValidateFullTransactionRequest.travelRuleBehaviorRef)
                && Objects.equals(
                        this.originatorProof,
                        travelRuleValidateFullTransactionRequest.originatorProof)
                && Objects.equals(
                        this.beneficiaryProof,
                        travelRuleValidateFullTransactionRequest.beneficiaryProof)
                && Objects.equals(
                        this.beneficiaryDid,
                        travelRuleValidateFullTransactionRequest.beneficiaryDid)
                && Objects.equals(
                        this.originatorDid, travelRuleValidateFullTransactionRequest.originatorDid)
                && Objects.equals(
                        this.isNonCustodial,
                        travelRuleValidateFullTransactionRequest.isNonCustodial)
                && Objects.equals(
                        this.notificationEmail,
                        travelRuleValidateFullTransactionRequest.notificationEmail)
                && Objects.equals(this.pii, travelRuleValidateFullTransactionRequest.pii)
                && Objects.equals(this.piiUrl, travelRuleValidateFullTransactionRequest.piiUrl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                originatorVASPdid,
                beneficiaryVASPdid,
                transactionAsset,
                transactionAmount,
                originatorVASPname,
                beneficiaryVASPname,
                transactionBlockchainInfo,
                originator,
                beneficiary,
                encrypted,
                protocol,
                skipBeneficiaryDataValidation,
                travelRuleBehavior,
                originatorRef,
                beneficiaryRef,
                travelRuleBehaviorRef,
                originatorProof,
                beneficiaryProof,
                beneficiaryDid,
                originatorDid,
                isNonCustodial,
                notificationEmail,
                pii,
                piiUrl);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TravelRuleValidateFullTransactionRequest {\n");
        sb.append("    originatorVASPdid: ")
                .append(toIndentedString(originatorVASPdid))
                .append("\n");
        sb.append("    beneficiaryVASPdid: ")
                .append(toIndentedString(beneficiaryVASPdid))
                .append("\n");
        sb.append("    transactionAsset: ").append(toIndentedString(transactionAsset)).append("\n");
        sb.append("    transactionAmount: ")
                .append(toIndentedString(transactionAmount))
                .append("\n");
        sb.append("    originatorVASPname: ")
                .append(toIndentedString(originatorVASPname))
                .append("\n");
        sb.append("    beneficiaryVASPname: ")
                .append(toIndentedString(beneficiaryVASPname))
                .append("\n");
        sb.append("    transactionBlockchainInfo: ")
                .append(toIndentedString(transactionBlockchainInfo))
                .append("\n");
        sb.append("    originator: ").append(toIndentedString(originator)).append("\n");
        sb.append("    beneficiary: ").append(toIndentedString(beneficiary)).append("\n");
        sb.append("    encrypted: ").append(toIndentedString(encrypted)).append("\n");
        sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
        sb.append("    skipBeneficiaryDataValidation: ")
                .append(toIndentedString(skipBeneficiaryDataValidation))
                .append("\n");
        sb.append("    travelRuleBehavior: ")
                .append(toIndentedString(travelRuleBehavior))
                .append("\n");
        sb.append("    originatorRef: ").append(toIndentedString(originatorRef)).append("\n");
        sb.append("    beneficiaryRef: ").append(toIndentedString(beneficiaryRef)).append("\n");
        sb.append("    travelRuleBehaviorRef: ")
                .append(toIndentedString(travelRuleBehaviorRef))
                .append("\n");
        sb.append("    originatorProof: ").append(toIndentedString(originatorProof)).append("\n");
        sb.append("    beneficiaryProof: ").append(toIndentedString(beneficiaryProof)).append("\n");
        sb.append("    beneficiaryDid: ").append(toIndentedString(beneficiaryDid)).append("\n");
        sb.append("    originatorDid: ").append(toIndentedString(originatorDid)).append("\n");
        sb.append("    isNonCustodial: ").append(toIndentedString(isNonCustodial)).append("\n");
        sb.append("    notificationEmail: ")
                .append(toIndentedString(notificationEmail))
                .append("\n");
        sb.append("    pii: ").append(toIndentedString(pii)).append("\n");
        sb.append("    piiUrl: ").append(toIndentedString(piiUrl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `originatorVASPdid` to the URL query string
        if (getOriginatorVASPdid() != null) {
            joiner.add(
                    String.format(
                            "%soriginatorVASPdid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOriginatorVASPdid()))));
        }

        // add `beneficiaryVASPdid` to the URL query string
        if (getBeneficiaryVASPdid() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryVASPdid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBeneficiaryVASPdid()))));
        }

        // add `transactionAsset` to the URL query string
        if (getTransactionAsset() != null) {
            joiner.add(
                    String.format(
                            "%stransactionAsset%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTransactionAsset()))));
        }

        // add `transactionAmount` to the URL query string
        if (getTransactionAmount() != null) {
            joiner.add(
                    String.format(
                            "%stransactionAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTransactionAmount()))));
        }

        // add `originatorVASPname` to the URL query string
        if (getOriginatorVASPname() != null) {
            joiner.add(
                    String.format(
                            "%soriginatorVASPname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOriginatorVASPname()))));
        }

        // add `beneficiaryVASPname` to the URL query string
        if (getBeneficiaryVASPname() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryVASPname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getBeneficiaryVASPname()))));
        }

        // add `transactionBlockchainInfo` to the URL query string
        if (getTransactionBlockchainInfo() != null) {
            joiner.add(
                    getTransactionBlockchainInfo()
                            .toUrlQueryString(prefix + "transactionBlockchainInfo" + suffix));
        }

        // add `originator` to the URL query string
        if (getOriginator() != null) {
            joiner.add(getOriginator().toUrlQueryString(prefix + "originator" + suffix));
        }

        // add `beneficiary` to the URL query string
        if (getBeneficiary() != null) {
            joiner.add(getBeneficiary().toUrlQueryString(prefix + "beneficiary" + suffix));
        }

        // add `encrypted` to the URL query string
        if (getEncrypted() != null) {
            joiner.add(
                    String.format(
                            "%sencrypted%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getEncrypted()))));
        }

        // add `protocol` to the URL query string
        if (getProtocol() != null) {
            joiner.add(
                    String.format(
                            "%sprotocol%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getProtocol()))));
        }

        // add `skipBeneficiaryDataValidation` to the URL query string
        if (getSkipBeneficiaryDataValidation() != null) {
            joiner.add(
                    String.format(
                            "%sskipBeneficiaryDataValidation%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getSkipBeneficiaryDataValidation()))));
        }

        // add `travelRuleBehavior` to the URL query string
        if (getTravelRuleBehavior() != null) {
            joiner.add(
                    String.format(
                            "%stravelRuleBehavior%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTravelRuleBehavior()))));
        }

        // add `originatorRef` to the URL query string
        if (getOriginatorRef() != null) {
            joiner.add(
                    String.format(
                            "%soriginatorRef%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOriginatorRef()))));
        }

        // add `beneficiaryRef` to the URL query string
        if (getBeneficiaryRef() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryRef%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBeneficiaryRef()))));
        }

        // add `travelRuleBehaviorRef` to the URL query string
        if (getTravelRuleBehaviorRef() != null) {
            joiner.add(
                    String.format(
                            "%stravelRuleBehaviorRef%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getTravelRuleBehaviorRef()))));
        }

        // add `originatorProof` to the URL query string
        if (getOriginatorProof() != null) {
            joiner.add(getOriginatorProof().toUrlQueryString(prefix + "originatorProof" + suffix));
        }

        // add `beneficiaryProof` to the URL query string
        if (getBeneficiaryProof() != null) {
            joiner.add(
                    getBeneficiaryProof().toUrlQueryString(prefix + "beneficiaryProof" + suffix));
        }

        // add `beneficiaryDid` to the URL query string
        if (getBeneficiaryDid() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryDid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBeneficiaryDid()))));
        }

        // add `originatorDid` to the URL query string
        if (getOriginatorDid() != null) {
            joiner.add(
                    String.format(
                            "%soriginatorDid%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOriginatorDid()))));
        }

        // add `isNonCustodial` to the URL query string
        if (getIsNonCustodial() != null) {
            joiner.add(
                    String.format(
                            "%sisNonCustodial%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getIsNonCustodial()))));
        }

        // add `notificationEmail` to the URL query string
        if (getNotificationEmail() != null) {
            joiner.add(
                    String.format(
                            "%snotificationEmail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNotificationEmail()))));
        }

        // add `pii` to the URL query string
        if (getPii() != null) {
            joiner.add(getPii().toUrlQueryString(prefix + "pii" + suffix));
        }

        // add `pii_url` to the URL query string
        if (getPiiUrl() != null) {
            joiner.add(
                    String.format(
                            "%spii_url%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPiiUrl()))));
        }

        return joiner.toString();
    }
}
