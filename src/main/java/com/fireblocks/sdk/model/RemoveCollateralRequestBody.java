/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.TransactionRequest;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * RemoveCollateralRequestBody
 */
@JsonPropertyOrder({
  RemoveCollateralRequestBody.JSON_PROPERTY_TRANSACTION_REQUEST,
  RemoveCollateralRequestBody.JSON_PROPERTY_IS_DST_COLLATERAL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RemoveCollateralRequestBody {
  public static final String JSON_PROPERTY_TRANSACTION_REQUEST = "transactionRequest";
  private TransactionRequest transactionRequest;

  public static final String JSON_PROPERTY_IS_DST_COLLATERAL = "isDstCollateral";
  private Boolean isDstCollateral;

  public RemoveCollateralRequestBody() { 
  }

  public RemoveCollateralRequestBody transactionRequest(TransactionRequest transactionRequest) {
    this.transactionRequest = transactionRequest;
    return this;
  }

   /**
   * Get transactionRequest
   * @return transactionRequest
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionRequest getTransactionRequest() {
    return transactionRequest;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionRequest(TransactionRequest transactionRequest) {
    this.transactionRequest = transactionRequest;
  }


  public RemoveCollateralRequestBody isDstCollateral(Boolean isDstCollateral) {
    this.isDstCollateral = isDstCollateral;
    return this;
  }

   /**
   * optional
   * @return isDstCollateral
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DST_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDstCollateral() {
    return isDstCollateral;
  }


  @JsonProperty(JSON_PROPERTY_IS_DST_COLLATERAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDstCollateral(Boolean isDstCollateral) {
    this.isDstCollateral = isDstCollateral;
  }


  /**
   * Return true if this RemoveCollateralRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoveCollateralRequestBody removeCollateralRequestBody = (RemoveCollateralRequestBody) o;
    return Objects.equals(this.transactionRequest, removeCollateralRequestBody.transactionRequest) &&
        Objects.equals(this.isDstCollateral, removeCollateralRequestBody.isDstCollateral);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionRequest, isDstCollateral);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoveCollateralRequestBody {\n");
    sb.append("    transactionRequest: ").append(toIndentedString(transactionRequest)).append("\n");
    sb.append("    isDstCollateral: ").append(toIndentedString(isDstCollateral)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

