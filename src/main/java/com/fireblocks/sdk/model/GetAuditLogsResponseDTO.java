/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** GetAuditLogsResponseDTO */
@JsonPropertyOrder({
    GetAuditLogsResponseDTO.JSON_PROPERTY_DATA,
    GetAuditLogsResponseDTO.JSON_PROPERTY_TOTAL,
    GetAuditLogsResponseDTO.JSON_PROPERTY_CURSOR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetAuditLogsResponseDTO {
    public static final String JSON_PROPERTY_DATA = "data";
    private List<Object> data;

    public static final String JSON_PROPERTY_TOTAL = "total";
    private BigDecimal total;

    public static final String JSON_PROPERTY_CURSOR = "cursor";
    private String cursor;

    public GetAuditLogsResponseDTO() {}

    public GetAuditLogsResponseDTO data(List<Object> data) {
        this.data = data;
        return this;
    }

    public GetAuditLogsResponseDTO addDataItem(Object dataItem) {
        if (this.data == null) {
            this.data = new ArrayList<>();
        }
        this.data.add(dataItem);
        return this;
    }

    /**
     * Get data
     *
     * @return data
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Object> getData() {
        return data;
    }

    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setData(List<Object> data) {
        this.data = data;
    }

    public GetAuditLogsResponseDTO total(BigDecimal total) {
        this.total = total;
        return this;
    }

    /**
     * Get total
     *
     * @return total
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getTotal() {
        return total;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotal(BigDecimal total) {
        this.total = total;
    }

    public GetAuditLogsResponseDTO cursor(String cursor) {
        this.cursor = cursor;
        return this;
    }

    /**
     * Get cursor
     *
     * @return cursor
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CURSOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCursor() {
        return cursor;
    }

    @JsonProperty(JSON_PROPERTY_CURSOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCursor(String cursor) {
        this.cursor = cursor;
    }

    /** Return true if this GetAuditLogsResponseDTO object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetAuditLogsResponseDTO getAuditLogsResponseDTO = (GetAuditLogsResponseDTO) o;
        return Objects.equals(this.data, getAuditLogsResponseDTO.data)
                && Objects.equals(this.total, getAuditLogsResponseDTO.total)
                && Objects.equals(this.cursor, getAuditLogsResponseDTO.cursor);
    }

    @Override
    public int hashCode() {
        return Objects.hash(data, total, cursor);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GetAuditLogsResponseDTO {\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    cursor: ").append(toIndentedString(cursor)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `data` to the URL query string
        if (getData() != null) {
            for (int i = 0; i < getData().size(); i++) {
                joiner.add(
                        String.format(
                                "%sdata%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                String.valueOf(getData().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `total` to the URL query string
        if (getTotal() != null) {
            joiner.add(
                    String.format(
                            "%stotal%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getTotal()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `cursor` to the URL query string
        if (getCursor() != null) {
            joiner.add(
                    String.format(
                            "%scursor%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getCursor()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
