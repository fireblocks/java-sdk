/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * Defines the method by which the Policy Engine calculates accumulation. It uses the Initiator,
 * Source, and Destination to calculate accumulation toward the value under Minimum, for the time
 * under Time Period.
 */
@JsonPropertyOrder({
    LegacyPolicyRuleAmountAggregation.JSON_PROPERTY_OPERATORS,
    LegacyPolicyRuleAmountAggregation.JSON_PROPERTY_SRC_TRANSFER_PEERS,
    LegacyPolicyRuleAmountAggregation.JSON_PROPERTY_DST_TRANSFER_PEERS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class LegacyPolicyRuleAmountAggregation {
    public static final String JSON_PROPERTY_OPERATORS = "operators";
    @jakarta.annotation.Nullable private LegacyAmountAggregationTimePeriodMethod operators;

    public static final String JSON_PROPERTY_SRC_TRANSFER_PEERS = "srcTransferPeers";
    @jakarta.annotation.Nullable private LegacyAmountAggregationTimePeriodMethod srcTransferPeers;

    public static final String JSON_PROPERTY_DST_TRANSFER_PEERS = "dstTransferPeers";
    @jakarta.annotation.Nullable private LegacyAmountAggregationTimePeriodMethod dstTransferPeers;

    public LegacyPolicyRuleAmountAggregation() {}

    public LegacyPolicyRuleAmountAggregation operators(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod operators) {
        this.operators = operators;
        return this;
    }

    /**
     * Get operators
     *
     * @return operators
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OPERATORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LegacyAmountAggregationTimePeriodMethod getOperators() {
        return operators;
    }

    @JsonProperty(JSON_PROPERTY_OPERATORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOperators(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod operators) {
        this.operators = operators;
    }

    public LegacyPolicyRuleAmountAggregation srcTransferPeers(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod srcTransferPeers) {
        this.srcTransferPeers = srcTransferPeers;
        return this;
    }

    /**
     * Get srcTransferPeers
     *
     * @return srcTransferPeers
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SRC_TRANSFER_PEERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LegacyAmountAggregationTimePeriodMethod getSrcTransferPeers() {
        return srcTransferPeers;
    }

    @JsonProperty(JSON_PROPERTY_SRC_TRANSFER_PEERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcTransferPeers(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod srcTransferPeers) {
        this.srcTransferPeers = srcTransferPeers;
    }

    public LegacyPolicyRuleAmountAggregation dstTransferPeers(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod dstTransferPeers) {
        this.dstTransferPeers = dstTransferPeers;
        return this;
    }

    /**
     * Get dstTransferPeers
     *
     * @return dstTransferPeers
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DST_TRANSFER_PEERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public LegacyAmountAggregationTimePeriodMethod getDstTransferPeers() {
        return dstTransferPeers;
    }

    @JsonProperty(JSON_PROPERTY_DST_TRANSFER_PEERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDstTransferPeers(
            @jakarta.annotation.Nullable LegacyAmountAggregationTimePeriodMethod dstTransferPeers) {
        this.dstTransferPeers = dstTransferPeers;
    }

    /** Return true if this LegacyPolicyRule_amountAggregation object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LegacyPolicyRuleAmountAggregation legacyPolicyRuleAmountAggregation =
                (LegacyPolicyRuleAmountAggregation) o;
        return Objects.equals(this.operators, legacyPolicyRuleAmountAggregation.operators)
                && Objects.equals(
                        this.srcTransferPeers, legacyPolicyRuleAmountAggregation.srcTransferPeers)
                && Objects.equals(
                        this.dstTransferPeers, legacyPolicyRuleAmountAggregation.dstTransferPeers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(operators, srcTransferPeers, dstTransferPeers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LegacyPolicyRuleAmountAggregation {\n");
        sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
        sb.append("    srcTransferPeers: ").append(toIndentedString(srcTransferPeers)).append("\n");
        sb.append("    dstTransferPeers: ").append(toIndentedString(dstTransferPeers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `operators` to the URL query string
        if (getOperators() != null) {
            joiner.add(
                    String.format(
                            "%soperators%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getOperators()))));
        }

        // add `srcTransferPeers` to the URL query string
        if (getSrcTransferPeers() != null) {
            joiner.add(
                    String.format(
                            "%ssrcTransferPeers%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSrcTransferPeers()))));
        }

        // add `dstTransferPeers` to the URL query string
        if (getDstTransferPeers() != null) {
            joiner.add(
                    String.format(
                            "%sdstTransferPeers%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDstTransferPeers()))));
        }

        return joiner.toString();
    }
}
