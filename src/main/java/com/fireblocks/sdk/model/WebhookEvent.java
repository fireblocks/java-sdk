/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/** Gets or Sets WebhookEvent */
public enum WebhookEvent {
    TRANSACTION_CREATED("transaction.created"),

    TRANSACTION_STATUS_UPDATED("transaction.status.updated"),

    TRANSACTION_APPROVAL_STATUS_UPDATED("transaction.approval_status.updated"),

    TRANSACTION_NETWORK_RECORDS_PROCESSING_COMPLETED(
            "transaction.network_records.processing_completed"),

    EXTERNAL_WALLET_ASSET_ADDED("external_wallet.asset.added"),

    EXTERNAL_WALLET_ASSET_REMOVED("external_wallet.asset.removed"),

    INTERNAL_WALLET_ASSET_ADDED("internal_wallet.asset.added"),

    INTERNAL_WALLET_ASSET_REMOVED("internal_wallet.asset.removed"),

    CONTRACT_WALLET_ASSET_ADDED("contract_wallet.asset.added"),

    CONTRACT_WALLET_ASSET_REMOVED("contract_wallet.asset.removed"),

    VAULT_ACCOUNT_CREATED("vault_account.created"),

    VAULT_ACCOUNT_ASSET_ADDED("vault_account.asset.added"),

    VAULT_ACCOUNT_ASSET_BALANCE_UPDATED("vault_account.asset.balance_updated"),

    EMBEDDED_WALLET_STATUS_UPDATED("embedded_wallet.status.updated"),

    EMBEDDED_WALLET_CREATED("embedded_wallet.created"),

    EMBEDDED_WALLET_ASSET_BALANCE_UPDATED("embedded_wallet.asset.balance_updated"),

    EMBEDDED_WALLET_ASSET_ADDED("embedded_wallet.asset.added"),

    EMBEDDED_WALLET_ACCOUNT_CREATED("embedded_wallet.account.created"),

    EMBEDDED_WALLET_DEVICE_ADDED("embedded_wallet.device.added"),

    ONCHAIN_DATA_UPDATED("onchain_data.updated"),

    CONNECTION_ADDED("connection.added"),

    CONNECTION_REMOVED("connection.removed"),

    CONNECTION_REQUEST_WAITING_PEER_APPROVAL("connection.request.waiting_peer_approval"),

    CONNECTION_REQUEST_REJECTED_BY_PEER("connection.request.rejected_by_peer");

    private String value;

    WebhookEvent(String value) {
        this.value = value;
    }

    @JsonValue
    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    @JsonCreator
    public static WebhookEvent fromValue(String value) {
        for (WebhookEvent b : WebhookEvent.values()) {
            if (b.value.equals(value)) {
                return b;
            }
        }
        throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        if (prefix == null) {
            prefix = "";
        }

        return String.format("%s=%s", prefix, this.toString());
    }
}
