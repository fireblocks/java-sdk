/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** The result of the Compliance AML/Travel Rule screening. */
@JsonPropertyOrder({
    ComplianceResults.JSON_PROPERTY_AML,
    ComplianceResults.JSON_PROPERTY_TR,
    ComplianceResults.JSON_PROPERTY_AML_LIST,
    ComplianceResults.JSON_PROPERTY_STATUS,
    ComplianceResults.JSON_PROPERTY_AML_REGISTRATION
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ComplianceResults {
    public static final String JSON_PROPERTY_AML = "aml";
    @jakarta.annotation.Nullable private ComplianceScreeningResult aml;

    public static final String JSON_PROPERTY_TR = "tr";
    @jakarta.annotation.Nullable private ComplianceScreeningResult tr;

    public static final String JSON_PROPERTY_AML_LIST = "amlList";

    @jakarta.annotation.Nullable
    private List<ComplianceScreeningResult> amlList = new ArrayList<>();

    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nullable private ComplianceResultStatusesEnum status;

    public static final String JSON_PROPERTY_AML_REGISTRATION = "amlRegistration";
    @jakarta.annotation.Nullable private AmlRegistrationResult amlRegistration;

    public ComplianceResults() {}

    public ComplianceResults aml(@jakarta.annotation.Nullable ComplianceScreeningResult aml) {
        this.aml = aml;
        return this;
    }

    /**
     * Get aml
     *
     * @return aml
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AML)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ComplianceScreeningResult getAml() {
        return aml;
    }

    @JsonProperty(JSON_PROPERTY_AML)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAml(@jakarta.annotation.Nullable ComplianceScreeningResult aml) {
        this.aml = aml;
    }

    public ComplianceResults tr(@jakarta.annotation.Nullable ComplianceScreeningResult tr) {
        this.tr = tr;
        return this;
    }

    /**
     * Get tr
     *
     * @return tr
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ComplianceScreeningResult getTr() {
        return tr;
    }

    @JsonProperty(JSON_PROPERTY_TR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTr(@jakarta.annotation.Nullable ComplianceScreeningResult tr) {
        this.tr = tr;
    }

    public ComplianceResults amlList(
            @jakarta.annotation.Nullable List<ComplianceScreeningResult> amlList) {
        this.amlList = amlList;
        return this;
    }

    public ComplianceResults addAmlListItem(ComplianceScreeningResult amlListItem) {
        if (this.amlList == null) {
            this.amlList = new ArrayList<>();
        }
        this.amlList.add(amlListItem);
        return this;
    }

    /**
     * The list of all results of the AML screening.
     *
     * @return amlList
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AML_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<ComplianceScreeningResult> getAmlList() {
        return amlList;
    }

    @JsonProperty(JSON_PROPERTY_AML_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmlList(@jakarta.annotation.Nullable List<ComplianceScreeningResult> amlList) {
        this.amlList = amlList;
    }

    public ComplianceResults status(
            @jakarta.annotation.Nullable ComplianceResultStatusesEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ComplianceResultStatusesEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(@jakarta.annotation.Nullable ComplianceResultStatusesEnum status) {
        this.status = status;
    }

    public ComplianceResults amlRegistration(
            @jakarta.annotation.Nullable AmlRegistrationResult amlRegistration) {
        this.amlRegistration = amlRegistration;
        return this;
    }

    /**
     * Get amlRegistration
     *
     * @return amlRegistration
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AML_REGISTRATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public AmlRegistrationResult getAmlRegistration() {
        return amlRegistration;
    }

    @JsonProperty(JSON_PROPERTY_AML_REGISTRATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmlRegistration(
            @jakarta.annotation.Nullable AmlRegistrationResult amlRegistration) {
        this.amlRegistration = amlRegistration;
    }

    /** Return true if this ComplianceResults object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ComplianceResults complianceResults = (ComplianceResults) o;
        return Objects.equals(this.aml, complianceResults.aml)
                && Objects.equals(this.tr, complianceResults.tr)
                && Objects.equals(this.amlList, complianceResults.amlList)
                && Objects.equals(this.status, complianceResults.status)
                && Objects.equals(this.amlRegistration, complianceResults.amlRegistration);
    }

    @Override
    public int hashCode() {
        return Objects.hash(aml, tr, amlList, status, amlRegistration);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ComplianceResults {\n");
        sb.append("    aml: ").append(toIndentedString(aml)).append("\n");
        sb.append("    tr: ").append(toIndentedString(tr)).append("\n");
        sb.append("    amlList: ").append(toIndentedString(amlList)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    amlRegistration: ").append(toIndentedString(amlRegistration)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `aml` to the URL query string
        if (getAml() != null) {
            joiner.add(getAml().toUrlQueryString(prefix + "aml" + suffix));
        }

        // add `tr` to the URL query string
        if (getTr() != null) {
            joiner.add(getTr().toUrlQueryString(prefix + "tr" + suffix));
        }

        // add `amlList` to the URL query string
        if (getAmlList() != null) {
            for (int i = 0; i < getAmlList().size(); i++) {
                if (getAmlList().get(i) != null) {
                    joiner.add(
                            getAmlList()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%samlList%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(
                    String.format(
                            "%sstatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
        }

        // add `amlRegistration` to the URL query string
        if (getAmlRegistration() != null) {
            joiner.add(getAmlRegistration().toUrlQueryString(prefix + "amlRegistration" + suffix));
        }

        return joiner.toString();
    }
}
