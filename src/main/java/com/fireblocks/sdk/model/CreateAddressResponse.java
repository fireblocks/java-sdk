/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateAddressResponse */
@JsonPropertyOrder({
    CreateAddressResponse.JSON_PROPERTY_ADDRESS,
    CreateAddressResponse.JSON_PROPERTY_LEGACY_ADDRESS,
    CreateAddressResponse.JSON_PROPERTY_ENTERPRISE_ADDRESS,
    CreateAddressResponse.JSON_PROPERTY_TAG,
    CreateAddressResponse.JSON_PROPERTY_BIP44_ADDRESS_INDEX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateAddressResponse {
    public static final String JSON_PROPERTY_ADDRESS = "address";
    private String address;

    public static final String JSON_PROPERTY_LEGACY_ADDRESS = "legacyAddress";
    private String legacyAddress;

    public static final String JSON_PROPERTY_ENTERPRISE_ADDRESS = "enterpriseAddress";
    private String enterpriseAddress;

    public static final String JSON_PROPERTY_TAG = "tag";
    private String tag;

    public static final String JSON_PROPERTY_BIP44_ADDRESS_INDEX = "bip44AddressIndex";
    private Integer bip44AddressIndex;

    public CreateAddressResponse() {}

    public CreateAddressResponse address(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get address
     *
     * @return address
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAddress() {
        return address;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddress(String address) {
        this.address = address;
    }

    public CreateAddressResponse legacyAddress(String legacyAddress) {
        this.legacyAddress = legacyAddress;
        return this;
    }

    /**
     * Get legacyAddress
     *
     * @return legacyAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LEGACY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLegacyAddress() {
        return legacyAddress;
    }

    @JsonProperty(JSON_PROPERTY_LEGACY_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLegacyAddress(String legacyAddress) {
        this.legacyAddress = legacyAddress;
    }

    public CreateAddressResponse enterpriseAddress(String enterpriseAddress) {
        this.enterpriseAddress = enterpriseAddress;
        return this;
    }

    /**
     * Get enterpriseAddress
     *
     * @return enterpriseAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ENTERPRISE_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEnterpriseAddress() {
        return enterpriseAddress;
    }

    @JsonProperty(JSON_PROPERTY_ENTERPRISE_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnterpriseAddress(String enterpriseAddress) {
        this.enterpriseAddress = enterpriseAddress;
    }

    public CreateAddressResponse tag(String tag) {
        this.tag = tag;
        return this;
    }

    /**
     * Get tag
     *
     * @return tag
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTag() {
        return tag;
    }

    @JsonProperty(JSON_PROPERTY_TAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTag(String tag) {
        this.tag = tag;
    }

    public CreateAddressResponse bip44AddressIndex(Integer bip44AddressIndex) {
        this.bip44AddressIndex = bip44AddressIndex;
        return this;
    }

    /**
     * Get bip44AddressIndex
     *
     * @return bip44AddressIndex
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BIP44_ADDRESS_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getBip44AddressIndex() {
        return bip44AddressIndex;
    }

    @JsonProperty(JSON_PROPERTY_BIP44_ADDRESS_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBip44AddressIndex(Integer bip44AddressIndex) {
        this.bip44AddressIndex = bip44AddressIndex;
    }

    /** Return true if this CreateAddressResponse object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateAddressResponse createAddressResponse = (CreateAddressResponse) o;
        return Objects.equals(this.address, createAddressResponse.address)
                && Objects.equals(this.legacyAddress, createAddressResponse.legacyAddress)
                && Objects.equals(this.enterpriseAddress, createAddressResponse.enterpriseAddress)
                && Objects.equals(this.tag, createAddressResponse.tag)
                && Objects.equals(this.bip44AddressIndex, createAddressResponse.bip44AddressIndex);
    }

    @Override
    public int hashCode() {
        return Objects.hash(address, legacyAddress, enterpriseAddress, tag, bip44AddressIndex);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateAddressResponse {\n");
        sb.append("    address: ").append(toIndentedString(address)).append("\n");
        sb.append("    legacyAddress: ").append(toIndentedString(legacyAddress)).append("\n");
        sb.append("    enterpriseAddress: ")
                .append(toIndentedString(enterpriseAddress))
                .append("\n");
        sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
        sb.append("    bip44AddressIndex: ")
                .append(toIndentedString(bip44AddressIndex))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `address` to the URL query string
        if (getAddress() != null) {
            joiner.add(
                    String.format(
                            "%saddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getAddress()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `legacyAddress` to the URL query string
        if (getLegacyAddress() != null) {
            joiner.add(
                    String.format(
                            "%slegacyAddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getLegacyAddress()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enterpriseAddress` to the URL query string
        if (getEnterpriseAddress() != null) {
            joiner.add(
                    String.format(
                            "%senterpriseAddress%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getEnterpriseAddress()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tag` to the URL query string
        if (getTag() != null) {
            joiner.add(
                    String.format(
                            "%stag%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getTag()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `bip44AddressIndex` to the URL query string
        if (getBip44AddressIndex() != null) {
            joiner.add(
                    String.format(
                            "%sbip44AddressIndex%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getBip44AddressIndex()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
