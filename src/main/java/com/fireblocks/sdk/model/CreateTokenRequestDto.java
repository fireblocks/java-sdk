/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.CreateTokenRequestDtoCreateParams;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * CreateTokenRequestDto
 */
@JsonPropertyOrder({
  CreateTokenRequestDto.JSON_PROPERTY_BLOCKCHAIN_ID,
  CreateTokenRequestDto.JSON_PROPERTY_ASSET_ID,
  CreateTokenRequestDto.JSON_PROPERTY_VAULT_ACCOUNT_ID,
  CreateTokenRequestDto.JSON_PROPERTY_CREATE_PARAMS,
  CreateTokenRequestDto.JSON_PROPERTY_DISPLAY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateTokenRequestDto {
  public static final String JSON_PROPERTY_BLOCKCHAIN_ID = "blockchainId";
  private String blockchainId;

  public static final String JSON_PROPERTY_ASSET_ID = "assetId";
  private String assetId;

  public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
  private String vaultAccountId;

  public static final String JSON_PROPERTY_CREATE_PARAMS = "createParams";
  private CreateTokenRequestDtoCreateParams createParams;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public CreateTokenRequestDto() { 
  }

  public CreateTokenRequestDto blockchainId(String blockchainId) {
    this.blockchainId = blockchainId;
    return this;
  }

   /**
   * The id of the blockchain the request was initiated on
   * @return blockchainId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BLOCKCHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBlockchainId() {
    return blockchainId;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKCHAIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlockchainId(String blockchainId) {
    this.blockchainId = blockchainId;
  }


  public CreateTokenRequestDto assetId(String assetId) {
    this.assetId = assetId;
    return this;
  }

   /**
   * The base asset identifier of the blockchain you want to deploy to
   * @return assetId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAssetId() {
    return assetId;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetId(String assetId) {
    this.assetId = assetId;
  }


  public CreateTokenRequestDto vaultAccountId(String vaultAccountId) {
    this.vaultAccountId = vaultAccountId;
    return this;
  }

   /**
   * The id of the vault account that initiated the request to issue the token
   * @return vaultAccountId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVaultAccountId() {
    return vaultAccountId;
  }


  @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVaultAccountId(String vaultAccountId) {
    this.vaultAccountId = vaultAccountId;
  }


  public CreateTokenRequestDto createParams(CreateTokenRequestDtoCreateParams createParams) {
    this.createParams = createParams;
    return this;
  }

   /**
   * Get createParams
   * @return createParams
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATE_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CreateTokenRequestDtoCreateParams getCreateParams() {
    return createParams;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_PARAMS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateParams(CreateTokenRequestDtoCreateParams createParams) {
    this.createParams = createParams;
  }


  public CreateTokenRequestDto displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Return true if this CreateTokenRequestDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTokenRequestDto createTokenRequestDto = (CreateTokenRequestDto) o;
    return Objects.equals(this.blockchainId, createTokenRequestDto.blockchainId) &&
        Objects.equals(this.assetId, createTokenRequestDto.assetId) &&
        Objects.equals(this.vaultAccountId, createTokenRequestDto.vaultAccountId) &&
        Objects.equals(this.createParams, createTokenRequestDto.createParams) &&
        Objects.equals(this.displayName, createTokenRequestDto.displayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockchainId, assetId, vaultAccountId, createParams, displayName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTokenRequestDto {\n");
    sb.append("    blockchainId: ").append(toIndentedString(blockchainId)).append("\n");
    sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
    sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
    sb.append("    createParams: ").append(toIndentedString(createParams)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `blockchainId` to the URL query string
    if (getBlockchainId() != null) {
      joiner.add(String.format("%sblockchainId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getBlockchainId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `assetId` to the URL query string
    if (getAssetId() != null) {
      joiner.add(String.format("%sassetId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAssetId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `vaultAccountId` to the URL query string
    if (getVaultAccountId() != null) {
      joiner.add(String.format("%svaultAccountId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVaultAccountId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `createParams` to the URL query string
    if (getCreateParams() != null) {
      joiner.add(getCreateParams().toUrlQueryString(prefix + "createParams" + suffix));
    }

    // add `displayName` to the URL query string
    if (getDisplayName() != null) {
      joiner.add(String.format("%sdisplayName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisplayName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

