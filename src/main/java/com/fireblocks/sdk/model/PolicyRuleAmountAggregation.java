/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.AmountAggregationTimePeriodMethod;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * Defines the method by which the Policy Engine calculates accumulation. It uses the Initiator, Source, and Destination to calculate accumulation toward the value under Minimum, for the time under Time Period. 
 */
@JsonPropertyOrder({
  PolicyRuleAmountAggregation.JSON_PROPERTY_OPERATORS,
  PolicyRuleAmountAggregation.JSON_PROPERTY_SRC_TRANSFER_PEERS,
  PolicyRuleAmountAggregation.JSON_PROPERTY_DST_TRANSFER_PEERS
})
@JsonTypeName("PolicyRule_amountAggregation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PolicyRuleAmountAggregation {
  public static final String JSON_PROPERTY_OPERATORS = "operators";
  private AmountAggregationTimePeriodMethod operators;

  public static final String JSON_PROPERTY_SRC_TRANSFER_PEERS = "srcTransferPeers";
  private AmountAggregationTimePeriodMethod srcTransferPeers;

  public static final String JSON_PROPERTY_DST_TRANSFER_PEERS = "dstTransferPeers";
  private AmountAggregationTimePeriodMethod dstTransferPeers;

  public PolicyRuleAmountAggregation() { 
  }

  public PolicyRuleAmountAggregation operators(AmountAggregationTimePeriodMethod operators) {
    this.operators = operators;
    return this;
  }

   /**
   * Get operators
   * @return operators
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmountAggregationTimePeriodMethod getOperators() {
    return operators;
  }


  @JsonProperty(JSON_PROPERTY_OPERATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperators(AmountAggregationTimePeriodMethod operators) {
    this.operators = operators;
  }


  public PolicyRuleAmountAggregation srcTransferPeers(AmountAggregationTimePeriodMethod srcTransferPeers) {
    this.srcTransferPeers = srcTransferPeers;
    return this;
  }

   /**
   * Get srcTransferPeers
   * @return srcTransferPeers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SRC_TRANSFER_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmountAggregationTimePeriodMethod getSrcTransferPeers() {
    return srcTransferPeers;
  }


  @JsonProperty(JSON_PROPERTY_SRC_TRANSFER_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSrcTransferPeers(AmountAggregationTimePeriodMethod srcTransferPeers) {
    this.srcTransferPeers = srcTransferPeers;
  }


  public PolicyRuleAmountAggregation dstTransferPeers(AmountAggregationTimePeriodMethod dstTransferPeers) {
    this.dstTransferPeers = dstTransferPeers;
    return this;
  }

   /**
   * Get dstTransferPeers
   * @return dstTransferPeers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DST_TRANSFER_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmountAggregationTimePeriodMethod getDstTransferPeers() {
    return dstTransferPeers;
  }


  @JsonProperty(JSON_PROPERTY_DST_TRANSFER_PEERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDstTransferPeers(AmountAggregationTimePeriodMethod dstTransferPeers) {
    this.dstTransferPeers = dstTransferPeers;
  }


  /**
   * Return true if this PolicyRule_amountAggregation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyRuleAmountAggregation policyRuleAmountAggregation = (PolicyRuleAmountAggregation) o;
    return Objects.equals(this.operators, policyRuleAmountAggregation.operators) &&
        Objects.equals(this.srcTransferPeers, policyRuleAmountAggregation.srcTransferPeers) &&
        Objects.equals(this.dstTransferPeers, policyRuleAmountAggregation.dstTransferPeers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operators, srcTransferPeers, dstTransferPeers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyRuleAmountAggregation {\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    srcTransferPeers: ").append(toIndentedString(srcTransferPeers)).append("\n");
    sb.append("    dstTransferPeers: ").append(toIndentedString(dstTransferPeers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

