/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** Advanced SPEI payment information for Mexican bank transfers with full details */
@JsonPropertyOrder({
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_RAIL,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_ADDRESSING_SYSTEM,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_COUNTRY,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_BANK_NAME,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_BENEFICIARY_RFC,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_SENDER_DOCUMENT_ID,
    SpeiAdvancedPaymentInfo.JSON_PROPERTY_CLABE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class SpeiAdvancedPaymentInfo {
    /** The payment rail type for SPEI transfers */
    public enum RailEnum {
        SPEI(String.valueOf("SPEI"));

        private String value;

        RailEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RailEnum fromValue(String value) {
            for (RailEnum b : RailEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_RAIL = "rail";
    @jakarta.annotation.Nonnull private RailEnum rail;

    /** The addressing system used for SPEI transfers */
    public enum AddressingSystemEnum {
        CLABE(String.valueOf("CLABE"));

        private String value;

        AddressingSystemEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static AddressingSystemEnum fromValue(String value) {
            for (AddressingSystemEnum b : AddressingSystemEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_ADDRESSING_SYSTEM = "addressingSystem";
    @jakarta.annotation.Nonnull private AddressingSystemEnum addressingSystem;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME = "accountHolderGivenName";
    @jakarta.annotation.Nonnull private String accountHolderGivenName;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME = "accountHolderSurname";
    @jakarta.annotation.Nonnull private String accountHolderSurname;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    @jakarta.annotation.Nonnull private String country;

    public static final String JSON_PROPERTY_BANK_NAME = "bankName";
    @jakarta.annotation.Nullable private String bankName;

    public static final String JSON_PROPERTY_BENEFICIARY_RFC = "beneficiaryRfc";
    @jakarta.annotation.Nullable private String beneficiaryRfc;

    public static final String JSON_PROPERTY_SENDER_DOCUMENT_ID = "senderDocumentId";
    @jakarta.annotation.Nullable private String senderDocumentId;

    public static final String JSON_PROPERTY_CLABE = "clabe";
    @jakarta.annotation.Nonnull private String clabe;

    public SpeiAdvancedPaymentInfo() {}

    @JsonCreator
    public SpeiAdvancedPaymentInfo(
            @JsonProperty(value = JSON_PROPERTY_RAIL, required = true) RailEnum rail,
            @JsonProperty(value = JSON_PROPERTY_ADDRESSING_SYSTEM, required = true)
                    AddressingSystemEnum addressingSystem,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME, required = true)
                    String accountHolderGivenName,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME, required = true)
                    String accountHolderSurname,
            @JsonProperty(value = JSON_PROPERTY_COUNTRY, required = true) String country,
            @JsonProperty(value = JSON_PROPERTY_CLABE, required = true) String clabe) {
        this.rail = rail;
        this.addressingSystem = addressingSystem;
        this.accountHolderGivenName = accountHolderGivenName;
        this.accountHolderSurname = accountHolderSurname;
        this.country = country;
        this.clabe = clabe;
    }

    public SpeiAdvancedPaymentInfo rail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
        return this;
    }

    /**
     * The payment rail type for SPEI transfers
     *
     * @return rail
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RailEnum getRail() {
        return rail;
    }

    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
    }

    public SpeiAdvancedPaymentInfo addressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
        return this;
    }

    /**
     * The addressing system used for SPEI transfers
     *
     * @return addressingSystem
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AddressingSystemEnum getAddressingSystem() {
        return addressingSystem;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAddressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
    }

    public SpeiAdvancedPaymentInfo accountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
        return this;
    }

    /**
     * The given name (first name) of the account holder
     *
     * @return accountHolderGivenName
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderGivenName() {
        return accountHolderGivenName;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
    }

    public SpeiAdvancedPaymentInfo accountHolderSurname(
            @jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
        return this;
    }

    /**
     * The surname (last name) of the account holder
     *
     * @return accountHolderSurname
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderSurname() {
        return accountHolderSurname;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderSurname(@jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
    }

    public SpeiAdvancedPaymentInfo country(@jakarta.annotation.Nonnull String country) {
        this.country = country;
        return this;
    }

    /**
     * The country for the transfer (ISO 3166-1 alpha-2 code)
     *
     * @return country
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCountry(@jakarta.annotation.Nonnull String country) {
        this.country = country;
    }

    public SpeiAdvancedPaymentInfo bankName(@jakarta.annotation.Nullable String bankName) {
        this.bankName = bankName;
        return this;
    }

    /**
     * The name of the bank
     *
     * @return bankName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BANK_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBankName() {
        return bankName;
    }

    @JsonProperty(JSON_PROPERTY_BANK_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBankName(@jakarta.annotation.Nullable String bankName) {
        this.bankName = bankName;
    }

    public SpeiAdvancedPaymentInfo beneficiaryRfc(
            @jakarta.annotation.Nullable String beneficiaryRfc) {
        this.beneficiaryRfc = beneficiaryRfc;
        return this;
    }

    /**
     * The RFC (Registro Federal de Contribuyentes) of the beneficiary
     *
     * @return beneficiaryRfc
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BENEFICIARY_RFC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBeneficiaryRfc() {
        return beneficiaryRfc;
    }

    @JsonProperty(JSON_PROPERTY_BENEFICIARY_RFC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBeneficiaryRfc(@jakarta.annotation.Nullable String beneficiaryRfc) {
        this.beneficiaryRfc = beneficiaryRfc;
    }

    public SpeiAdvancedPaymentInfo senderDocumentId(
            @jakarta.annotation.Nullable String senderDocumentId) {
        this.senderDocumentId = senderDocumentId;
        return this;
    }

    /**
     * The document ID of the sender
     *
     * @return senderDocumentId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SENDER_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSenderDocumentId() {
        return senderDocumentId;
    }

    @JsonProperty(JSON_PROPERTY_SENDER_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSenderDocumentId(@jakarta.annotation.Nullable String senderDocumentId) {
        this.senderDocumentId = senderDocumentId;
    }

    public SpeiAdvancedPaymentInfo clabe(@jakarta.annotation.Nonnull String clabe) {
        this.clabe = clabe;
        return this;
    }

    /**
     * The CLABE (Clave Bancaria Estandarizada) number
     *
     * @return clabe
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CLABE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getClabe() {
        return clabe;
    }

    @JsonProperty(JSON_PROPERTY_CLABE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setClabe(@jakarta.annotation.Nonnull String clabe) {
        this.clabe = clabe;
    }

    /** Return true if this SpeiAdvancedPaymentInfo object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SpeiAdvancedPaymentInfo speiAdvancedPaymentInfo = (SpeiAdvancedPaymentInfo) o;
        return Objects.equals(this.rail, speiAdvancedPaymentInfo.rail)
                && Objects.equals(this.addressingSystem, speiAdvancedPaymentInfo.addressingSystem)
                && Objects.equals(
                        this.accountHolderGivenName, speiAdvancedPaymentInfo.accountHolderGivenName)
                && Objects.equals(
                        this.accountHolderSurname, speiAdvancedPaymentInfo.accountHolderSurname)
                && Objects.equals(this.country, speiAdvancedPaymentInfo.country)
                && Objects.equals(this.bankName, speiAdvancedPaymentInfo.bankName)
                && Objects.equals(this.beneficiaryRfc, speiAdvancedPaymentInfo.beneficiaryRfc)
                && Objects.equals(this.senderDocumentId, speiAdvancedPaymentInfo.senderDocumentId)
                && Objects.equals(this.clabe, speiAdvancedPaymentInfo.clabe);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                rail,
                addressingSystem,
                accountHolderGivenName,
                accountHolderSurname,
                country,
                bankName,
                beneficiaryRfc,
                senderDocumentId,
                clabe);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SpeiAdvancedPaymentInfo {\n");
        sb.append("    rail: ").append(toIndentedString(rail)).append("\n");
        sb.append("    addressingSystem: ").append(toIndentedString(addressingSystem)).append("\n");
        sb.append("    accountHolderGivenName: ")
                .append(toIndentedString(accountHolderGivenName))
                .append("\n");
        sb.append("    accountHolderSurname: ")
                .append(toIndentedString(accountHolderSurname))
                .append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
        sb.append("    beneficiaryRfc: ").append(toIndentedString(beneficiaryRfc)).append("\n");
        sb.append("    senderDocumentId: ").append(toIndentedString(senderDocumentId)).append("\n");
        sb.append("    clabe: ").append(toIndentedString(clabe)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `rail` to the URL query string
        if (getRail() != null) {
            joiner.add(
                    String.format(
                            "%srail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getRail()))));
        }

        // add `addressingSystem` to the URL query string
        if (getAddressingSystem() != null) {
            joiner.add(
                    String.format(
                            "%saddressingSystem%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddressingSystem()))));
        }

        // add `accountHolderGivenName` to the URL query string
        if (getAccountHolderGivenName() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderGivenName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderGivenName()))));
        }

        // add `accountHolderSurname` to the URL query string
        if (getAccountHolderSurname() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderSurname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderSurname()))));
        }

        // add `country` to the URL query string
        if (getCountry() != null) {
            joiner.add(
                    String.format(
                            "%scountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
        }

        // add `bankName` to the URL query string
        if (getBankName() != null) {
            joiner.add(
                    String.format(
                            "%sbankName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBankName()))));
        }

        // add `beneficiaryRfc` to the URL query string
        if (getBeneficiaryRfc() != null) {
            joiner.add(
                    String.format(
                            "%sbeneficiaryRfc%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBeneficiaryRfc()))));
        }

        // add `senderDocumentId` to the URL query string
        if (getSenderDocumentId() != null) {
            joiner.add(
                    String.format(
                            "%ssenderDocumentId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSenderDocumentId()))));
        }

        // add `clabe` to the URL query string
        if (getClabe() != null) {
            joiner.add(
                    String.format(
                            "%sclabe%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getClabe()))));
        }

        return joiner.toString();
    }
}
