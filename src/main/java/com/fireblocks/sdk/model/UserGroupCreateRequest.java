/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** UserGroupCreateRequest */
@JsonPropertyOrder({
    UserGroupCreateRequest.JSON_PROPERTY_GROUP_NAME,
    UserGroupCreateRequest.JSON_PROPERTY_MEMBER_IDS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class UserGroupCreateRequest {
    public static final String JSON_PROPERTY_GROUP_NAME = "groupName";
    @jakarta.annotation.Nullable private String groupName;

    public static final String JSON_PROPERTY_MEMBER_IDS = "memberIds";
    @jakarta.annotation.Nullable private List<String> memberIds = new ArrayList<>();

    public UserGroupCreateRequest() {}

    public UserGroupCreateRequest groupName(@jakarta.annotation.Nullable String groupName) {
        this.groupName = groupName;
        return this;
    }

    /**
     * Get groupName
     *
     * @return groupName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_GROUP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getGroupName() {
        return groupName;
    }

    @JsonProperty(JSON_PROPERTY_GROUP_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroupName(@jakarta.annotation.Nullable String groupName) {
        this.groupName = groupName;
    }

    public UserGroupCreateRequest memberIds(@jakarta.annotation.Nullable List<String> memberIds) {
        this.memberIds = memberIds;
        return this;
    }

    public UserGroupCreateRequest addMemberIdsItem(String memberIdsItem) {
        if (this.memberIds == null) {
            this.memberIds = new ArrayList<>();
        }
        this.memberIds.add(memberIdsItem);
        return this;
    }

    /**
     * Get memberIds
     *
     * @return memberIds
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_MEMBER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getMemberIds() {
        return memberIds;
    }

    @JsonProperty(JSON_PROPERTY_MEMBER_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMemberIds(@jakarta.annotation.Nullable List<String> memberIds) {
        this.memberIds = memberIds;
    }

    /** Return true if this UserGroupCreateRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserGroupCreateRequest userGroupCreateRequest = (UserGroupCreateRequest) o;
        return Objects.equals(this.groupName, userGroupCreateRequest.groupName)
                && Objects.equals(this.memberIds, userGroupCreateRequest.memberIds);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groupName, memberIds);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserGroupCreateRequest {\n");
        sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
        sb.append("    memberIds: ").append(toIndentedString(memberIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `groupName` to the URL query string
        if (getGroupName() != null) {
            joiner.add(
                    String.format(
                            "%sgroupName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getGroupName()))));
        }

        // add `memberIds` to the URL query string
        if (getMemberIds() != null) {
            for (int i = 0; i < getMemberIds().size(); i++) {
                joiner.add(
                        String.format(
                                "%smemberIds%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                ApiClient.urlEncode(
                                        ApiClient.valueToString(getMemberIds().get(i)))));
            }
        }

        return joiner.toString();
    }
}
