/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.model.NetworkFee;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.JSON;


/**
 * EstimatedNetworkFeeResponse
 */
@JsonPropertyOrder({
  EstimatedNetworkFeeResponse.JSON_PROPERTY_LOW,
  EstimatedNetworkFeeResponse.JSON_PROPERTY_MEDIUM,
  EstimatedNetworkFeeResponse.JSON_PROPERTY_HIGH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EstimatedNetworkFeeResponse {
  public static final String JSON_PROPERTY_LOW = "low";
  private NetworkFee low;

  public static final String JSON_PROPERTY_MEDIUM = "medium";
  private NetworkFee medium;

  public static final String JSON_PROPERTY_HIGH = "high";
  private NetworkFee high;

  public EstimatedNetworkFeeResponse() { 
  }

  public EstimatedNetworkFeeResponse low(NetworkFee low) {
    this.low = low;
    return this;
  }

   /**
   * Get low
   * @return low
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkFee getLow() {
    return low;
  }


  @JsonProperty(JSON_PROPERTY_LOW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLow(NetworkFee low) {
    this.low = low;
  }


  public EstimatedNetworkFeeResponse medium(NetworkFee medium) {
    this.medium = medium;
    return this;
  }

   /**
   * Get medium
   * @return medium
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkFee getMedium() {
    return medium;
  }


  @JsonProperty(JSON_PROPERTY_MEDIUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMedium(NetworkFee medium) {
    this.medium = medium;
  }


  public EstimatedNetworkFeeResponse high(NetworkFee high) {
    this.high = high;
    return this;
  }

   /**
   * Get high
   * @return high
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HIGH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkFee getHigh() {
    return high;
  }


  @JsonProperty(JSON_PROPERTY_HIGH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHigh(NetworkFee high) {
    this.high = high;
  }


  /**
   * Return true if this EstimatedNetworkFeeResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimatedNetworkFeeResponse estimatedNetworkFeeResponse = (EstimatedNetworkFeeResponse) o;
    return Objects.equals(this.low, estimatedNetworkFeeResponse.low) &&
        Objects.equals(this.medium, estimatedNetworkFeeResponse.medium) &&
        Objects.equals(this.high, estimatedNetworkFeeResponse.high);
  }

  @Override
  public int hashCode() {
    return Objects.hash(low, medium, high);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimatedNetworkFeeResponse {\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    medium: ").append(toIndentedString(medium)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

