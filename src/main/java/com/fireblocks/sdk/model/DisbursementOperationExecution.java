/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** DisbursementOperationExecution */
@JsonPropertyOrder({
    DisbursementOperationExecution.JSON_PROPERTY_INPUT,
    DisbursementOperationExecution.JSON_PROPERTY_OUTPUT,
    DisbursementOperationExecution.JSON_PROPERTY_PAYOUT_ID,
    DisbursementOperationExecution.JSON_PROPERTY_STARTED_AT,
    DisbursementOperationExecution.JSON_PROPERTY_FINISHED_AT,
    DisbursementOperationExecution.JSON_PROPERTY_FAILURE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DisbursementOperationExecution {
    public static final String JSON_PROPERTY_INPUT = "input";
    private DisbursementOperationInput input;

    public static final String JSON_PROPERTY_OUTPUT = "output";
    private DisbursementOperationExecutionOutput output;

    public static final String JSON_PROPERTY_PAYOUT_ID = "payoutId";
    private String payoutId;

    public static final String JSON_PROPERTY_STARTED_AT = "startedAt";
    private BigDecimal startedAt;

    public static final String JSON_PROPERTY_FINISHED_AT = "finishedAt";
    private BigDecimal finishedAt;

    public static final String JSON_PROPERTY_FAILURE = "failure";
    private OperationExecutionFailure failure;

    public DisbursementOperationExecution() {}

    public DisbursementOperationExecution input(DisbursementOperationInput input) {
        this.input = input;
        return this;
    }

    /**
     * Get input
     *
     * @return input
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_INPUT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DisbursementOperationInput getInput() {
        return input;
    }

    @JsonProperty(JSON_PROPERTY_INPUT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setInput(DisbursementOperationInput input) {
        this.input = input;
    }

    public DisbursementOperationExecution output(DisbursementOperationExecutionOutput output) {
        this.output = output;
        return this;
    }

    /**
     * Get output
     *
     * @return output
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OUTPUT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public DisbursementOperationExecutionOutput getOutput() {
        return output;
    }

    @JsonProperty(JSON_PROPERTY_OUTPUT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOutput(DisbursementOperationExecutionOutput output) {
        this.output = output;
    }

    public DisbursementOperationExecution payoutId(String payoutId) {
        this.payoutId = payoutId;
        return this;
    }

    /**
     * Get payoutId
     *
     * @return payoutId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPayoutId() {
        return payoutId;
    }

    @JsonProperty(JSON_PROPERTY_PAYOUT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPayoutId(String payoutId) {
        this.payoutId = payoutId;
    }

    public DisbursementOperationExecution startedAt(BigDecimal startedAt) {
        this.startedAt = startedAt;
        return this;
    }

    /**
     * Get startedAt
     *
     * @return startedAt
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public BigDecimal getStartedAt() {
        return startedAt;
    }

    @JsonProperty(JSON_PROPERTY_STARTED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStartedAt(BigDecimal startedAt) {
        this.startedAt = startedAt;
    }

    public DisbursementOperationExecution finishedAt(BigDecimal finishedAt) {
        this.finishedAt = finishedAt;
        return this;
    }

    /**
     * Get finishedAt
     *
     * @return finishedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FINISHED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getFinishedAt() {
        return finishedAt;
    }

    @JsonProperty(JSON_PROPERTY_FINISHED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFinishedAt(BigDecimal finishedAt) {
        this.finishedAt = finishedAt;
    }

    public DisbursementOperationExecution failure(OperationExecutionFailure failure) {
        this.failure = failure;
        return this;
    }

    /**
     * Get failure
     *
     * @return failure
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OperationExecutionFailure getFailure() {
        return failure;
    }

    @JsonProperty(JSON_PROPERTY_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailure(OperationExecutionFailure failure) {
        this.failure = failure;
    }

    /** Return true if this DisbursementOperationExecution object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DisbursementOperationExecution disbursementOperationExecution =
                (DisbursementOperationExecution) o;
        return Objects.equals(this.input, disbursementOperationExecution.input)
                && Objects.equals(this.output, disbursementOperationExecution.output)
                && Objects.equals(this.payoutId, disbursementOperationExecution.payoutId)
                && Objects.equals(this.startedAt, disbursementOperationExecution.startedAt)
                && Objects.equals(this.finishedAt, disbursementOperationExecution.finishedAt)
                && Objects.equals(this.failure, disbursementOperationExecution.failure);
    }

    @Override
    public int hashCode() {
        return Objects.hash(input, output, payoutId, startedAt, finishedAt, failure);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DisbursementOperationExecution {\n");
        sb.append("    input: ").append(toIndentedString(input)).append("\n");
        sb.append("    output: ").append(toIndentedString(output)).append("\n");
        sb.append("    payoutId: ").append(toIndentedString(payoutId)).append("\n");
        sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
        sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
        sb.append("    failure: ").append(toIndentedString(failure)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `input` to the URL query string
        if (getInput() != null) {
            joiner.add(getInput().toUrlQueryString(prefix + "input" + suffix));
        }

        // add `output` to the URL query string
        if (getOutput() != null) {
            joiner.add(getOutput().toUrlQueryString(prefix + "output" + suffix));
        }

        // add `payoutId` to the URL query string
        if (getPayoutId() != null) {
            joiner.add(
                    String.format(
                            "%spayoutId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getPayoutId()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `startedAt` to the URL query string
        if (getStartedAt() != null) {
            joiner.add(
                    String.format(
                            "%sstartedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getStartedAt()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `finishedAt` to the URL query string
        if (getFinishedAt() != null) {
            joiner.add(
                    String.format(
                            "%sfinishedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getFinishedAt()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `failure` to the URL query string
        if (getFailure() != null) {
            joiner.add(getFailure().toUrlQueryString(prefix + "failure" + suffix));
        }

        return joiner.toString();
    }
}
