/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** SEPA payment information for European Single Euro Payments Area transfers */
@JsonPropertyOrder({
    SepaPaymentInfo.JSON_PROPERTY_RAIL,
    SepaPaymentInfo.JSON_PROPERTY_ADDRESSING_SYSTEM,
    SepaPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME,
    SepaPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME,
    SepaPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY,
    SepaPaymentInfo.JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS,
    SepaPaymentInfo.JSON_PROPERTY_IBAN,
    SepaPaymentInfo.JSON_PROPERTY_COUNTRY,
    SepaPaymentInfo.JSON_PROPERTY_BIC,
    SepaPaymentInfo.JSON_PROPERTY_BANK_NAME,
    SepaPaymentInfo.JSON_PROPERTY_BANK_BRANCH,
    SepaPaymentInfo.JSON_PROPERTY_BANK_ADDRESS,
    SepaPaymentInfo.JSON_PROPERTY_PURPOSE_CODE,
    SepaPaymentInfo.JSON_PROPERTY_TAX_ID
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class SepaPaymentInfo {
    /** The payment rail type for SEPA transfers */
    public enum RailEnum {
        SEPA(String.valueOf("SEPA"));

        private String value;

        RailEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RailEnum fromValue(String value) {
            for (RailEnum b : RailEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_RAIL = "rail";
    @jakarta.annotation.Nonnull private RailEnum rail;

    /** The addressing system used for SEPA transfers */
    public enum AddressingSystemEnum {
        IBAN(String.valueOf("IBAN"));

        private String value;

        AddressingSystemEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static AddressingSystemEnum fromValue(String value) {
            for (AddressingSystemEnum b : AddressingSystemEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_ADDRESSING_SYSTEM = "addressingSystem";
    @jakarta.annotation.Nonnull private AddressingSystemEnum addressingSystem;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME = "accountHolderGivenName";
    @jakarta.annotation.Nonnull private String accountHolderGivenName;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME = "accountHolderSurname";
    @jakarta.annotation.Nonnull private String accountHolderSurname;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY = "accountHolderCountry";
    @jakarta.annotation.Nullable private String accountHolderCountry;

    public static final String JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS = "accountHolderAddress";
    @jakarta.annotation.Nullable private String accountHolderAddress;

    public static final String JSON_PROPERTY_IBAN = "iban";
    @jakarta.annotation.Nonnull private String iban;

    public static final String JSON_PROPERTY_COUNTRY = "country";
    @jakarta.annotation.Nonnull private String country;

    public static final String JSON_PROPERTY_BIC = "bic";
    @jakarta.annotation.Nullable private String bic;

    public static final String JSON_PROPERTY_BANK_NAME = "bankName";
    @jakarta.annotation.Nullable private String bankName;

    public static final String JSON_PROPERTY_BANK_BRANCH = "bankBranch";
    @jakarta.annotation.Nullable private String bankBranch;

    public static final String JSON_PROPERTY_BANK_ADDRESS = "bankAddress";
    @jakarta.annotation.Nullable private String bankAddress;

    public static final String JSON_PROPERTY_PURPOSE_CODE = "purposeCode";
    @jakarta.annotation.Nullable private String purposeCode;

    public static final String JSON_PROPERTY_TAX_ID = "taxId";
    @jakarta.annotation.Nullable private String taxId;

    public SepaPaymentInfo() {}

    @JsonCreator
    public SepaPaymentInfo(
            @JsonProperty(value = JSON_PROPERTY_RAIL, required = true) RailEnum rail,
            @JsonProperty(value = JSON_PROPERTY_ADDRESSING_SYSTEM, required = true)
                    AddressingSystemEnum addressingSystem,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME, required = true)
                    String accountHolderGivenName,
            @JsonProperty(value = JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME, required = true)
                    String accountHolderSurname,
            @JsonProperty(value = JSON_PROPERTY_IBAN, required = true) String iban,
            @JsonProperty(value = JSON_PROPERTY_COUNTRY, required = true) String country) {
        this.rail = rail;
        this.addressingSystem = addressingSystem;
        this.accountHolderGivenName = accountHolderGivenName;
        this.accountHolderSurname = accountHolderSurname;
        this.iban = iban;
        this.country = country;
    }

    public SepaPaymentInfo rail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
        return this;
    }

    /**
     * The payment rail type for SEPA transfers
     *
     * @return rail
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public RailEnum getRail() {
        return rail;
    }

    @JsonProperty(JSON_PROPERTY_RAIL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRail(@jakarta.annotation.Nonnull RailEnum rail) {
        this.rail = rail;
    }

    public SepaPaymentInfo addressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
        return this;
    }

    /**
     * The addressing system used for SEPA transfers
     *
     * @return addressingSystem
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AddressingSystemEnum getAddressingSystem() {
        return addressingSystem;
    }

    @JsonProperty(JSON_PROPERTY_ADDRESSING_SYSTEM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAddressingSystem(
            @jakarta.annotation.Nonnull AddressingSystemEnum addressingSystem) {
        this.addressingSystem = addressingSystem;
    }

    public SepaPaymentInfo accountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
        return this;
    }

    /**
     * The given name (first name) of the account holder
     *
     * @return accountHolderGivenName
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderGivenName() {
        return accountHolderGivenName;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_GIVEN_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderGivenName(
            @jakarta.annotation.Nonnull String accountHolderGivenName) {
        this.accountHolderGivenName = accountHolderGivenName;
    }

    public SepaPaymentInfo accountHolderSurname(
            @jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
        return this;
    }

    /**
     * The surname (last name) of the account holder
     *
     * @return accountHolderSurname
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAccountHolderSurname() {
        return accountHolderSurname;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_SURNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccountHolderSurname(@jakarta.annotation.Nonnull String accountHolderSurname) {
        this.accountHolderSurname = accountHolderSurname;
    }

    public SepaPaymentInfo accountHolderCountry(
            @jakarta.annotation.Nullable String accountHolderCountry) {
        this.accountHolderCountry = accountHolderCountry;
        return this;
    }

    /**
     * The country where the account holder resides (ISO 3166-1 alpha-2 code)
     *
     * @return accountHolderCountry
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAccountHolderCountry() {
        return accountHolderCountry;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccountHolderCountry(@jakarta.annotation.Nullable String accountHolderCountry) {
        this.accountHolderCountry = accountHolderCountry;
    }

    public SepaPaymentInfo accountHolderAddress(
            @jakarta.annotation.Nullable String accountHolderAddress) {
        this.accountHolderAddress = accountHolderAddress;
        return this;
    }

    /**
     * The address of the account holder
     *
     * @return accountHolderAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAccountHolderAddress() {
        return accountHolderAddress;
    }

    @JsonProperty(JSON_PROPERTY_ACCOUNT_HOLDER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccountHolderAddress(@jakarta.annotation.Nullable String accountHolderAddress) {
        this.accountHolderAddress = accountHolderAddress;
    }

    public SepaPaymentInfo iban(@jakarta.annotation.Nonnull String iban) {
        this.iban = iban;
        return this;
    }

    /**
     * The International Bank Account Number (IBAN)
     *
     * @return iban
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IBAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getIban() {
        return iban;
    }

    @JsonProperty(JSON_PROPERTY_IBAN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIban(@jakarta.annotation.Nonnull String iban) {
        this.iban = iban;
    }

    public SepaPaymentInfo country(@jakarta.annotation.Nonnull String country) {
        this.country = country;
        return this;
    }

    /**
     * The country for the transfer (ISO 3166-1 alpha-2 code)
     *
     * @return country
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCountry() {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCountry(@jakarta.annotation.Nonnull String country) {
        this.country = country;
    }

    public SepaPaymentInfo bic(@jakarta.annotation.Nullable String bic) {
        this.bic = bic;
        return this;
    }

    /**
     * The Bank Identifier Code (BIC/SWIFT code)
     *
     * @return bic
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BIC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBic() {
        return bic;
    }

    @JsonProperty(JSON_PROPERTY_BIC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBic(@jakarta.annotation.Nullable String bic) {
        this.bic = bic;
    }

    public SepaPaymentInfo bankName(@jakarta.annotation.Nullable String bankName) {
        this.bankName = bankName;
        return this;
    }

    /**
     * The name of the bank
     *
     * @return bankName
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BANK_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBankName() {
        return bankName;
    }

    @JsonProperty(JSON_PROPERTY_BANK_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBankName(@jakarta.annotation.Nullable String bankName) {
        this.bankName = bankName;
    }

    public SepaPaymentInfo bankBranch(@jakarta.annotation.Nullable String bankBranch) {
        this.bankBranch = bankBranch;
        return this;
    }

    /**
     * The bank branch information
     *
     * @return bankBranch
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BANK_BRANCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBankBranch() {
        return bankBranch;
    }

    @JsonProperty(JSON_PROPERTY_BANK_BRANCH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBankBranch(@jakarta.annotation.Nullable String bankBranch) {
        this.bankBranch = bankBranch;
    }

    public SepaPaymentInfo bankAddress(@jakarta.annotation.Nullable String bankAddress) {
        this.bankAddress = bankAddress;
        return this;
    }

    /**
     * The address of the bank
     *
     * @return bankAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BANK_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBankAddress() {
        return bankAddress;
    }

    @JsonProperty(JSON_PROPERTY_BANK_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBankAddress(@jakarta.annotation.Nullable String bankAddress) {
        this.bankAddress = bankAddress;
    }

    public SepaPaymentInfo purposeCode(@jakarta.annotation.Nullable String purposeCode) {
        this.purposeCode = purposeCode;
        return this;
    }

    /**
     * The purpose code for the transfer
     *
     * @return purposeCode
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PURPOSE_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPurposeCode() {
        return purposeCode;
    }

    @JsonProperty(JSON_PROPERTY_PURPOSE_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPurposeCode(@jakarta.annotation.Nullable String purposeCode) {
        this.purposeCode = purposeCode;
    }

    public SepaPaymentInfo taxId(@jakarta.annotation.Nullable String taxId) {
        this.taxId = taxId;
        return this;
    }

    /**
     * The tax identification number
     *
     * @return taxId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAX_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTaxId() {
        return taxId;
    }

    @JsonProperty(JSON_PROPERTY_TAX_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaxId(@jakarta.annotation.Nullable String taxId) {
        this.taxId = taxId;
    }

    /** Return true if this SepaPaymentInfo object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SepaPaymentInfo sepaPaymentInfo = (SepaPaymentInfo) o;
        return Objects.equals(this.rail, sepaPaymentInfo.rail)
                && Objects.equals(this.addressingSystem, sepaPaymentInfo.addressingSystem)
                && Objects.equals(
                        this.accountHolderGivenName, sepaPaymentInfo.accountHolderGivenName)
                && Objects.equals(this.accountHolderSurname, sepaPaymentInfo.accountHolderSurname)
                && Objects.equals(this.accountHolderCountry, sepaPaymentInfo.accountHolderCountry)
                && Objects.equals(this.accountHolderAddress, sepaPaymentInfo.accountHolderAddress)
                && Objects.equals(this.iban, sepaPaymentInfo.iban)
                && Objects.equals(this.country, sepaPaymentInfo.country)
                && Objects.equals(this.bic, sepaPaymentInfo.bic)
                && Objects.equals(this.bankName, sepaPaymentInfo.bankName)
                && Objects.equals(this.bankBranch, sepaPaymentInfo.bankBranch)
                && Objects.equals(this.bankAddress, sepaPaymentInfo.bankAddress)
                && Objects.equals(this.purposeCode, sepaPaymentInfo.purposeCode)
                && Objects.equals(this.taxId, sepaPaymentInfo.taxId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                rail,
                addressingSystem,
                accountHolderGivenName,
                accountHolderSurname,
                accountHolderCountry,
                accountHolderAddress,
                iban,
                country,
                bic,
                bankName,
                bankBranch,
                bankAddress,
                purposeCode,
                taxId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SepaPaymentInfo {\n");
        sb.append("    rail: ").append(toIndentedString(rail)).append("\n");
        sb.append("    addressingSystem: ").append(toIndentedString(addressingSystem)).append("\n");
        sb.append("    accountHolderGivenName: ")
                .append(toIndentedString(accountHolderGivenName))
                .append("\n");
        sb.append("    accountHolderSurname: ")
                .append(toIndentedString(accountHolderSurname))
                .append("\n");
        sb.append("    accountHolderCountry: ")
                .append(toIndentedString(accountHolderCountry))
                .append("\n");
        sb.append("    accountHolderAddress: ")
                .append(toIndentedString(accountHolderAddress))
                .append("\n");
        sb.append("    iban: ").append(toIndentedString(iban)).append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    bic: ").append(toIndentedString(bic)).append("\n");
        sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
        sb.append("    bankBranch: ").append(toIndentedString(bankBranch)).append("\n");
        sb.append("    bankAddress: ").append(toIndentedString(bankAddress)).append("\n");
        sb.append("    purposeCode: ").append(toIndentedString(purposeCode)).append("\n");
        sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `rail` to the URL query string
        if (getRail() != null) {
            joiner.add(
                    String.format(
                            "%srail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getRail()))));
        }

        // add `addressingSystem` to the URL query string
        if (getAddressingSystem() != null) {
            joiner.add(
                    String.format(
                            "%saddressingSystem%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAddressingSystem()))));
        }

        // add `accountHolderGivenName` to the URL query string
        if (getAccountHolderGivenName() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderGivenName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderGivenName()))));
        }

        // add `accountHolderSurname` to the URL query string
        if (getAccountHolderSurname() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderSurname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderSurname()))));
        }

        // add `accountHolderCountry` to the URL query string
        if (getAccountHolderCountry() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderCountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderCountry()))));
        }

        // add `accountHolderAddress` to the URL query string
        if (getAccountHolderAddress() != null) {
            joiner.add(
                    String.format(
                            "%saccountHolderAddress%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getAccountHolderAddress()))));
        }

        // add `iban` to the URL query string
        if (getIban() != null) {
            joiner.add(
                    String.format(
                            "%siban%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getIban()))));
        }

        // add `country` to the URL query string
        if (getCountry() != null) {
            joiner.add(
                    String.format(
                            "%scountry%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCountry()))));
        }

        // add `bic` to the URL query string
        if (getBic() != null) {
            joiner.add(
                    String.format(
                            "%sbic%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBic()))));
        }

        // add `bankName` to the URL query string
        if (getBankName() != null) {
            joiner.add(
                    String.format(
                            "%sbankName%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBankName()))));
        }

        // add `bankBranch` to the URL query string
        if (getBankBranch() != null) {
            joiner.add(
                    String.format(
                            "%sbankBranch%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBankBranch()))));
        }

        // add `bankAddress` to the URL query string
        if (getBankAddress() != null) {
            joiner.add(
                    String.format(
                            "%sbankAddress%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBankAddress()))));
        }

        // add `purposeCode` to the URL query string
        if (getPurposeCode() != null) {
            joiner.add(
                    String.format(
                            "%spurposeCode%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getPurposeCode()))));
        }

        // add `taxId` to the URL query string
        if (getTaxId() != null) {
            joiner.add(
                    String.format(
                            "%staxId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTaxId()))));
        }

        return joiner.toString();
    }
}
