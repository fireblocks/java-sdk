/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** OrderDetails */
@JsonPropertyOrder({
    OrderDetails.JSON_PROPERTY_ID,
    OrderDetails.JSON_PROPERTY_VIA,
    OrderDetails.JSON_PROPERTY_STATUS,
    OrderDetails.JSON_PROPERTY_CREATED_AT,
    OrderDetails.JSON_PROPERTY_UPDATED_AT,
    OrderDetails.JSON_PROPERTY_RECEIPT,
    OrderDetails.JSON_PROPERTY_GENERAL_FEES,
    OrderDetails.JSON_PROPERTY_EXECUTION_STEPS,
    OrderDetails.JSON_PROPERTY_EXECUTION_RESPONSE_DETAILS,
    OrderDetails.JSON_PROPERTY_SETTLEMENT,
    OrderDetails.JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION,
    OrderDetails.JSON_PROPERTY_PAYMENT_INSTRUCTIONS,
    OrderDetails.JSON_PROPERTY_CREATED_BY,
    OrderDetails.JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID,
    OrderDetails.JSON_PROPERTY_NOTE,
    OrderDetails.JSON_PROPERTY_EXPIRES_AT
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class OrderDetails {
    public static final String JSON_PROPERTY_ID = "id";
    @jakarta.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_VIA = "via";
    @jakarta.annotation.Nonnull private AccessType via;

    public static final String JSON_PROPERTY_STATUS = "status";
    @jakarta.annotation.Nonnull private OrderStatus status;

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @jakarta.annotation.Nonnull private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    @jakarta.annotation.Nullable private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_RECEIPT = "receipt";
    @jakarta.annotation.Nullable private TransferReceipt receipt;

    public static final String JSON_PROPERTY_GENERAL_FEES = "generalFees";
    @jakarta.annotation.Nullable private List<Fee> generalFees;

    public static final String JSON_PROPERTY_EXECUTION_STEPS = "executionSteps";
    @jakarta.annotation.Nonnull private List<ExecutionStep> executionSteps;

    public static final String JSON_PROPERTY_EXECUTION_RESPONSE_DETAILS =
            "executionResponseDetails";
    @jakarta.annotation.Nonnull private ExecutionResponseDetails executionResponseDetails;

    public static final String JSON_PROPERTY_SETTLEMENT = "settlement";
    @jakarta.annotation.Nonnull private Settlement settlement;

    public static final String JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION =
            "participantsIdentification";
    @jakarta.annotation.Nullable private ParticipantsIdentification participantsIdentification;

    public static final String JSON_PROPERTY_PAYMENT_INSTRUCTIONS = "paymentInstructions";
    @jakarta.annotation.Nullable private List<PaymentInstructions> paymentInstructions;

    public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
    @jakarta.annotation.Nonnull private String createdBy;

    public static final String JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID =
            "customerInternalReferenceId";
    @jakarta.annotation.Nullable private String customerInternalReferenceId;

    public static final String JSON_PROPERTY_NOTE = "note";
    @jakarta.annotation.Nullable private String note;

    public static final String JSON_PROPERTY_EXPIRES_AT = "expiresAt";
    @jakarta.annotation.Nullable private OffsetDateTime expiresAt;

    public OrderDetails() {}

    @JsonCreator
    public OrderDetails(
            @JsonProperty(value = JSON_PROPERTY_ID, required = true) String id,
            @JsonProperty(value = JSON_PROPERTY_VIA, required = true) AccessType via,
            @JsonProperty(value = JSON_PROPERTY_STATUS, required = true) OrderStatus status,
            @JsonProperty(value = JSON_PROPERTY_CREATED_AT, required = true)
                    OffsetDateTime createdAt,
            @JsonProperty(value = JSON_PROPERTY_EXECUTION_STEPS, required = true)
                    List<ExecutionStep> executionSteps,
            @JsonProperty(value = JSON_PROPERTY_EXECUTION_RESPONSE_DETAILS, required = true)
                    ExecutionResponseDetails executionResponseDetails,
            @JsonProperty(value = JSON_PROPERTY_SETTLEMENT, required = true) Settlement settlement,
            @JsonProperty(value = JSON_PROPERTY_CREATED_BY, required = true) String createdBy) {
        this.id = id;
        this.via = via;
        this.status = status;
        this.createdAt = createdAt;
        this.executionSteps = executionSteps;
        this.executionResponseDetails = executionResponseDetails;
        this.settlement = settlement;
        this.createdBy = createdBy;
    }

    public OrderDetails id(@jakarta.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@jakarta.annotation.Nonnull String id) {
        this.id = id;
    }

    public OrderDetails via(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
        return this;
    }

    /**
     * Get via
     *
     * @return via
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public AccessType getVia() {
        return via;
    }

    @JsonProperty(JSON_PROPERTY_VIA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVia(@jakarta.annotation.Nonnull AccessType via) {
        this.via = via;
    }

    public OrderDetails status(@jakarta.annotation.Nonnull OrderStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OrderStatus getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setStatus(@jakarta.annotation.Nonnull OrderStatus status) {
        this.status = status;
    }

    public OrderDetails createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public OrderDetails updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     *
     * @return updatedAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public OrderDetails receipt(@jakarta.annotation.Nullable TransferReceipt receipt) {
        this.receipt = receipt;
        return this;
    }

    /**
     * Get receipt
     *
     * @return receipt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RECEIPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TransferReceipt getReceipt() {
        return receipt;
    }

    @JsonProperty(JSON_PROPERTY_RECEIPT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReceipt(@jakarta.annotation.Nullable TransferReceipt receipt) {
        this.receipt = receipt;
    }

    public OrderDetails generalFees(@jakarta.annotation.Nullable List<Fee> generalFees) {
        this.generalFees = generalFees;
        return this;
    }

    public OrderDetails addGeneralFeesItem(Fee generalFeesItem) {
        if (this.generalFees == null) {
            this.generalFees = new ArrayList<>();
        }
        this.generalFees.add(generalFeesItem);
        return this;
    }

    /**
     * Get generalFees
     *
     * @return generalFees
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_GENERAL_FEES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<Fee> getGeneralFees() {
        return generalFees;
    }

    @JsonProperty(JSON_PROPERTY_GENERAL_FEES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeneralFees(@jakarta.annotation.Nullable List<Fee> generalFees) {
        this.generalFees = generalFees;
    }

    public OrderDetails executionSteps(
            @jakarta.annotation.Nonnull List<ExecutionStep> executionSteps) {
        this.executionSteps = executionSteps;
        return this;
    }

    public OrderDetails addExecutionStepsItem(ExecutionStep executionStepsItem) {
        if (this.executionSteps == null) {
            this.executionSteps = new ArrayList<>();
        }
        this.executionSteps.add(executionStepsItem);
        return this;
    }

    /**
     * Get executionSteps
     *
     * @return executionSteps
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_EXECUTION_STEPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<ExecutionStep> getExecutionSteps() {
        return executionSteps;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_STEPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExecutionSteps(@jakarta.annotation.Nonnull List<ExecutionStep> executionSteps) {
        this.executionSteps = executionSteps;
    }

    public OrderDetails executionResponseDetails(
            @jakarta.annotation.Nonnull ExecutionResponseDetails executionResponseDetails) {
        this.executionResponseDetails = executionResponseDetails;
        return this;
    }

    /**
     * Get executionResponseDetails
     *
     * @return executionResponseDetails
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_EXECUTION_RESPONSE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ExecutionResponseDetails getExecutionResponseDetails() {
        return executionResponseDetails;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_RESPONSE_DETAILS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExecutionResponseDetails(
            @jakarta.annotation.Nonnull ExecutionResponseDetails executionResponseDetails) {
        this.executionResponseDetails = executionResponseDetails;
    }

    public OrderDetails settlement(@jakarta.annotation.Nonnull Settlement settlement) {
        this.settlement = settlement;
        return this;
    }

    /**
     * Get settlement
     *
     * @return settlement
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SETTLEMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Settlement getSettlement() {
        return settlement;
    }

    @JsonProperty(JSON_PROPERTY_SETTLEMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSettlement(@jakarta.annotation.Nonnull Settlement settlement) {
        this.settlement = settlement;
    }

    public OrderDetails participantsIdentification(
            @jakarta.annotation.Nullable ParticipantsIdentification participantsIdentification) {
        this.participantsIdentification = participantsIdentification;
        return this;
    }

    /**
     * Get participantsIdentification
     *
     * @return participantsIdentification
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ParticipantsIdentification getParticipantsIdentification() {
        return participantsIdentification;
    }

    @JsonProperty(JSON_PROPERTY_PARTICIPANTS_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParticipantsIdentification(
            @jakarta.annotation.Nullable ParticipantsIdentification participantsIdentification) {
        this.participantsIdentification = participantsIdentification;
    }

    public OrderDetails paymentInstructions(
            @jakarta.annotation.Nullable List<PaymentInstructions> paymentInstructions) {
        this.paymentInstructions = paymentInstructions;
        return this;
    }

    public OrderDetails addPaymentInstructionsItem(PaymentInstructions paymentInstructionsItem) {
        if (this.paymentInstructions == null) {
            this.paymentInstructions = new ArrayList<>();
        }
        this.paymentInstructions.add(paymentInstructionsItem);
        return this;
    }

    /**
     * Payment instructions for the order, the client can use one of these to pay the order.
     *
     * @return paymentInstructions
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<PaymentInstructions> getPaymentInstructions() {
        return paymentInstructions;
    }

    @JsonProperty(JSON_PROPERTY_PAYMENT_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPaymentInstructions(
            @jakarta.annotation.Nullable List<PaymentInstructions> paymentInstructions) {
        this.paymentInstructions = paymentInstructions;
    }

    public OrderDetails createdBy(@jakarta.annotation.Nonnull String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * The ID of the user who created the order
     *
     * @return createdBy
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_BY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getCreatedBy() {
        return createdBy;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_BY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedBy(@jakarta.annotation.Nonnull String createdBy) {
        this.createdBy = createdBy;
    }

    public OrderDetails customerInternalReferenceId(
            @jakarta.annotation.Nullable String customerInternalReferenceId) {
        this.customerInternalReferenceId = customerInternalReferenceId;
        return this;
    }

    /**
     * Internal reference ID for the customer
     *
     * @return customerInternalReferenceId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCustomerInternalReferenceId() {
        return customerInternalReferenceId;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_INTERNAL_REFERENCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerInternalReferenceId(
            @jakarta.annotation.Nullable String customerInternalReferenceId) {
        this.customerInternalReferenceId = customerInternalReferenceId;
    }

    public OrderDetails note(@jakarta.annotation.Nullable String note) {
        this.note = note;
        return this;
    }

    /**
     * Optional note for the Order
     *
     * @return note
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNote() {
        return note;
    }

    @JsonProperty(JSON_PROPERTY_NOTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNote(@jakarta.annotation.Nullable String note) {
        this.note = note;
    }

    public OrderDetails expiresAt(@jakarta.annotation.Nullable OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }

    /**
     * Get expiresAt
     *
     * @return expiresAt
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getExpiresAt() {
        return expiresAt;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpiresAt(@jakarta.annotation.Nullable OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
    }

    /** Return true if this OrderDetails object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderDetails orderDetails = (OrderDetails) o;
        return Objects.equals(this.id, orderDetails.id)
                && Objects.equals(this.via, orderDetails.via)
                && Objects.equals(this.status, orderDetails.status)
                && Objects.equals(this.createdAt, orderDetails.createdAt)
                && Objects.equals(this.updatedAt, orderDetails.updatedAt)
                && Objects.equals(this.receipt, orderDetails.receipt)
                && Objects.equals(this.generalFees, orderDetails.generalFees)
                && Objects.equals(this.executionSteps, orderDetails.executionSteps)
                && Objects.equals(
                        this.executionResponseDetails, orderDetails.executionResponseDetails)
                && Objects.equals(this.settlement, orderDetails.settlement)
                && Objects.equals(
                        this.participantsIdentification, orderDetails.participantsIdentification)
                && Objects.equals(this.paymentInstructions, orderDetails.paymentInstructions)
                && Objects.equals(this.createdBy, orderDetails.createdBy)
                && Objects.equals(
                        this.customerInternalReferenceId, orderDetails.customerInternalReferenceId)
                && Objects.equals(this.note, orderDetails.note)
                && Objects.equals(this.expiresAt, orderDetails.expiresAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                id,
                via,
                status,
                createdAt,
                updatedAt,
                receipt,
                generalFees,
                executionSteps,
                executionResponseDetails,
                settlement,
                participantsIdentification,
                paymentInstructions,
                createdBy,
                customerInternalReferenceId,
                note,
                expiresAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderDetails {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    via: ").append(toIndentedString(via)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    receipt: ").append(toIndentedString(receipt)).append("\n");
        sb.append("    generalFees: ").append(toIndentedString(generalFees)).append("\n");
        sb.append("    executionSteps: ").append(toIndentedString(executionSteps)).append("\n");
        sb.append("    executionResponseDetails: ")
                .append(toIndentedString(executionResponseDetails))
                .append("\n");
        sb.append("    settlement: ").append(toIndentedString(settlement)).append("\n");
        sb.append("    participantsIdentification: ")
                .append(toIndentedString(participantsIdentification))
                .append("\n");
        sb.append("    paymentInstructions: ")
                .append(toIndentedString(paymentInstructions))
                .append("\n");
        sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
        sb.append("    customerInternalReferenceId: ")
                .append(toIndentedString(customerInternalReferenceId))
                .append("\n");
        sb.append("    note: ").append(toIndentedString(note)).append("\n");
        sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
        }

        // add `via` to the URL query string
        if (getVia() != null) {
            joiner.add(getVia().toUrlQueryString(prefix + "via" + suffix));
        }

        // add `status` to the URL query string
        if (getStatus() != null) {
            joiner.add(
                    String.format(
                            "%sstatus%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCreatedAt()))));
        }

        // add `updatedAt` to the URL query string
        if (getUpdatedAt() != null) {
            joiner.add(
                    String.format(
                            "%supdatedAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getUpdatedAt()))));
        }

        // add `receipt` to the URL query string
        if (getReceipt() != null) {
            joiner.add(getReceipt().toUrlQueryString(prefix + "receipt" + suffix));
        }

        // add `generalFees` to the URL query string
        if (getGeneralFees() != null) {
            for (int i = 0; i < getGeneralFees().size(); i++) {
                if (getGeneralFees().get(i) != null) {
                    joiner.add(
                            getGeneralFees()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sgeneralFees%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `executionSteps` to the URL query string
        if (getExecutionSteps() != null) {
            for (int i = 0; i < getExecutionSteps().size(); i++) {
                if (getExecutionSteps().get(i) != null) {
                    joiner.add(
                            getExecutionSteps()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sexecutionSteps%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `executionResponseDetails` to the URL query string
        if (getExecutionResponseDetails() != null) {
            joiner.add(
                    getExecutionResponseDetails()
                            .toUrlQueryString(prefix + "executionResponseDetails" + suffix));
        }

        // add `settlement` to the URL query string
        if (getSettlement() != null) {
            joiner.add(getSettlement().toUrlQueryString(prefix + "settlement" + suffix));
        }

        // add `participantsIdentification` to the URL query string
        if (getParticipantsIdentification() != null) {
            joiner.add(
                    getParticipantsIdentification()
                            .toUrlQueryString(prefix + "participantsIdentification" + suffix));
        }

        // add `paymentInstructions` to the URL query string
        if (getPaymentInstructions() != null) {
            for (int i = 0; i < getPaymentInstructions().size(); i++) {
                if (getPaymentInstructions().get(i) != null) {
                    joiner.add(
                            getPaymentInstructions()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%spaymentInstructions%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `createdBy` to the URL query string
        if (getCreatedBy() != null) {
            joiner.add(
                    String.format(
                            "%screatedBy%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getCreatedBy()))));
        }

        // add `customerInternalReferenceId` to the URL query string
        if (getCustomerInternalReferenceId() != null) {
            joiner.add(
                    String.format(
                            "%scustomerInternalReferenceId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(
                                    ApiClient.valueToString(getCustomerInternalReferenceId()))));
        }

        // add `note` to the URL query string
        if (getNote() != null) {
            joiner.add(
                    String.format(
                            "%snote%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNote()))));
        }

        // add `expiresAt` to the URL query string
        if (getExpiresAt() != null) {
            joiner.add(
                    String.format(
                            "%sexpiresAt%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getExpiresAt()))));
        }

        return joiner.toString();
    }
}
