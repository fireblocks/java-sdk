/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** LimitExecutionRequestDetails */
@JsonPropertyOrder({
    LimitExecutionRequestDetails.JSON_PROPERTY_SIDE,
    LimitExecutionRequestDetails.JSON_PROPERTY_BASE_AMOUNT,
    LimitExecutionRequestDetails.JSON_PROPERTY_BASE_ASSET_ID,
    LimitExecutionRequestDetails.JSON_PROPERTY_BASE_ASSET_RAIL,
    LimitExecutionRequestDetails.JSON_PROPERTY_QUOTE_ASSET_ID,
    LimitExecutionRequestDetails.JSON_PROPERTY_QUOTE_ASSET_RAIL,
    LimitExecutionRequestDetails.JSON_PROPERTY_TYPE,
    LimitExecutionRequestDetails.JSON_PROPERTY_TIME_IN_FORCE,
    LimitExecutionRequestDetails.JSON_PROPERTY_LIMIT_PRICE
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class LimitExecutionRequestDetails {
    /** Side of the order */
    public enum SideEnum {
        BUY(String.valueOf("BUY")),

        SELL(String.valueOf("SELL"));

        private String value;

        SideEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static SideEnum fromValue(String value) {
            for (SideEnum b : SideEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_SIDE = "side";
    @jakarta.annotation.Nonnull private SideEnum side = SideEnum.BUY;

    public static final String JSON_PROPERTY_BASE_AMOUNT = "baseAmount";
    @jakarta.annotation.Nonnull private String baseAmount;

    public static final String JSON_PROPERTY_BASE_ASSET_ID = "baseAssetId";
    @jakarta.annotation.Nonnull private String baseAssetId;

    public static final String JSON_PROPERTY_BASE_ASSET_RAIL = "baseAssetRail";
    @jakarta.annotation.Nullable private TransferRail baseAssetRail;

    public static final String JSON_PROPERTY_QUOTE_ASSET_ID = "quoteAssetId";
    @jakarta.annotation.Nonnull private String quoteAssetId;

    public static final String JSON_PROPERTY_QUOTE_ASSET_RAIL = "quoteAssetRail";
    @jakarta.annotation.Nullable private TransferRail quoteAssetRail;

    /** Order type for limit orders */
    public enum TypeEnum {
        LIMIT(String.valueOf("LIMIT"));

        private String value;

        TypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static TypeEnum fromValue(String value) {
            for (TypeEnum b : TypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nonnull private TypeEnum type;

    public static final String JSON_PROPERTY_TIME_IN_FORCE = "timeInForce";
    @jakarta.annotation.Nonnull private TimeInForce timeInForce;

    public static final String JSON_PROPERTY_LIMIT_PRICE = "limitPrice";
    @jakarta.annotation.Nonnull private String limitPrice;

    public LimitExecutionRequestDetails() {}

    @JsonCreator
    public LimitExecutionRequestDetails(
            @JsonProperty(value = JSON_PROPERTY_SIDE, required = true) SideEnum side,
            @JsonProperty(value = JSON_PROPERTY_BASE_AMOUNT, required = true) String baseAmount,
            @JsonProperty(value = JSON_PROPERTY_BASE_ASSET_ID, required = true) String baseAssetId,
            @JsonProperty(value = JSON_PROPERTY_QUOTE_ASSET_ID, required = true)
                    String quoteAssetId,
            @JsonProperty(value = JSON_PROPERTY_TYPE, required = true) TypeEnum type,
            @JsonProperty(value = JSON_PROPERTY_TIME_IN_FORCE, required = true)
                    TimeInForce timeInForce,
            @JsonProperty(value = JSON_PROPERTY_LIMIT_PRICE, required = true) String limitPrice) {
        this.side = side;
        this.baseAmount = baseAmount;
        this.baseAssetId = baseAssetId;
        this.quoteAssetId = quoteAssetId;
        this.type = type;
        this.timeInForce = timeInForce;
        this.limitPrice = limitPrice;
    }

    public LimitExecutionRequestDetails side(@jakarta.annotation.Nonnull SideEnum side) {
        this.side = side;
        return this;
    }

    /**
     * Side of the order
     *
     * @return side
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SIDE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public SideEnum getSide() {
        return side;
    }

    @JsonProperty(JSON_PROPERTY_SIDE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSide(@jakarta.annotation.Nonnull SideEnum side) {
        this.side = side;
    }

    public LimitExecutionRequestDetails baseAmount(@jakarta.annotation.Nonnull String baseAmount) {
        this.baseAmount = baseAmount;
        return this;
    }

    /**
     * Amount to convert
     *
     * @return baseAmount
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BASE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBaseAmount() {
        return baseAmount;
    }

    @JsonProperty(JSON_PROPERTY_BASE_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBaseAmount(@jakarta.annotation.Nonnull String baseAmount) {
        this.baseAmount = baseAmount;
    }

    public LimitExecutionRequestDetails baseAssetId(
            @jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
        return this;
    }

    /**
     * Source asset identifier
     *
     * @return baseAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBaseAssetId() {
        return baseAssetId;
    }

    @JsonProperty(JSON_PROPERTY_BASE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBaseAssetId(@jakarta.annotation.Nonnull String baseAssetId) {
        this.baseAssetId = baseAssetId;
    }

    public LimitExecutionRequestDetails baseAssetRail(
            @jakarta.annotation.Nullable TransferRail baseAssetRail) {
        this.baseAssetRail = baseAssetRail;
        return this;
    }

    /**
     * Get baseAssetRail
     *
     * @return baseAssetRail
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BASE_ASSET_RAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TransferRail getBaseAssetRail() {
        return baseAssetRail;
    }

    @JsonProperty(JSON_PROPERTY_BASE_ASSET_RAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBaseAssetRail(@jakarta.annotation.Nullable TransferRail baseAssetRail) {
        this.baseAssetRail = baseAssetRail;
    }

    public LimitExecutionRequestDetails quoteAssetId(
            @jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
        return this;
    }

    /**
     * Target asset identifier
     *
     * @return quoteAssetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getQuoteAssetId() {
        return quoteAssetId;
    }

    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setQuoteAssetId(@jakarta.annotation.Nonnull String quoteAssetId) {
        this.quoteAssetId = quoteAssetId;
    }

    public LimitExecutionRequestDetails quoteAssetRail(
            @jakarta.annotation.Nullable TransferRail quoteAssetRail) {
        this.quoteAssetRail = quoteAssetRail;
        return this;
    }

    /**
     * Get quoteAssetRail
     *
     * @return quoteAssetRail
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_RAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TransferRail getQuoteAssetRail() {
        return quoteAssetRail;
    }

    @JsonProperty(JSON_PROPERTY_QUOTE_ASSET_RAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQuoteAssetRail(@jakarta.annotation.Nullable TransferRail quoteAssetRail) {
        this.quoteAssetRail = quoteAssetRail;
    }

    public LimitExecutionRequestDetails type(@jakarta.annotation.Nonnull TypeEnum type) {
        this.type = type;
        return this;
    }

    /**
     * Order type for limit orders
     *
     * @return type
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TypeEnum getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@jakarta.annotation.Nonnull TypeEnum type) {
        this.type = type;
    }

    public LimitExecutionRequestDetails timeInForce(
            @jakarta.annotation.Nonnull TimeInForce timeInForce) {
        this.timeInForce = timeInForce;
        return this;
    }

    /**
     * Get timeInForce
     *
     * @return timeInForce
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TIME_IN_FORCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public TimeInForce getTimeInForce() {
        return timeInForce;
    }

    @JsonProperty(JSON_PROPERTY_TIME_IN_FORCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimeInForce(@jakarta.annotation.Nonnull TimeInForce timeInForce) {
        this.timeInForce = timeInForce;
    }

    public LimitExecutionRequestDetails limitPrice(@jakarta.annotation.Nonnull String limitPrice) {
        this.limitPrice = limitPrice;
        return this;
    }

    /**
     * Price for limit orders
     *
     * @return limitPrice
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LIMIT_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getLimitPrice() {
        return limitPrice;
    }

    @JsonProperty(JSON_PROPERTY_LIMIT_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLimitPrice(@jakarta.annotation.Nonnull String limitPrice) {
        this.limitPrice = limitPrice;
    }

    /** Return true if this LimitExecutionRequestDetails object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LimitExecutionRequestDetails limitExecutionRequestDetails =
                (LimitExecutionRequestDetails) o;
        return Objects.equals(this.side, limitExecutionRequestDetails.side)
                && Objects.equals(this.baseAmount, limitExecutionRequestDetails.baseAmount)
                && Objects.equals(this.baseAssetId, limitExecutionRequestDetails.baseAssetId)
                && Objects.equals(this.baseAssetRail, limitExecutionRequestDetails.baseAssetRail)
                && Objects.equals(this.quoteAssetId, limitExecutionRequestDetails.quoteAssetId)
                && Objects.equals(this.quoteAssetRail, limitExecutionRequestDetails.quoteAssetRail)
                && Objects.equals(this.type, limitExecutionRequestDetails.type)
                && Objects.equals(this.timeInForce, limitExecutionRequestDetails.timeInForce)
                && Objects.equals(this.limitPrice, limitExecutionRequestDetails.limitPrice);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                side,
                baseAmount,
                baseAssetId,
                baseAssetRail,
                quoteAssetId,
                quoteAssetRail,
                type,
                timeInForce,
                limitPrice);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LimitExecutionRequestDetails {\n");
        sb.append("    side: ").append(toIndentedString(side)).append("\n");
        sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
        sb.append("    baseAssetId: ").append(toIndentedString(baseAssetId)).append("\n");
        sb.append("    baseAssetRail: ").append(toIndentedString(baseAssetRail)).append("\n");
        sb.append("    quoteAssetId: ").append(toIndentedString(quoteAssetId)).append("\n");
        sb.append("    quoteAssetRail: ").append(toIndentedString(quoteAssetRail)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    timeInForce: ").append(toIndentedString(timeInForce)).append("\n");
        sb.append("    limitPrice: ").append(toIndentedString(limitPrice)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `side` to the URL query string
        if (getSide() != null) {
            joiner.add(
                    String.format(
                            "%sside%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSide()))));
        }

        // add `baseAmount` to the URL query string
        if (getBaseAmount() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAmount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAmount()))));
        }

        // add `baseAssetId` to the URL query string
        if (getBaseAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAssetId()))));
        }

        // add `baseAssetRail` to the URL query string
        if (getBaseAssetRail() != null) {
            joiner.add(
                    String.format(
                            "%sbaseAssetRail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBaseAssetRail()))));
        }

        // add `quoteAssetId` to the URL query string
        if (getQuoteAssetId() != null) {
            joiner.add(
                    String.format(
                            "%squoteAssetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getQuoteAssetId()))));
        }

        // add `quoteAssetRail` to the URL query string
        if (getQuoteAssetRail() != null) {
            joiner.add(
                    String.format(
                            "%squoteAssetRail%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getQuoteAssetRail()))));
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `timeInForce` to the URL query string
        if (getTimeInForce() != null) {
            joiner.add(
                    String.format(
                            "%stimeInForce%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTimeInForce()))));
        }

        // add `limitPrice` to the URL query string
        if (getLimitPrice() != null) {
            joiner.add(
                    String.format(
                            "%slimitPrice%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getLimitPrice()))));
        }

        return joiner.toString();
    }
}
