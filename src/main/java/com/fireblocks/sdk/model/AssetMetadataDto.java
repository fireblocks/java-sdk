/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.math.BigDecimal;
import java.util.Objects;
import java.util.StringJoiner;

/** AssetMetadataDto */
@JsonPropertyOrder({
    AssetMetadataDto.JSON_PROPERTY_ASSET_ID,
    AssetMetadataDto.JSON_PROPERTY_NAME,
    AssetMetadataDto.JSON_PROPERTY_SYMBOL,
    AssetMetadataDto.JSON_PROPERTY_NETWORK_PROTOCOL,
    AssetMetadataDto.JSON_PROPERTY_TOTAL_SUPPLY,
    AssetMetadataDto.JSON_PROPERTY_HOLDERS_COUNT,
    AssetMetadataDto.JSON_PROPERTY_TYPE,
    AssetMetadataDto.JSON_PROPERTY_CONTRACT_ADDRESS,
    AssetMetadataDto.JSON_PROPERTY_ISSUER_ADDRESS,
    AssetMetadataDto.JSON_PROPERTY_TESTNET,
    AssetMetadataDto.JSON_PROPERTY_BLOCKCHAIN,
    AssetMetadataDto.JSON_PROPERTY_DECIMALS,
    AssetMetadataDto.JSON_PROPERTY_VAULT_ACCOUNT_ID
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class AssetMetadataDto {
    public static final String JSON_PROPERTY_ASSET_ID = "assetId";
    @jakarta.annotation.Nonnull private String assetId;

    public static final String JSON_PROPERTY_NAME = "name";
    @jakarta.annotation.Nullable private String name;

    public static final String JSON_PROPERTY_SYMBOL = "symbol";
    @jakarta.annotation.Nullable private String symbol;

    public static final String JSON_PROPERTY_NETWORK_PROTOCOL = "networkProtocol";
    @jakarta.annotation.Nullable private String networkProtocol;

    public static final String JSON_PROPERTY_TOTAL_SUPPLY = "totalSupply";
    @jakarta.annotation.Nullable private String totalSupply;

    public static final String JSON_PROPERTY_HOLDERS_COUNT = "holdersCount";
    @jakarta.annotation.Nullable private BigDecimal holdersCount;

    public static final String JSON_PROPERTY_TYPE = "type";
    @jakarta.annotation.Nullable private String type;

    public static final String JSON_PROPERTY_CONTRACT_ADDRESS = "contractAddress";
    @jakarta.annotation.Nullable private String contractAddress;

    public static final String JSON_PROPERTY_ISSUER_ADDRESS = "issuerAddress";
    @jakarta.annotation.Nullable private String issuerAddress;

    public static final String JSON_PROPERTY_TESTNET = "testnet";
    @jakarta.annotation.Nullable private Boolean testnet;

    public static final String JSON_PROPERTY_BLOCKCHAIN = "blockchain";
    @jakarta.annotation.Nullable private String blockchain;

    public static final String JSON_PROPERTY_DECIMALS = "decimals";
    @jakarta.annotation.Nullable private BigDecimal decimals;

    public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
    @jakarta.annotation.Nullable private String vaultAccountId;

    public AssetMetadataDto() {}

    @JsonCreator
    public AssetMetadataDto(
            @JsonProperty(value = JSON_PROPERTY_ASSET_ID, required = true) String assetId) {
        this.assetId = assetId;
    }

    public AssetMetadataDto assetId(@jakarta.annotation.Nonnull String assetId) {
        this.assetId = assetId;
        return this;
    }

    /**
     * The Fireblocks&#x60; asset id
     *
     * @return assetId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAssetId() {
        return assetId;
    }

    @JsonProperty(JSON_PROPERTY_ASSET_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAssetId(@jakarta.annotation.Nonnull String assetId) {
        this.assetId = assetId;
    }

    public AssetMetadataDto name(@jakarta.annotation.Nullable String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the token
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable String name) {
        this.name = name;
    }

    public AssetMetadataDto symbol(@jakarta.annotation.Nullable String symbol) {
        this.symbol = symbol;
        return this;
    }

    /**
     * The symbol of the token
     *
     * @return symbol
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SYMBOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getSymbol() {
        return symbol;
    }

    @JsonProperty(JSON_PROPERTY_SYMBOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSymbol(@jakarta.annotation.Nullable String symbol) {
        this.symbol = symbol;
    }

    public AssetMetadataDto networkProtocol(@jakarta.annotation.Nullable String networkProtocol) {
        this.networkProtocol = networkProtocol;
        return this;
    }

    /**
     * The network protocol of the token
     *
     * @return networkProtocol
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NETWORK_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNetworkProtocol() {
        return networkProtocol;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_PROTOCOL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNetworkProtocol(@jakarta.annotation.Nullable String networkProtocol) {
        this.networkProtocol = networkProtocol;
    }

    public AssetMetadataDto totalSupply(@jakarta.annotation.Nullable String totalSupply) {
        this.totalSupply = totalSupply;
        return this;
    }

    /**
     * The total supply of the token
     *
     * @return totalSupply
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTotalSupply() {
        return totalSupply;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_SUPPLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTotalSupply(@jakarta.annotation.Nullable String totalSupply) {
        this.totalSupply = totalSupply;
    }

    public AssetMetadataDto holdersCount(@jakarta.annotation.Nullable BigDecimal holdersCount) {
        this.holdersCount = holdersCount;
        return this;
    }

    /**
     * The number of holders of the token
     *
     * @return holdersCount
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_HOLDERS_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getHoldersCount() {
        return holdersCount;
    }

    @JsonProperty(JSON_PROPERTY_HOLDERS_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHoldersCount(@jakarta.annotation.Nullable BigDecimal holdersCount) {
        this.holdersCount = holdersCount;
    }

    public AssetMetadataDto type(@jakarta.annotation.Nullable String type) {
        this.type = type;
        return this;
    }

    /**
     * The type of the token
     *
     * @return type
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(@jakarta.annotation.Nullable String type) {
        this.type = type;
    }

    public AssetMetadataDto contractAddress(@jakarta.annotation.Nullable String contractAddress) {
        this.contractAddress = contractAddress;
        return this;
    }

    /**
     * The address of the token contract
     *
     * @return contractAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CONTRACT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getContractAddress() {
        return contractAddress;
    }

    @JsonProperty(JSON_PROPERTY_CONTRACT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContractAddress(@jakarta.annotation.Nullable String contractAddress) {
        this.contractAddress = contractAddress;
    }

    public AssetMetadataDto issuerAddress(@jakarta.annotation.Nullable String issuerAddress) {
        this.issuerAddress = issuerAddress;
        return this;
    }

    /**
     * In case of Stellar or Ripple, the address of the issuer of the token
     *
     * @return issuerAddress
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ISSUER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIssuerAddress() {
        return issuerAddress;
    }

    @JsonProperty(JSON_PROPERTY_ISSUER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIssuerAddress(@jakarta.annotation.Nullable String issuerAddress) {
        this.issuerAddress = issuerAddress;
    }

    public AssetMetadataDto testnet(@jakarta.annotation.Nullable Boolean testnet) {
        this.testnet = testnet;
        return this;
    }

    /**
     * Is it deployed on testnet or to mainnet
     *
     * @return testnet
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TESTNET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getTestnet() {
        return testnet;
    }

    @JsonProperty(JSON_PROPERTY_TESTNET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTestnet(@jakarta.annotation.Nullable Boolean testnet) {
        this.testnet = testnet;
    }

    public AssetMetadataDto blockchain(@jakarta.annotation.Nullable String blockchain) {
        this.blockchain = blockchain;
        return this;
    }

    /**
     * The blockchain native asset id which the token is deployed on
     *
     * @return blockchain
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_BLOCKCHAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBlockchain() {
        return blockchain;
    }

    @JsonProperty(JSON_PROPERTY_BLOCKCHAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBlockchain(@jakarta.annotation.Nullable String blockchain) {
        this.blockchain = blockchain;
    }

    public AssetMetadataDto decimals(@jakarta.annotation.Nullable BigDecimal decimals) {
        this.decimals = decimals;
        return this;
    }

    /**
     * The number of decimals of the token
     *
     * @return decimals
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DECIMALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getDecimals() {
        return decimals;
    }

    @JsonProperty(JSON_PROPERTY_DECIMALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDecimals(@jakarta.annotation.Nullable BigDecimal decimals) {
        this.decimals = decimals;
    }

    public AssetMetadataDto vaultAccountId(@jakarta.annotation.Nullable String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
        return this;
    }

    /**
     * The id of the vault account that initiated the request to issue the token. Will be empty if
     * token was issued outside of Fireblocks.
     *
     * @return vaultAccountId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVaultAccountId() {
        return vaultAccountId;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVaultAccountId(@jakarta.annotation.Nullable String vaultAccountId) {
        this.vaultAccountId = vaultAccountId;
    }

    /** Return true if this AssetMetadataDto object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AssetMetadataDto assetMetadataDto = (AssetMetadataDto) o;
        return Objects.equals(this.assetId, assetMetadataDto.assetId)
                && Objects.equals(this.name, assetMetadataDto.name)
                && Objects.equals(this.symbol, assetMetadataDto.symbol)
                && Objects.equals(this.networkProtocol, assetMetadataDto.networkProtocol)
                && Objects.equals(this.totalSupply, assetMetadataDto.totalSupply)
                && Objects.equals(this.holdersCount, assetMetadataDto.holdersCount)
                && Objects.equals(this.type, assetMetadataDto.type)
                && Objects.equals(this.contractAddress, assetMetadataDto.contractAddress)
                && Objects.equals(this.issuerAddress, assetMetadataDto.issuerAddress)
                && Objects.equals(this.testnet, assetMetadataDto.testnet)
                && Objects.equals(this.blockchain, assetMetadataDto.blockchain)
                && Objects.equals(this.decimals, assetMetadataDto.decimals)
                && Objects.equals(this.vaultAccountId, assetMetadataDto.vaultAccountId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                assetId,
                name,
                symbol,
                networkProtocol,
                totalSupply,
                holdersCount,
                type,
                contractAddress,
                issuerAddress,
                testnet,
                blockchain,
                decimals,
                vaultAccountId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AssetMetadataDto {\n");
        sb.append("    assetId: ").append(toIndentedString(assetId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
        sb.append("    networkProtocol: ").append(toIndentedString(networkProtocol)).append("\n");
        sb.append("    totalSupply: ").append(toIndentedString(totalSupply)).append("\n");
        sb.append("    holdersCount: ").append(toIndentedString(holdersCount)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
        sb.append("    issuerAddress: ").append(toIndentedString(issuerAddress)).append("\n");
        sb.append("    testnet: ").append(toIndentedString(testnet)).append("\n");
        sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
        sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
        sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `assetId` to the URL query string
        if (getAssetId() != null) {
            joiner.add(
                    String.format(
                            "%sassetId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getAssetId()))));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getName()))));
        }

        // add `symbol` to the URL query string
        if (getSymbol() != null) {
            joiner.add(
                    String.format(
                            "%ssymbol%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getSymbol()))));
        }

        // add `networkProtocol` to the URL query string
        if (getNetworkProtocol() != null) {
            joiner.add(
                    String.format(
                            "%snetworkProtocol%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getNetworkProtocol()))));
        }

        // add `totalSupply` to the URL query string
        if (getTotalSupply() != null) {
            joiner.add(
                    String.format(
                            "%stotalSupply%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTotalSupply()))));
        }

        // add `holdersCount` to the URL query string
        if (getHoldersCount() != null) {
            joiner.add(
                    String.format(
                            "%sholdersCount%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getHoldersCount()))));
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getType()))));
        }

        // add `contractAddress` to the URL query string
        if (getContractAddress() != null) {
            joiner.add(
                    String.format(
                            "%scontractAddress%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getContractAddress()))));
        }

        // add `issuerAddress` to the URL query string
        if (getIssuerAddress() != null) {
            joiner.add(
                    String.format(
                            "%sissuerAddress%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getIssuerAddress()))));
        }

        // add `testnet` to the URL query string
        if (getTestnet() != null) {
            joiner.add(
                    String.format(
                            "%stestnet%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getTestnet()))));
        }

        // add `blockchain` to the URL query string
        if (getBlockchain() != null) {
            joiner.add(
                    String.format(
                            "%sblockchain%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBlockchain()))));
        }

        // add `decimals` to the URL query string
        if (getDecimals() != null) {
            joiner.add(
                    String.format(
                            "%sdecimals%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDecimals()))));
        }

        // add `vaultAccountId` to the URL query string
        if (getVaultAccountId() != null) {
            joiner.add(
                    String.format(
                            "%svaultAccountId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getVaultAccountId()))));
        }

        return joiner.toString();
    }
}
