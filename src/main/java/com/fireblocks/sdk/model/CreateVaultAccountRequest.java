/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

/** CreateVaultAccountRequest */
@JsonPropertyOrder({
    CreateVaultAccountRequest.JSON_PROPERTY_NAME,
    CreateVaultAccountRequest.JSON_PROPERTY_HIDDEN_ON_U_I,
    CreateVaultAccountRequest.JSON_PROPERTY_CUSTOMER_REF_ID,
    CreateVaultAccountRequest.JSON_PROPERTY_AUTO_FUEL,
    CreateVaultAccountRequest.JSON_PROPERTY_VAULT_TYPE,
    CreateVaultAccountRequest.JSON_PROPERTY_AUTO_ASSIGN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateVaultAccountRequest {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_HIDDEN_ON_U_I = "hiddenOnUI";
    private Boolean hiddenOnUI;

    public static final String JSON_PROPERTY_CUSTOMER_REF_ID = "customerRefId";
    private String customerRefId;

    public static final String JSON_PROPERTY_AUTO_FUEL = "autoFuel";
    private Boolean autoFuel;

    /**
     * Type of vault account. The default type will be set to MPC.&lt;br/&gt; If the workspace does
     * not support the selected type, it will return an error.
     */
    public enum VaultTypeEnum {
        MPC("MPC"),

        KEY_LINK("KEY_LINK");

        private String value;

        VaultTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static VaultTypeEnum fromValue(String value) {
            for (VaultTypeEnum b : VaultTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_VAULT_TYPE = "vaultType";
    private VaultTypeEnum vaultType = VaultTypeEnum.MPC;

    public static final String JSON_PROPERTY_AUTO_ASSIGN = "autoAssign";
    private Boolean autoAssign = false;

    public CreateVaultAccountRequest() {}

    public CreateVaultAccountRequest name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Account Name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public CreateVaultAccountRequest hiddenOnUI(Boolean hiddenOnUI) {
        this.hiddenOnUI = hiddenOnUI;
        return this;
    }

    /**
     * Optional - if true, the created account and all related transactions will not be shown on
     * Fireblocks console
     *
     * @return hiddenOnUI
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_HIDDEN_ON_U_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getHiddenOnUI() {
        return hiddenOnUI;
    }

    @JsonProperty(JSON_PROPERTY_HIDDEN_ON_U_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHiddenOnUI(Boolean hiddenOnUI) {
        this.hiddenOnUI = hiddenOnUI;
    }

    public CreateVaultAccountRequest customerRefId(String customerRefId) {
        this.customerRefId = customerRefId;
        return this;
    }

    /**
     * Optional - Sets a customer reference ID
     *
     * @return customerRefId
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CUSTOMER_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCustomerRefId() {
        return customerRefId;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerRefId(String customerRefId) {
        this.customerRefId = customerRefId;
    }

    public CreateVaultAccountRequest autoFuel(Boolean autoFuel) {
        this.autoFuel = autoFuel;
        return this;
    }

    /**
     * Optional - Sets the autoFuel property of the vault account
     *
     * @return autoFuel
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AUTO_FUEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getAutoFuel() {
        return autoFuel;
    }

    @JsonProperty(JSON_PROPERTY_AUTO_FUEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAutoFuel(Boolean autoFuel) {
        this.autoFuel = autoFuel;
    }

    public CreateVaultAccountRequest vaultType(VaultTypeEnum vaultType) {
        this.vaultType = vaultType;
        return this;
    }

    /**
     * Type of vault account. The default type will be set to MPC.&lt;br/&gt; If the workspace does
     * not support the selected type, it will return an error.
     *
     * @return vaultType
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VAULT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public VaultTypeEnum getVaultType() {
        return vaultType;
    }

    @JsonProperty(JSON_PROPERTY_VAULT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVaultType(VaultTypeEnum vaultType) {
        this.vaultType = vaultType;
    }

    public CreateVaultAccountRequest autoAssign(Boolean autoAssign) {
        this.autoAssign = autoAssign;
        return this;
    }

    /**
     * Applicable only when the vault account type is KEY_LINK. For MPC, this parameter will be
     * ignored.&lt;br/&gt; If set to true and there are available keys, random keys will be assigned
     * to the newly created vault account.&lt;br/&gt; If set to true and there are no available keys
     * to be assigned, it will return an error.&lt;br/&gt; If set to false, the vault account will
     * be created without any keys.
     *
     * @return autoAssign
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AUTO_ASSIGN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getAutoAssign() {
        return autoAssign;
    }

    @JsonProperty(JSON_PROPERTY_AUTO_ASSIGN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAutoAssign(Boolean autoAssign) {
        this.autoAssign = autoAssign;
    }

    /** Return true if this CreateVaultAccountRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateVaultAccountRequest createVaultAccountRequest = (CreateVaultAccountRequest) o;
        return Objects.equals(this.name, createVaultAccountRequest.name)
                && Objects.equals(this.hiddenOnUI, createVaultAccountRequest.hiddenOnUI)
                && Objects.equals(this.customerRefId, createVaultAccountRequest.customerRefId)
                && Objects.equals(this.autoFuel, createVaultAccountRequest.autoFuel)
                && Objects.equals(this.vaultType, createVaultAccountRequest.vaultType)
                && Objects.equals(this.autoAssign, createVaultAccountRequest.autoAssign);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, hiddenOnUI, customerRefId, autoFuel, vaultType, autoAssign);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateVaultAccountRequest {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    hiddenOnUI: ").append(toIndentedString(hiddenOnUI)).append("\n");
        sb.append("    customerRefId: ").append(toIndentedString(customerRefId)).append("\n");
        sb.append("    autoFuel: ").append(toIndentedString(autoFuel)).append("\n");
        sb.append("    vaultType: ").append(toIndentedString(vaultType)).append("\n");
        sb.append("    autoAssign: ").append(toIndentedString(autoAssign)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `hiddenOnUI` to the URL query string
        if (getHiddenOnUI() != null) {
            joiner.add(
                    String.format(
                            "%shiddenOnUI%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getHiddenOnUI()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `customerRefId` to the URL query string
        if (getCustomerRefId() != null) {
            joiner.add(
                    String.format(
                            "%scustomerRefId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getCustomerRefId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `autoFuel` to the URL query string
        if (getAutoFuel() != null) {
            joiner.add(
                    String.format(
                            "%sautoFuel%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(String.valueOf(getAutoFuel()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `vaultType` to the URL query string
        if (getVaultType() != null) {
            joiner.add(
                    String.format(
                            "%svaultType%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getVaultType()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `autoAssign` to the URL query string
        if (getAutoAssign() != null) {
            joiner.add(
                    String.format(
                            "%sautoAssign%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            String.valueOf(getAutoAssign()), StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
