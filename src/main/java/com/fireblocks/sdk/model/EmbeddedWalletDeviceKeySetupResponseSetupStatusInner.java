/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.Objects;
import java.util.StringJoiner;

/** EmbeddedWalletDeviceKeySetupResponseSetupStatusInner */
@JsonPropertyOrder({
    EmbeddedWalletDeviceKeySetupResponseSetupStatusInner.JSON_PROPERTY_ALGORITHM_NAME,
    EmbeddedWalletDeviceKeySetupResponseSetupStatusInner.JSON_PROPERTY_CONFIRMED,
    EmbeddedWalletDeviceKeySetupResponseSetupStatusInner.JSON_PROPERTY_BACKED_UP
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class EmbeddedWalletDeviceKeySetupResponseSetupStatusInner {
    public static final String JSON_PROPERTY_ALGORITHM_NAME = "algorithmName";
    @jakarta.annotation.Nonnull private EmbeddedWalletAlgoritm algorithmName;

    public static final String JSON_PROPERTY_CONFIRMED = "confirmed";
    @jakarta.annotation.Nonnull private Boolean confirmed;

    public static final String JSON_PROPERTY_BACKED_UP = "backedUp";
    @jakarta.annotation.Nonnull private Boolean backedUp;

    public EmbeddedWalletDeviceKeySetupResponseSetupStatusInner() {}

    @JsonCreator
    public EmbeddedWalletDeviceKeySetupResponseSetupStatusInner(
            @JsonProperty(value = JSON_PROPERTY_ALGORITHM_NAME, required = true)
                    EmbeddedWalletAlgoritm algorithmName,
            @JsonProperty(value = JSON_PROPERTY_CONFIRMED, required = true) Boolean confirmed,
            @JsonProperty(value = JSON_PROPERTY_BACKED_UP, required = true) Boolean backedUp) {
        this.algorithmName = algorithmName;
        this.confirmed = confirmed;
        this.backedUp = backedUp;
    }

    public EmbeddedWalletDeviceKeySetupResponseSetupStatusInner algorithmName(
            @jakarta.annotation.Nonnull EmbeddedWalletAlgoritm algorithmName) {
        this.algorithmName = algorithmName;
        return this;
    }

    /**
     * Get algorithmName
     *
     * @return algorithmName
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ALGORITHM_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EmbeddedWalletAlgoritm getAlgorithmName() {
        return algorithmName;
    }

    @JsonProperty(JSON_PROPERTY_ALGORITHM_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAlgorithmName(@jakarta.annotation.Nonnull EmbeddedWalletAlgoritm algorithmName) {
        this.algorithmName = algorithmName;
    }

    public EmbeddedWalletDeviceKeySetupResponseSetupStatusInner confirmed(
            @jakarta.annotation.Nonnull Boolean confirmed) {
        this.confirmed = confirmed;
        return this;
    }

    /**
     * confirmed
     *
     * @return confirmed
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CONFIRMED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getConfirmed() {
        return confirmed;
    }

    @JsonProperty(JSON_PROPERTY_CONFIRMED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setConfirmed(@jakarta.annotation.Nonnull Boolean confirmed) {
        this.confirmed = confirmed;
    }

    public EmbeddedWalletDeviceKeySetupResponseSetupStatusInner backedUp(
            @jakarta.annotation.Nonnull Boolean backedUp) {
        this.backedUp = backedUp;
        return this;
    }

    /**
     * backedUp
     *
     * @return backedUp
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BACKED_UP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getBackedUp() {
        return backedUp;
    }

    @JsonProperty(JSON_PROPERTY_BACKED_UP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBackedUp(@jakarta.annotation.Nonnull Boolean backedUp) {
        this.backedUp = backedUp;
    }

    /**
     * Return true if this EmbeddedWalletDeviceKeySetupResponse_setupStatus_inner object is equal to
     * o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmbeddedWalletDeviceKeySetupResponseSetupStatusInner
                embeddedWalletDeviceKeySetupResponseSetupStatusInner =
                        (EmbeddedWalletDeviceKeySetupResponseSetupStatusInner) o;
        return Objects.equals(
                        this.algorithmName,
                        embeddedWalletDeviceKeySetupResponseSetupStatusInner.algorithmName)
                && Objects.equals(
                        this.confirmed,
                        embeddedWalletDeviceKeySetupResponseSetupStatusInner.confirmed)
                && Objects.equals(
                        this.backedUp,
                        embeddedWalletDeviceKeySetupResponseSetupStatusInner.backedUp);
    }

    @Override
    public int hashCode() {
        return Objects.hash(algorithmName, confirmed, backedUp);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EmbeddedWalletDeviceKeySetupResponseSetupStatusInner {\n");
        sb.append("    algorithmName: ").append(toIndentedString(algorithmName)).append("\n");
        sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
        sb.append("    backedUp: ").append(toIndentedString(backedUp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `algorithmName` to the URL query string
        if (getAlgorithmName() != null) {
            joiner.add(getAlgorithmName().toUrlQueryString(prefix + "algorithmName" + suffix));
        }

        // add `confirmed` to the URL query string
        if (getConfirmed() != null) {
            joiner.add(
                    String.format(
                            "%sconfirmed%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getConfirmed()))));
        }

        // add `backedUp` to the URL query string
        if (getBackedUp() != null) {
            joiner.add(
                    String.format(
                            "%sbackedUp%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getBackedUp()))));
        }

        return joiner.toString();
    }
}
