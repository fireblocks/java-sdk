/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** ResendFailedNotificationsRequest */
@JsonPropertyOrder({
    ResendFailedNotificationsRequest.JSON_PROPERTY_START_TIME,
    ResendFailedNotificationsRequest.JSON_PROPERTY_EVENTS
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ResendFailedNotificationsRequest {
    public static final String JSON_PROPERTY_START_TIME = "startTime";
    @jakarta.annotation.Nullable private BigDecimal startTime;

    public static final String JSON_PROPERTY_EVENTS = "events";
    @jakarta.annotation.Nullable private List<WebhookEvent> events;

    public ResendFailedNotificationsRequest() {}

    public ResendFailedNotificationsRequest startTime(
            @jakarta.annotation.Nullable BigDecimal startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * (optional) Start time for the resend window in milliseconds since epoch up to 24 hours before
     * the current time - Default if missing means 24 hours before the current time in milliseconds
     * since epoch - Maximum value is current time in milliseconds since epoch - Minimum value is 24
     * hours before the current time in milliseconds since epoch
     *
     * @return startTime
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getStartTime() {
        return startTime;
    }

    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartTime(@jakarta.annotation.Nullable BigDecimal startTime) {
        this.startTime = startTime;
    }

    public ResendFailedNotificationsRequest events(
            @jakarta.annotation.Nullable List<WebhookEvent> events) {
        this.events = events;
        return this;
    }

    public ResendFailedNotificationsRequest addEventsItem(WebhookEvent eventsItem) {
        if (this.events == null) {
            this.events = new ArrayList<>();
        }
        this.events.add(eventsItem);
        return this;
    }

    /**
     * (optional) Event types to resend, default is all event types - Default if missing means all
     * events will be included - Empty array means all events will be included
     *
     * @return events
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<WebhookEvent> getEvents() {
        return events;
    }

    @JsonProperty(JSON_PROPERTY_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEvents(@jakarta.annotation.Nullable List<WebhookEvent> events) {
        this.events = events;
    }

    /** Return true if this ResendFailedNotificationsRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ResendFailedNotificationsRequest resendFailedNotificationsRequest =
                (ResendFailedNotificationsRequest) o;
        return Objects.equals(this.startTime, resendFailedNotificationsRequest.startTime)
                && Objects.equals(this.events, resendFailedNotificationsRequest.events);
    }

    @Override
    public int hashCode() {
        return Objects.hash(startTime, events);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ResendFailedNotificationsRequest {\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    events: ").append(toIndentedString(events)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `startTime` to the URL query string
        if (getStartTime() != null) {
            joiner.add(
                    String.format(
                            "%sstartTime%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getStartTime()))));
        }

        // add `events` to the URL query string
        if (getEvents() != null) {
            for (int i = 0; i < getEvents().size(); i++) {
                if (getEvents().get(i) != null) {
                    joiner.add(
                            String.format(
                                    "%sevents%s%s=%s",
                                    prefix,
                                    suffix,
                                    "".equals(suffix)
                                            ? ""
                                            : String.format(
                                                    "%s%d%s", containerPrefix, i, containerSuffix),
                                    ApiClient.urlEncode(
                                            ApiClient.valueToString(getEvents().get(i)))));
                }
            }
        }

        return joiner.toString();
    }
}
