/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import java.util.UUID;

/** ResendNotificationsByResourceIdRequest */
@JsonPropertyOrder({
    ResendNotificationsByResourceIdRequest.JSON_PROPERTY_RESOURCE_ID,
    ResendNotificationsByResourceIdRequest.JSON_PROPERTY_EXCLUDE_STATUSES
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ResendNotificationsByResourceIdRequest {
    public static final String JSON_PROPERTY_RESOURCE_ID = "resourceId";
    @jakarta.annotation.Nonnull private UUID resourceId;

    public static final String JSON_PROPERTY_EXCLUDE_STATUSES = "excludeStatuses";
    @jakarta.annotation.Nullable private List<NotificationStatus> excludeStatuses;

    public ResendNotificationsByResourceIdRequest() {}

    @JsonCreator
    public ResendNotificationsByResourceIdRequest(
            @JsonProperty(value = JSON_PROPERTY_RESOURCE_ID, required = true) UUID resourceId) {
        this.resourceId = resourceId;
    }

    public ResendNotificationsByResourceIdRequest resourceId(
            @jakarta.annotation.Nonnull UUID resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * The resource id to resend notifications for
     *
     * @return resourceId
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public UUID getResourceId() {
        return resourceId;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResourceId(@jakarta.annotation.Nonnull UUID resourceId) {
        this.resourceId = resourceId;
    }

    public ResendNotificationsByResourceIdRequest excludeStatuses(
            @jakarta.annotation.Nullable List<NotificationStatus> excludeStatuses) {
        this.excludeStatuses = excludeStatuses;
        return this;
    }

    public ResendNotificationsByResourceIdRequest addExcludeStatusesItem(
            NotificationStatus excludeStatusesItem) {
        if (this.excludeStatuses == null) {
            this.excludeStatuses = new ArrayList<>();
        }
        this.excludeStatuses.add(excludeStatusesItem);
        return this;
    }

    /**
     * (optional) List of notification statuses to exclude from the resend operation - Empty array
     * means all statuses will be included - If you want to exclude some statuses, you can use the
     * following example: [ IN_PROGRESS, FAILED ] - Default if missing, means all statuses other
     * than \&quot;COMPLETED\&quot; will be included
     *
     * @return excludeStatuses
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EXCLUDE_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<NotificationStatus> getExcludeStatuses() {
        return excludeStatuses;
    }

    @JsonProperty(JSON_PROPERTY_EXCLUDE_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExcludeStatuses(
            @jakarta.annotation.Nullable List<NotificationStatus> excludeStatuses) {
        this.excludeStatuses = excludeStatuses;
    }

    /** Return true if this ResendNotificationsByResourceIdRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ResendNotificationsByResourceIdRequest resendNotificationsByResourceIdRequest =
                (ResendNotificationsByResourceIdRequest) o;
        return Objects.equals(this.resourceId, resendNotificationsByResourceIdRequest.resourceId)
                && Objects.equals(
                        this.excludeStatuses,
                        resendNotificationsByResourceIdRequest.excludeStatuses);
    }

    @Override
    public int hashCode() {
        return Objects.hash(resourceId, excludeStatuses);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ResendNotificationsByResourceIdRequest {\n");
        sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
        sb.append("    excludeStatuses: ").append(toIndentedString(excludeStatuses)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `resourceId` to the URL query string
        if (getResourceId() != null) {
            joiner.add(
                    String.format(
                            "%sresourceId%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getResourceId()))));
        }

        // add `excludeStatuses` to the URL query string
        if (getExcludeStatuses() != null) {
            for (int i = 0; i < getExcludeStatuses().size(); i++) {
                if (getExcludeStatuses().get(i) != null) {
                    joiner.add(
                            String.format(
                                    "%sexcludeStatuses%s%s=%s",
                                    prefix,
                                    suffix,
                                    "".equals(suffix)
                                            ? ""
                                            : String.format(
                                                    "%s%d%s", containerPrefix, i, containerSuffix),
                                    ApiClient.urlEncode(
                                            ApiClient.valueToString(getExcludeStatuses().get(i)))));
                }
            }
        }

        return joiner.toString();
    }
}
