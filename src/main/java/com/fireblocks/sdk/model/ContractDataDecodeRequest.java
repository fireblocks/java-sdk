/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fireblocks.sdk.ApiClient;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

/** ContractDataDecodeRequest */
@JsonPropertyOrder({
    ContractDataDecodeRequest.JSON_PROPERTY_DATA,
    ContractDataDecodeRequest.JSON_PROPERTY_DATA_TYPE,
    ContractDataDecodeRequest.JSON_PROPERTY_ABI
})
@jakarta.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        comments = "Generator version: 7.14.0")
public class ContractDataDecodeRequest {
    public static final String JSON_PROPERTY_DATA = "data";
    @jakarta.annotation.Nonnull private ContractDataDecodeRequestData data;

    public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
    @jakarta.annotation.Nonnull private ContractDataDecodeDataType dataType;

    public static final String JSON_PROPERTY_ABI = "abi";
    @jakarta.annotation.Nullable private List<AbiFunction> abi;

    public ContractDataDecodeRequest() {}

    @JsonCreator
    public ContractDataDecodeRequest(
            @JsonProperty(value = JSON_PROPERTY_DATA, required = true)
                    ContractDataDecodeRequestData data,
            @JsonProperty(value = JSON_PROPERTY_DATA_TYPE, required = true)
                    ContractDataDecodeDataType dataType) {
        this.data = data;
        this.dataType = dataType;
    }

    public ContractDataDecodeRequest data(
            @jakarta.annotation.Nonnull ContractDataDecodeRequestData data) {
        this.data = data;
        return this;
    }

    /**
     * Get data
     *
     * @return data
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ContractDataDecodeRequestData getData() {
        return data;
    }

    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setData(@jakarta.annotation.Nonnull ContractDataDecodeRequestData data) {
        this.data = data;
    }

    public ContractDataDecodeRequest dataType(
            @jakarta.annotation.Nonnull ContractDataDecodeDataType dataType) {
        this.dataType = dataType;
        return this;
    }

    /**
     * Get dataType
     *
     * @return dataType
     */
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DATA_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public ContractDataDecodeDataType getDataType() {
        return dataType;
    }

    @JsonProperty(JSON_PROPERTY_DATA_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDataType(@jakarta.annotation.Nonnull ContractDataDecodeDataType dataType) {
        this.dataType = dataType;
    }

    public ContractDataDecodeRequest abi(@jakarta.annotation.Nullable List<AbiFunction> abi) {
        this.abi = abi;
        return this;
    }

    public ContractDataDecodeRequest addAbiItem(AbiFunction abiItem) {
        if (this.abi == null) {
            this.abi = new ArrayList<>();
        }
        this.abi.add(abiItem);
        return this;
    }

    /**
     * The abi of the function/error/log to decode.
     *
     * @return abi
     */
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ABI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<AbiFunction> getAbi() {
        return abi;
    }

    @JsonProperty(JSON_PROPERTY_ABI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAbi(@jakarta.annotation.Nullable List<AbiFunction> abi) {
        this.abi = abi;
    }

    /** Return true if this ContractDataDecodeRequest object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ContractDataDecodeRequest contractDataDecodeRequest = (ContractDataDecodeRequest) o;
        return Objects.equals(this.data, contractDataDecodeRequest.data)
                && Objects.equals(this.dataType, contractDataDecodeRequest.dataType)
                && Objects.equals(this.abi, contractDataDecodeRequest.abi);
    }

    @Override
    public int hashCode() {
        return Objects.hash(data, dataType, abi);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ContractDataDecodeRequest {\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
        sb.append("    abi: ").append(toIndentedString(abi)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `data` to the URL query string
        if (getData() != null) {
            joiner.add(getData().toUrlQueryString(prefix + "data" + suffix));
        }

        // add `dataType` to the URL query string
        if (getDataType() != null) {
            joiner.add(
                    String.format(
                            "%sdataType%s=%s",
                            prefix,
                            suffix,
                            ApiClient.urlEncode(ApiClient.valueToString(getDataType()))));
        }

        // add `abi` to the URL query string
        if (getAbi() != null) {
            for (int i = 0; i < getAbi().size(); i++) {
                if (getAbi().get(i) != null) {
                    joiner.add(
                            getAbi().get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sabi%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}
