/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.ApiClient;
import org.openapitools.client.Configuration;
import org.openapitools.client.model.*;
import org.openapitools.client.Pair;

import java.math.BigDecimal;
import org.openapitools.client.model.TravelRuleGetAllVASPsResponse;
import org.openapitools.client.model.TravelRuleUpdateVASPDetails;
import org.openapitools.client.model.TravelRuleVASP;
import org.openapitools.client.model.TravelRuleValidateFullTransactionRequest;
import org.openapitools.client.model.TravelRuleValidateTransactionRequest;
import org.openapitools.client.model.TravelRuleValidateTransactionResponse;

import com.sun.jersey.api.client.GenericType;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TravelRuleBetaApi {
  private ApiClient apiClient;

  public TravelRuleBetaApi() {
    this.apiClient = new ApiClient();
  }

  public TravelRuleBetaApi(Configuration config) {
    this.apiClient = new ApiClient(config);
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Get VASP details
   * Get VASP Details.  Returns information about a VASP that has the specified DID.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren&#39;t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
   * @param did  (required)
   * @param fields CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below) (optional)
   * @return TravelRuleVASP
   * @throws ApiException if fails to make API call
   */
  public TravelRuleVASP getVASPByDID(String did, String fields) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'did' is set
    if (did == null) {
      throw new ApiException(400, "Missing the required parameter 'did' when calling getVASPByDID");
    }
    
    // create path and map variables
    String localVarPath = "/screening/travel_rule/vasp/{did}"
      .replaceAll("\\{" + "did" + "\\}", apiClient.escapeString(did.toString()));

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<TravelRuleVASP> localVarReturnType = new GenericType<TravelRuleVASP>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Get All VASPs
   * Get All VASPs.  Returns a list of VASPs. VASPs can be searched and sorted and results are paginated.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren&#39;t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
   * @param order Field to order by (optional)
   * @param perPage Records per page (optional)
   * @param page Page number (optional)
   * @param fields CSV of fields to return (all, \&quot;blank\&quot; or see list of all field names below) (optional)
   * @return TravelRuleGetAllVASPsResponse
   * @throws ApiException if fails to make API call
   */
  public TravelRuleGetAllVASPsResponse getVASPs(String order, BigDecimal perPage, BigDecimal page, String fields) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/screening/travel_rule/vasp";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("order", order));
    localVarQueryParams.addAll(apiClient.parameterToPair("per_page", perPage));
    localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
    localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));

    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<TravelRuleGetAllVASPsResponse> localVarReturnType = new GenericType<TravelRuleGetAllVASPsResponse>() {};
    return apiClient.invokeAPI(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Add jsonDidKey to VASP details
   * Update VASP Details.  Updates a VASP with the provided parameters. Use this endpoint to add your public jsonDIDkey generated by Notabene.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren&#39;t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
   * @param travelRuleUpdateVASPDetails  (required)
   * @return TravelRuleUpdateVASPDetails
   * @throws ApiException if fails to make API call
   */
  public TravelRuleUpdateVASPDetails travelRuleApiControllerUpdateVasp(TravelRuleUpdateVASPDetails travelRuleUpdateVASPDetails) throws ApiException {
    Object localVarPostBody = travelRuleUpdateVASPDetails;
    
    // verify the required parameter 'travelRuleUpdateVASPDetails' is set
    if (travelRuleUpdateVASPDetails == null) {
      throw new ApiException(400, "Missing the required parameter 'travelRuleUpdateVASPDetails' when calling travelRuleApiControllerUpdateVasp");
    }
    
    // create path and map variables
    String localVarPath = "/screeening/travel_rule/vasp/update";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<TravelRuleUpdateVASPDetails> localVarReturnType = new GenericType<TravelRuleUpdateVASPDetails>() {};
    return apiClient.invokeAPI(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Validate Full Travel Rule Transaction
   * Validate Full Travel Rule transactions.  Checks for all required information on the originator and beneficiary VASPs.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren&#39;t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
   * @param travelRuleValidateFullTransactionRequest  (required)
   * @return TravelRuleValidateTransactionResponse
   * @throws ApiException if fails to make API call
   */
  public TravelRuleValidateTransactionResponse validateFullTravelRuleTransaction(TravelRuleValidateFullTransactionRequest travelRuleValidateFullTransactionRequest) throws ApiException {
    Object localVarPostBody = travelRuleValidateFullTransactionRequest;
    
    // verify the required parameter 'travelRuleValidateFullTransactionRequest' is set
    if (travelRuleValidateFullTransactionRequest == null) {
      throw new ApiException(400, "Missing the required parameter 'travelRuleValidateFullTransactionRequest' when calling validateFullTravelRuleTransaction");
    }
    
    // create path and map variables
    String localVarPath = "/screening/travel_rule/transaction/validate/full";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<TravelRuleValidateTransactionResponse> localVarReturnType = new GenericType<TravelRuleValidateTransactionResponse>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
  /**
   * Validate Travel Rule Transaction
   * Validate Travel Rule transactions.  Checks what beneficiary VASP details are required by your jurisdiction and the beneficiary&#39;s jurisdiction.  **Note:** The reference content in this section documents the Travel Rule beta endpoint. The beta endpoint includes APIs that are currently in preview and aren&#39;t yet generally available.  To enroll in the beta and enable this endpoint, contact your Fireblocks Customer Success Manager or send an email to [CSM@fireblocks.com](mailto:CSM@fireblocks.com).
   * @param travelRuleValidateTransactionRequest  (required)
   * @return TravelRuleValidateTransactionResponse
   * @throws ApiException if fails to make API call
   */
  public TravelRuleValidateTransactionResponse validateTravelRuleTransaction(TravelRuleValidateTransactionRequest travelRuleValidateTransactionRequest) throws ApiException {
    Object localVarPostBody = travelRuleValidateTransactionRequest;
    
    // verify the required parameter 'travelRuleValidateTransactionRequest' is set
    if (travelRuleValidateTransactionRequest == null) {
      throw new ApiException(400, "Missing the required parameter 'travelRuleValidateTransactionRequest' when calling validateTravelRuleTransaction");
    }
    
    // create path and map variables
    String localVarPath = "/screening/travel_rule/transaction/validate";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    GenericType<TravelRuleValidateTransactionResponse> localVarReturnType = new GenericType<TravelRuleValidateTransactionResponse>() {};
    return apiClient.invokeAPI(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAccept, localVarContentType, localVarAuthNames, localVarReturnType);
      }
}
