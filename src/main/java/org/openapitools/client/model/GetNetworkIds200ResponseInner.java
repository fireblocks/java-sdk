/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;
import com.sun.jersey.api.client.GenericType;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.NetworkIdRoutingPolicy;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * GetNetworkIds200ResponseInner
 */
@JsonPropertyOrder({
  GetNetworkIds200ResponseInner.JSON_PROPERTY_ID,
  GetNetworkIds200ResponseInner.JSON_PROPERTY_NAME,
  GetNetworkIds200ResponseInner.JSON_PROPERTY_ROUTING_POLICY,
  GetNetworkIds200ResponseInner.JSON_PROPERTY_IS_DISCOVERABLE
})
@JsonTypeName("getNetworkIds_200_response_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetNetworkIds200ResponseInner {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ROUTING_POLICY = "routingPolicy";
  private NetworkIdRoutingPolicy routingPolicy;

  public static final String JSON_PROPERTY_IS_DISCOVERABLE = "isDiscoverable";
  private Boolean isDiscoverable;

  public GetNetworkIds200ResponseInner() {
  }

  public GetNetworkIds200ResponseInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public GetNetworkIds200ResponseInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public GetNetworkIds200ResponseInner routingPolicy(NetworkIdRoutingPolicy routingPolicy) {
    
    this.routingPolicy = routingPolicy;
    return this;
  }

   /**
   * Get routingPolicy
   * @return routingPolicy
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ROUTING_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NetworkIdRoutingPolicy getRoutingPolicy() {
    return routingPolicy;
  }


  @JsonProperty(JSON_PROPERTY_ROUTING_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoutingPolicy(NetworkIdRoutingPolicy routingPolicy) {
    this.routingPolicy = routingPolicy;
  }


  public GetNetworkIds200ResponseInner isDiscoverable(Boolean isDiscoverable) {
    
    this.isDiscoverable = isDiscoverable;
    return this;
  }

   /**
   * The specific network is discoverable.
   * @return isDiscoverable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DISCOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDiscoverable() {
    return isDiscoverable;
  }


  @JsonProperty(JSON_PROPERTY_IS_DISCOVERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDiscoverable(Boolean isDiscoverable) {
    this.isDiscoverable = isDiscoverable;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetNetworkIds200ResponseInner getNetworkIds200ResponseInner = (GetNetworkIds200ResponseInner) o;
    return Objects.equals(this.id, getNetworkIds200ResponseInner.id) &&
        Objects.equals(this.name, getNetworkIds200ResponseInner.name) &&
        Objects.equals(this.routingPolicy, getNetworkIds200ResponseInner.routingPolicy) &&
        Objects.equals(this.isDiscoverable, getNetworkIds200ResponseInner.isDiscoverable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, routingPolicy, isDiscoverable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetNetworkIds200ResponseInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    routingPolicy: ").append(toIndentedString(routingPolicy)).append("\n");
    sb.append("    isDiscoverable: ").append(toIndentedString(isDiscoverable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `name` to the URL query string
    if (getName() != null) {
      try {
        joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `routingPolicy` to the URL query string
    if (getRoutingPolicy() != null) {
      joiner.add(getRoutingPolicy().toUrlQueryString(prefix + "routingPolicy" + suffix));
    }

    // add `isDiscoverable` to the URL query string
    if (getIsDiscoverable() != null) {
      try {
        joiner.add(String.format("%sisDiscoverable%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsDiscoverable()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

