/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;
import com.sun.jersey.api.client.GenericType;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * GetConnectionsFilterParameter
 */
@JsonPropertyOrder({
  GetConnectionsFilterParameter.JSON_PROPERTY_ID,
  GetConnectionsFilterParameter.JSON_PROPERTY_USER_ID,
  GetConnectionsFilterParameter.JSON_PROPERTY_VAULT_ACCOUNT_ID,
  GetConnectionsFilterParameter.JSON_PROPERTY_CONNECTION_METHOD,
  GetConnectionsFilterParameter.JSON_PROPERTY_FEE_LEVEL,
  GetConnectionsFilterParameter.JSON_PROPERTY_APP_URL,
  GetConnectionsFilterParameter.JSON_PROPERTY_APP_NAME
})
@JsonTypeName("getConnections_filter_parameter")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetConnectionsFilterParameter {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_VAULT_ACCOUNT_ID = "vaultAccountId";
  private BigDecimal vaultAccountId;

  public static final String JSON_PROPERTY_CONNECTION_METHOD = "connectionMethod";
  private String connectionMethod;

  public static final String JSON_PROPERTY_FEE_LEVEL = "feeLevel";
  private String feeLevel;

  public static final String JSON_PROPERTY_APP_URL = "appUrl";
  private String appUrl;

  public static final String JSON_PROPERTY_APP_NAME = "appName";
  private String appName;

  public GetConnectionsFilterParameter() {
  }

  public GetConnectionsFilterParameter id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public GetConnectionsFilterParameter userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public GetConnectionsFilterParameter vaultAccountId(BigDecimal vaultAccountId) {
    
    this.vaultAccountId = vaultAccountId;
    return this;
  }

   /**
   * Get vaultAccountId
   * @return vaultAccountId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getVaultAccountId() {
    return vaultAccountId;
  }


  @JsonProperty(JSON_PROPERTY_VAULT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVaultAccountId(BigDecimal vaultAccountId) {
    this.vaultAccountId = vaultAccountId;
  }


  public GetConnectionsFilterParameter connectionMethod(String connectionMethod) {
    
    this.connectionMethod = connectionMethod;
    return this;
  }

   /**
   * Get connectionMethod
   * @return connectionMethod
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONNECTION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionMethod() {
    return connectionMethod;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionMethod(String connectionMethod) {
    this.connectionMethod = connectionMethod;
  }


  public GetConnectionsFilterParameter feeLevel(String feeLevel) {
    
    this.feeLevel = feeLevel;
    return this;
  }

   /**
   * Get feeLevel
   * @return feeLevel
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeeLevel() {
    return feeLevel;
  }


  @JsonProperty(JSON_PROPERTY_FEE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeeLevel(String feeLevel) {
    this.feeLevel = feeLevel;
  }


  public GetConnectionsFilterParameter appUrl(String appUrl) {
    
    this.appUrl = appUrl;
    return this;
  }

   /**
   * Get appUrl
   * @return appUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppUrl() {
    return appUrl;
  }


  @JsonProperty(JSON_PROPERTY_APP_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppUrl(String appUrl) {
    this.appUrl = appUrl;
  }


  public GetConnectionsFilterParameter appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAppName() {
    return appName;
  }


  @JsonProperty(JSON_PROPERTY_APP_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppName(String appName) {
    this.appName = appName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetConnectionsFilterParameter getConnectionsFilterParameter = (GetConnectionsFilterParameter) o;
    return Objects.equals(this.id, getConnectionsFilterParameter.id) &&
        Objects.equals(this.userId, getConnectionsFilterParameter.userId) &&
        Objects.equals(this.vaultAccountId, getConnectionsFilterParameter.vaultAccountId) &&
        Objects.equals(this.connectionMethod, getConnectionsFilterParameter.connectionMethod) &&
        Objects.equals(this.feeLevel, getConnectionsFilterParameter.feeLevel) &&
        Objects.equals(this.appUrl, getConnectionsFilterParameter.appUrl) &&
        Objects.equals(this.appName, getConnectionsFilterParameter.appName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, vaultAccountId, connectionMethod, feeLevel, appUrl, appName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetConnectionsFilterParameter {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    vaultAccountId: ").append(toIndentedString(vaultAccountId)).append("\n");
    sb.append("    connectionMethod: ").append(toIndentedString(connectionMethod)).append("\n");
    sb.append("    feeLevel: ").append(toIndentedString(feeLevel)).append("\n");
    sb.append("    appUrl: ").append(toIndentedString(appUrl)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `userId` to the URL query string
    if (getUserId() != null) {
      try {
        joiner.add(String.format("%suserId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `vaultAccountId` to the URL query string
    if (getVaultAccountId() != null) {
      try {
        joiner.add(String.format("%svaultAccountId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVaultAccountId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `connectionMethod` to the URL query string
    if (getConnectionMethod() != null) {
      try {
        joiner.add(String.format("%sconnectionMethod%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getConnectionMethod()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `feeLevel` to the URL query string
    if (getFeeLevel() != null) {
      try {
        joiner.add(String.format("%sfeeLevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFeeLevel()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `appUrl` to the URL query string
    if (getAppUrl() != null) {
      try {
        joiner.add(String.format("%sappUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAppUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `appName` to the URL query string
    if (getAppName() != null) {
      try {
        joiner.add(String.format("%sappName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAppName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

