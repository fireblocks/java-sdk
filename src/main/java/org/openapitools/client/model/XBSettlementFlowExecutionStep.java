/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;
import com.sun.jersey.api.client.GenericType;
import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import org.openapitools.client.model.XBSettlementAsset;
import org.openapitools.client.model.XBSettlementFlowExecutionStepStatus;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * XBSettlementFlowExecutionStep
 */
@JsonPropertyOrder({
  XBSettlementFlowExecutionStep.JSON_PROPERTY_ID,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_ACCOUNT_ID,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_STATUS,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_INPUT_AMOUNT,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_OUTPUT_AMOUNT,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_FEE,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_STARTED_AT,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_COMPLETED_AT,
  XBSettlementFlowExecutionStep.JSON_PROPERTY_IS_SIGN_REQUIRED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class XBSettlementFlowExecutionStep {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ACCOUNT_ID = "accountId";
  private String accountId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private XBSettlementFlowExecutionStepStatus status;

  public static final String JSON_PROPERTY_INPUT_AMOUNT = "inputAmount";
  private XBSettlementAsset inputAmount;

  public static final String JSON_PROPERTY_OUTPUT_AMOUNT = "outputAmount";
  private XBSettlementAsset outputAmount;

  public static final String JSON_PROPERTY_FEE = "fee";
  private XBSettlementAsset fee;

  public static final String JSON_PROPERTY_STARTED_AT = "startedAt";
  private BigDecimal startedAt;

  public static final String JSON_PROPERTY_COMPLETED_AT = "completedAt";
  private BigDecimal completedAt;

  public static final String JSON_PROPERTY_IS_SIGN_REQUIRED = "isSignRequired";
  private Boolean isSignRequired;

  public XBSettlementFlowExecutionStep() {
  }

  public XBSettlementFlowExecutionStep id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * A unique id for the step execution
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public XBSettlementFlowExecutionStep accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public XBSettlementFlowExecutionStep status(XBSettlementFlowExecutionStepStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public XBSettlementFlowExecutionStepStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(XBSettlementFlowExecutionStepStatus status) {
    this.status = status;
  }


  public XBSettlementFlowExecutionStep inputAmount(XBSettlementAsset inputAmount) {
    
    this.inputAmount = inputAmount;
    return this;
  }

   /**
   * Get inputAmount
   * @return inputAmount
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public XBSettlementAsset getInputAmount() {
    return inputAmount;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputAmount(XBSettlementAsset inputAmount) {
    this.inputAmount = inputAmount;
  }


  public XBSettlementFlowExecutionStep outputAmount(XBSettlementAsset outputAmount) {
    
    this.outputAmount = outputAmount;
    return this;
  }

   /**
   * Get outputAmount
   * @return outputAmount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public XBSettlementAsset getOutputAmount() {
    return outputAmount;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputAmount(XBSettlementAsset outputAmount) {
    this.outputAmount = outputAmount;
  }


  public XBSettlementFlowExecutionStep fee(XBSettlementAsset fee) {
    
    this.fee = fee;
    return this;
  }

   /**
   * Get fee
   * @return fee
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public XBSettlementAsset getFee() {
    return fee;
  }


  @JsonProperty(JSON_PROPERTY_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFee(XBSettlementAsset fee) {
    this.fee = fee;
  }


  public XBSettlementFlowExecutionStep startedAt(BigDecimal startedAt) {
    
    this.startedAt = startedAt;
    return this;
  }

   /**
   * The step execution start time in epoch format.
   * @return startedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getStartedAt() {
    return startedAt;
  }


  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartedAt(BigDecimal startedAt) {
    this.startedAt = startedAt;
  }


  public XBSettlementFlowExecutionStep completedAt(BigDecimal completedAt) {
    
    this.completedAt = completedAt;
    return this;
  }

   /**
   * The step execution end time in epoch format.
   * @return completedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getCompletedAt() {
    return completedAt;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompletedAt(BigDecimal completedAt) {
    this.completedAt = completedAt;
  }


  public XBSettlementFlowExecutionStep isSignRequired(Boolean isSignRequired) {
    
    this.isSignRequired = isSignRequired;
    return this;
  }

   /**
   * Whether or not signing is required for executing the step.
   * @return isSignRequired
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SIGN_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSignRequired() {
    return isSignRequired;
  }


  @JsonProperty(JSON_PROPERTY_IS_SIGN_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSignRequired(Boolean isSignRequired) {
    this.isSignRequired = isSignRequired;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XBSettlementFlowExecutionStep xbSettlementFlowExecutionStep = (XBSettlementFlowExecutionStep) o;
    return Objects.equals(this.id, xbSettlementFlowExecutionStep.id) &&
        Objects.equals(this.accountId, xbSettlementFlowExecutionStep.accountId) &&
        Objects.equals(this.status, xbSettlementFlowExecutionStep.status) &&
        Objects.equals(this.inputAmount, xbSettlementFlowExecutionStep.inputAmount) &&
        Objects.equals(this.outputAmount, xbSettlementFlowExecutionStep.outputAmount) &&
        Objects.equals(this.fee, xbSettlementFlowExecutionStep.fee) &&
        Objects.equals(this.startedAt, xbSettlementFlowExecutionStep.startedAt) &&
        Objects.equals(this.completedAt, xbSettlementFlowExecutionStep.completedAt) &&
        Objects.equals(this.isSignRequired, xbSettlementFlowExecutionStep.isSignRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, status, inputAmount, outputAmount, fee, startedAt, completedAt, isSignRequired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XBSettlementFlowExecutionStep {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    inputAmount: ").append(toIndentedString(inputAmount)).append("\n");
    sb.append("    outputAmount: ").append(toIndentedString(outputAmount)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    completedAt: ").append(toIndentedString(completedAt)).append("\n");
    sb.append("    isSignRequired: ").append(toIndentedString(isSignRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `accountId` to the URL query string
    if (getAccountId() != null) {
      try {
        joiner.add(String.format("%saccountId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAccountId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      try {
        joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStatus()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `inputAmount` to the URL query string
    if (getInputAmount() != null) {
      joiner.add(getInputAmount().toUrlQueryString(prefix + "inputAmount" + suffix));
    }

    // add `outputAmount` to the URL query string
    if (getOutputAmount() != null) {
      joiner.add(getOutputAmount().toUrlQueryString(prefix + "outputAmount" + suffix));
    }

    // add `fee` to the URL query string
    if (getFee() != null) {
      joiner.add(getFee().toUrlQueryString(prefix + "fee" + suffix));
    }

    // add `startedAt` to the URL query string
    if (getStartedAt() != null) {
      try {
        joiner.add(String.format("%sstartedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStartedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `completedAt` to the URL query string
    if (getCompletedAt() != null) {
      try {
        joiner.add(String.format("%scompletedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompletedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `isSignRequired` to the URL query string
    if (getIsSignRequired() != null) {
      try {
        joiner.add(String.format("%sisSignRequired%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsSignRequired()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

