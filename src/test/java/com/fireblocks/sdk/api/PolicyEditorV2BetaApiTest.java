/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.api;


import com.fireblocks.sdk.ApiException;
import com.fireblocks.sdk.ApiResponse;
import com.fireblocks.sdk.model.DraftReviewAndValidationResponse;
import com.fireblocks.sdk.model.PolicyAndValidationResponse;
import com.fireblocks.sdk.model.PolicyType;
import com.fireblocks.sdk.model.PublishDraftRequest;
import com.fireblocks.sdk.model.PublishResult;
import com.fireblocks.sdk.model.UpdateDraftRequest;
import java.util.concurrent.CompletableFuture;
import org.junit.Ignore;
import org.junit.Test;

/** API tests for PolicyEditorV2BetaApi */
@Ignore
public class PolicyEditorV2BetaApiTest {

    private final PolicyEditorV2BetaApi api = new PolicyEditorV2BetaApi();

    /**
     * Get the active policy and its validation by policy type
     *
     * <p>Returns the active policy and its validation for a specific policy type. &lt;/br&gt;
     * **Note:** These endpoints are currently in beta and might be subject to changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActivePolicyTest() throws ApiException {
        PolicyType policyType = null;
        CompletableFuture<ApiResponse<PolicyAndValidationResponse>> response =
                api.getActivePolicy(policyType);
    }

    /**
     * Get the active draft by policy type
     *
     * <p>Returns the active draft and its validation for a specific policy type. &lt;/br&gt;
     * **Note:** These endpoints are currently in beta and might be subject to changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDraftTest() throws ApiException {
        PolicyType policyType = null;
        CompletableFuture<ApiResponse<DraftReviewAndValidationResponse>> response =
                api.getDraft(policyType);
    }

    /**
     * Send publish request for a certain draft id
     *
     * <p>Send publish request of certain draft id and returns the response. &lt;/br&gt; **Note:**
     * These endpoints are currently in beta and might be subject to changes. If you want to
     * participate and learn more about the Fireblocks Policy Editor, please contact your Fireblocks
     * Customer Success Manager or send an email to CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishDraftTest() throws ApiException {
        PublishDraftRequest publishDraftRequest = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<PublishResult>> response =
                api.publishDraft(publishDraftRequest, idempotencyKey);
    }

    /**
     * Update the draft with a new set of rules by policy types
     *
     * <p>Update the draft and return its validation for specific policy types. &lt;/br&gt;
     * **Note:** These endpoints are currently in beta and might be subject to changes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDraftTest() throws ApiException {
        UpdateDraftRequest updateDraftRequest = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<DraftReviewAndValidationResponse>> response =
                api.updateDraft(updateDraftRequest, idempotencyKey);
    }
}
