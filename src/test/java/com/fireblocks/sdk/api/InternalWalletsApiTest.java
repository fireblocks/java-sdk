/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.api;


import com.fireblocks.sdk.ApiException;
import com.fireblocks.sdk.ApiResponse;
import com.fireblocks.sdk.model.CreateInternalWalletAssetRequest;
import com.fireblocks.sdk.model.CreateWalletRequest;
import com.fireblocks.sdk.model.PaginatedAssetsResponse;
import com.fireblocks.sdk.model.SetCustomerRefIdRequest;
import com.fireblocks.sdk.model.UnmanagedWallet;
import com.fireblocks.sdk.model.WalletAsset;
import java.math.BigDecimal;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.junit.Ignore;
import org.junit.Test;

/** API tests for InternalWalletsApi */
@Ignore
public class InternalWalletsApiTest {

    private final InternalWalletsApi api = new InternalWalletsApi();

    /**
     * Create an internal wallet
     *
     * <p>Creates a new internal wallet with the requested name. Learn more about Whitelisted
     * Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInternalWalletTest() throws ApiException {
        CreateWalletRequest createWalletRequest = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<UnmanagedWallet>> response =
                api.createInternalWallet(createWalletRequest, idempotencyKey);
    }

    /**
     * Add an asset to an internal wallet
     *
     * <p>Adds an asset to an existing internal wallet. Internal Wallets are whitelisted wallets
     * that belong to you outside of Fireblocks. - You can see the balance of the Internal Wallet
     * via Fireblocks - You cannot initiate transactions from Internal Wallets through Fireblocks
     * Learn more about Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInternalWalletAssetTest() throws ApiException {
        String walletId = null;
        String assetId = null;
        CreateInternalWalletAssetRequest createInternalWalletAssetRequest = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<WalletAsset>> response =
                api.createInternalWalletAsset(
                        walletId, assetId, createInternalWalletAssetRequest, idempotencyKey);
    }

    /**
     * Delete an internal wallet
     *
     * <p>Deletes an internal wallet by ID. Internal Wallets are whitelisted wallets that belong to
     * you outside of Fireblocks. - You can see the balance of the Internal Wallet via Fireblocks -
     * You cannot initiate transactions from Internal Wallets through Fireblocks Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInternalWalletTest() throws ApiException {
        String walletId = null;

        CompletableFuture<ApiResponse<Void>> response = api.deleteInternalWallet(walletId);
    }

    /**
     * Delete a whitelisted address
     *
     * <p>Deletes a whitelisted address (for an asset) from an internal wallet. Internal Wallets are
     * whitelisted wallets that belong to you outside of Fireblocks. - You can see the balance of
     * the Internal Wallet via Fireblocks - You cannot initiate transactions from Internal Wallets
     * through Fireblocks Learn more about Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteInternalWalletAssetTest() throws ApiException {
        String walletId = null;
        String assetId = null;

        CompletableFuture<ApiResponse<Void>> response =
                api.deleteInternalWalletAsset(walletId, assetId);
    }

    /**
     * Get an asset from an internal wallet
     *
     * <p>Returns information for an asset in an internal wallet. This endpoint will be deprecated
     * after 6 months. &lt;/br&gt;As part of the depreciation process this endpoint will no longer
     * return balances, only addresses. &lt;/br&gt;Until it is deprecated, this endpoint will behave
     * the same way. Internal Wallets are whitelisted wallets that belong to you outside of
     * Fireblocks. - You can see the balance of the Internal Wallet via Fireblocks - You cannot
     * initiate transactions from Internal Wallets through Fireblocks Endpoint Permission: Admin,
     * Non-Signing Admin, Signer, Approver, Editor, Viewer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalWalletTest() throws ApiException {
        String walletId = null;
        CompletableFuture<ApiResponse<UnmanagedWallet>> response = api.getInternalWallet(walletId);
    }

    /**
     * Get an asset from an internal wallet
     *
     * <p>Returns information for an asset in an internal wallet. Internal Wallets are whitelisted
     * wallets that belong to you outside of Fireblocks. - You can see the balance of the Internal
     * Wallet via Fireblocks - You cannot initiate transactions from Internal Wallets through
     * Fireblocks Learn more about Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalWalletAssetTest() throws ApiException {
        String walletId = null;
        String assetId = null;
        CompletableFuture<ApiResponse<WalletAsset>> response =
                api.getInternalWalletAsset(walletId, assetId);
    }

    /**
     * List assets in an internal wallet (Paginated)
     *
     * <p>Returns a paginated response of assets in an internal wallet. This is a new paginated
     * endpoint that gets all the assets from the wallet container with balances. &lt;/br&gt;This
     * endpoint returns a limited amount of results with a quick response time. Internal Wallets are
     * whitelisted wallets that belong to you outside of Fireblocks. - You can see the balance of
     * the Internal Wallet via Fireblocks - You cannot initiate transactions from Internal Wallets
     * through Fireblocks Learn more about Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalWalletAssetsPaginatedTest() throws ApiException {
        String walletId = null;
        BigDecimal pageSize = null;
        String pageCursor = null;
        CompletableFuture<ApiResponse<PaginatedAssetsResponse>> response =
                api.getInternalWalletAssetsPaginated(walletId, pageSize, pageCursor);
    }

    /**
     * List internal wallets
     *
     * <p>Gets a list of internal wallets. **Note**: - BTC-based assets belonging to whitelisted
     * addresses cannot be retrieved between 00:00 UTC and 00:01 UTC daily due to third-party
     * provider, Blockchain, being unavailable for this 60 second period. &lt;/br&gt;Please wait
     * until the next minute to retrieve BTC-based assets. - The list of assets returned will NOT
     * include the balances anymore. Internal Wallets are whitelisted wallets that belong to you
     * outside of Fireblocks. - You can see the balance of the Internal Wallet via Fireblocks - You
     * cannot initiate transactions from Internal Wallets through Fireblocks Learn more about
     * Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor, Viewer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInternalWalletsTest() throws ApiException {
        CompletableFuture<ApiResponse<List<UnmanagedWallet>>> response = api.getInternalWallets();
    }

    /**
     * Set an AML/KYT customer reference ID for an internal wallet
     *
     * <p>Sets an AML/KYT customer reference ID for the specific internal wallet. Internal Wallets
     * are whitelisted wallets that belong to you outside of Fireblocks. - You can see the balance
     * of the Internal Wallet via Fireblocks - You cannot initiate transactions from Internal
     * Wallets through Fireblocks Learn more about Whitelisted Internal Addresses
     * [here](https://developers.fireblocks.com/docs/whitelist-addresses#internal-wallets) Endpoint
     * Permission: Admin, Non-Signing Admin, Signer, Approver, Editor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setCustomerRefIdForInternalWalletTest() throws ApiException {
        SetCustomerRefIdRequest setCustomerRefIdRequest = null;
        String walletId = null;
        String idempotencyKey = null;

        CompletableFuture<ApiResponse<Void>> response =
                api.setCustomerRefIdForInternalWallet(
                        setCustomerRefIdRequest, walletId, idempotencyKey);
    }
}
