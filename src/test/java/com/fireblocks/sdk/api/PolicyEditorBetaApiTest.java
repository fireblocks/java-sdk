/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.api;


import com.fireblocks.sdk.ApiException;
import com.fireblocks.sdk.ApiResponse;
import com.fireblocks.sdk.model.LegacyDraftReviewAndValidationResponse;
import com.fireblocks.sdk.model.LegacyPolicyAndValidationResponse;
import com.fireblocks.sdk.model.LegacyPolicyRules;
import com.fireblocks.sdk.model.LegacyPublishDraftRequest;
import com.fireblocks.sdk.model.LegacyPublishResult;
import java.util.concurrent.CompletableFuture;
import org.junit.Ignore;
import org.junit.Test;

/** API tests for PolicyEditorBetaApi */
@Ignore
public class PolicyEditorBetaApiTest {

    private final PolicyEditorBetaApi api = new PolicyEditorBetaApi();

    /**
     * Get the active policy and its validation
     *
     * <p>Legacy Endpoint – Returns the active policy and its validation. &lt;/br&gt; **Note:** -
     * This endpoint will remain available for the foreseeable future and is not
     * deprecated.&lt;/br&gt; - The &#x60;getActivePolicy&#x60; endpoint under policy/paths provides
     * policy type-specific operations and improved functionality.&lt;/br&gt; - These endpoints are
     * currently in beta and might be subject to changes.&lt;/br&gt; If you want to participate and
     * learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager
     * or send an email to CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActivePolicyLegacyTest() throws ApiException {
        CompletableFuture<ApiResponse<LegacyPolicyAndValidationResponse>> response =
                api.getActivePolicyLegacy();
    }

    /**
     * Get the active draft
     *
     * <p>Legacy Endpoint – Returns the active draft and its validation. &lt;/br&gt; **Note:** -
     * This endpoint will remain available for the foreseeable future and is not
     * deprecated.&lt;/br&gt; - The &#x60;getDraft&#x60; endpoint under policy/paths provides policy
     * type-specific operations and improved functionality.&lt;/br&gt; - These endpoints are
     * currently in beta and might be subject to changes.&lt;/br&gt; If you want to participate and
     * learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager
     * or send an email to CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDraftLegacyTest() throws ApiException {
        CompletableFuture<ApiResponse<LegacyDraftReviewAndValidationResponse>> response =
                api.getDraftLegacy();
    }

    /**
     * Send publish request for a certain draft id
     *
     * <p>Legacy Endpoint – Send publish request of certain draft id and returns the response.
     * &lt;/br&gt; **Note:** - This endpoint will remain available for the foreseeable future and is
     * not deprecated.&lt;/br&gt; - The &#x60;publishDraft&#x60; endpoint under policy/paths
     * provides improved functionality and better performance.&lt;/br&gt; - These endpoints are
     * currently in beta and might be subject to changes.&lt;/br&gt; If you want to participate and
     * learn more about the Fireblocks TAP, please contact your Fireblocks Customer Success Manager
     * or send an email to CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishDraftLegacyTest() throws ApiException {
        LegacyPublishDraftRequest legacyPublishDraftRequest = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<LegacyPublishResult>> response =
                api.publishDraftLegacy(legacyPublishDraftRequest, idempotencyKey);
    }

    /**
     * Send publish request for a set of policy rules
     *
     * <p>Send publish request of set of policy rules and returns the response. &lt;/br&gt;
     * **Note:** These endpoints are currently in beta and might be subject to changes. If you want
     * to participate and learn more about the Fireblocks TAP, please contact your Fireblocks
     * Customer Success Manager or send an email to CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishPolicyRulesTest() throws ApiException {
        LegacyPolicyRules legacyPolicyRules = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<LegacyPublishResult>> response =
                api.publishPolicyRules(legacyPolicyRules, idempotencyKey);
    }

    /**
     * Update the draft with a new set of rules
     *
     * <p>Legacy Endpoint – Update the draft and return its validation. &lt;/br&gt; **Note:** - This
     * endpoint will remain available for the foreseeable future and is not deprecated.&lt;/br&gt; -
     * The &#x60;updateDraft&#x60; endpoint under policy/paths provides policy type-specific
     * operations and improved functionality.&lt;/br&gt; - These endpoints are currently in beta and
     * might be subject to changes.&lt;/br&gt; If you want to participate and learn more about the
     * Fireblocks TAP, please contact your Fireblocks Customer Success Manager or send an email to
     * CSM@fireblocks.com.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDraftLegacyTest() throws ApiException {
        LegacyPolicyRules legacyPolicyRules = null;
        String idempotencyKey = null;
        CompletableFuture<ApiResponse<LegacyDraftReviewAndValidationResponse>> response =
                api.updateDraftLegacy(legacyPolicyRules, idempotencyKey);
    }
}
