/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.api;


import com.fireblocks.sdk.ApiException;
import com.fireblocks.sdk.ApiResponse;
import com.fireblocks.sdk.model.FiatAccount;
import com.fireblocks.sdk.model.Funds;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.junit.Ignore;
import org.junit.Test;

/** API tests for FiatAccountsApi */
@Ignore
public class FiatAccountsApiTest {

    private final FiatAccountsApi api = new FiatAccountsApi();

    /**
     * Deposit funds from DDA
     *
     * <p>Deposits funds from the linked DDA.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void depositFundsFromLinkedDDATest() throws ApiException {
        String accountId = null;
        Funds funds = null;
        String idempotencyKey = null;

        CompletableFuture<ApiResponse<Void>> response =
                api.depositFundsFromLinkedDDA(accountId, funds, idempotencyKey);
    }

    /**
     * Find a specific fiat account
     *
     * <p>Returns a fiat account by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFiatAccountTest() throws ApiException {
        String accountId = null;
        CompletableFuture<ApiResponse<FiatAccount>> response = api.getFiatAccount(accountId);
    }

    /**
     * List fiat accounts
     *
     * <p>Returns all fiat accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFiatAccountsTest() throws ApiException {
        CompletableFuture<ApiResponse<List<FiatAccount>>> response = api.getFiatAccounts();
    }

    /**
     * Redeem funds to DDA
     *
     * <p>Redeems funds to the linked DDA.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void redeemFundsToLinkedDDATest() throws ApiException {
        String accountId = null;
        Funds funds = null;
        String idempotencyKey = null;

        CompletableFuture<ApiResponse<Void>> response =
                api.redeemFundsToLinkedDDA(accountId, funds, idempotencyKey);
    }
}
