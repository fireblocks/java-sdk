/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.api;


import com.fireblocks.sdk.ApiException;
import com.fireblocks.sdk.ApiResponse;
import com.fireblocks.sdk.model.PublicKeyInformation;
import java.math.BigDecimal;
import java.util.concurrent.CompletableFuture;
import org.junit.Ignore;
import org.junit.Test;

/** API tests for EmbeddedWalletsApi */
@Ignore
public class EmbeddedWalletsApiTest {

    private final EmbeddedWalletsApi api = new EmbeddedWalletsApi();

    /**
     * Get the public key of an asset
     *
     * <p>Gets the public key of an asset associated with a specific account within a Non-Custodial
     * Wallet
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPublicKeyInfoForAddressNcwTest() throws ApiException {
        String walletId = null;
        String accountId = null;
        String assetId = null;
        BigDecimal change = null;
        BigDecimal addressIndex = null;
        Boolean compressed = null;
        CompletableFuture<ApiResponse<PublicKeyInformation>> response =
                api.getPublicKeyInfoForAddressNcw(
                        walletId, accountId, assetId, change, addressIndex, compressed);
    }

    /**
     * Get the public key for a derivation path
     *
     * <p>Gets the public key information based on derivation path and signing algorithm within a
     * Non-Custodial Wallet
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPublicKeyInfoNcwTest() throws ApiException {
        String walletId = null;
        String derivationPath = null;
        String algorithm = null;
        Boolean compressed = null;
        CompletableFuture<ApiResponse<PublicKeyInformation>> response =
                api.getPublicKeyInfoNcw(walletId, derivationPath, algorithm, compressed);
    }
}
