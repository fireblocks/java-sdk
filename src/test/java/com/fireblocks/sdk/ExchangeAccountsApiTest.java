/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.fireblocks.sdk;

import com.fireblocks.sdk.*;
import com.fireblocks.sdk.auth.*;
import com.fireblocks.sdk.Configuration;
import com.fireblocks.sdk.model.ConvertAssetsRequest;
import com.fireblocks.sdk.model.CreateInternalTransferRequest;
import com.fireblocks.sdk.model.Error;
import com.fireblocks.sdk.model.ExchangeAccount;
import com.fireblocks.sdk.model.ExchangeAsset;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExchangeAccountsApi
 */
public class ExchangeAccountsApiTest {

    private ExchangeAccountsApi api;

    /**
     * Convert exchange account funds from the source asset to the destination asset. Coinbase (USD to USDC, USDC to USD) and Bitso (MXN to USD) are supported conversions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void convertAssetsTest() throws ApiException {
        Configuration configuration = new Configuration();
        configuration.setApiKey("test");
        configuration.setSecretKey("test");
        this.api = new ExchangeAccountsApi(configuration);
        //String exchangeAccountId = null;
        //ConvertAssetsRequest convertAssetsRequest = null;
        //api.convertAssets(exchangeAccountId, convertAssetsRequest);
        // TODO: test validations
    }

    /**
     * Find an asset for an exchange account
     *
     * Returns an asset for an exchange account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExchangeAccountAssetTest() throws ApiException {
        Configuration configuration = new Configuration();
        configuration.setApiKey("test");
        configuration.setSecretKey("test");
        this.api = new ExchangeAccountsApi(configuration);
        //String exchangeAccountId = null;
        //String assetId = null;
        //ExchangeAsset response = api.getExchangeAccountAsset(exchangeAccountId, assetId);
        // TODO: test validations
    }

    /**
     * Find a specific exchange account
     *
     * Returns an exchange account by ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExchangeAccountByIdTest() throws ApiException {
        Configuration configuration = new Configuration();
        configuration.setApiKey("test");
        configuration.setSecretKey("test");
        this.api = new ExchangeAccountsApi(configuration);
        //String exchangeAccountId = null;
        //ExchangeAccount response = api.getExchangeAccountById(exchangeAccountId);
        // TODO: test validations
    }

    /**
     * List exchange accounts
     *
     * Returns all exchange accounts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExchangeAccountsTest() throws ApiException {
        Configuration configuration = new Configuration();
        configuration.setApiKey("test");
        configuration.setSecretKey("test");
        this.api = new ExchangeAccountsApi(configuration);
        //List<ExchangeAccount> response = api.getExchangeAccounts();
        // TODO: test validations
    }

    /**
     * Internal tranfer for exchange accounts
     *
     * Transfers funds between trading accounts under the same exchange account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void internalTransferTest() throws ApiException {
        Configuration configuration = new Configuration();
        configuration.setApiKey("test");
        configuration.setSecretKey("test");
        this.api = new ExchangeAccountsApi(configuration);
        //String exchangeAccountId = null;
        //CreateInternalTransferRequest createInternalTransferRequest = null;
        //api.internalTransfer(exchangeAccountId, createInternalTransferRequest);
        // TODO: test validations
    }

}
