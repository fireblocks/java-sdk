/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.fireblocks.sdk.model;


import org.junit.jupiter.api.Test;

/** Model tests for LegacyPolicyRule */
class LegacyPolicyRuleTest {
    private final LegacyPolicyRule model = new LegacyPolicyRule();

    /** Model tests for LegacyPolicyRule */
    @Test
    void testLegacyPolicyRule() {
        // TODO: test LegacyPolicyRule
    }

    /** Test the property 'operator' */
    @Test
    void operatorTest() {
        // TODO: test operator
    }

    /** Test the property 'operators' */
    @Test
    void operatorsTest() {
        // TODO: test operators
    }

    /** Test the property 'transactionType' */
    @Test
    void transactionTypeTest() {
        // TODO: test transactionType
    }

    /** Test the property 'designatedSigner' */
    @Test
    void designatedSignerTest() {
        // TODO: test designatedSigner
    }

    /** Test the property 'designatedSigners' */
    @Test
    void designatedSignersTest() {
        // TODO: test designatedSigners
    }

    /** Test the property 'type' */
    @Test
    void typeTest() {
        // TODO: test type
    }

    /** Test the property 'action' */
    @Test
    void actionTest() {
        // TODO: test action
    }

    /** Test the property 'asset' */
    @Test
    void assetTest() {
        // TODO: test asset
    }

    /** Test the property 'srcType' */
    @Test
    void srcTypeTest() {
        // TODO: test srcType
    }

    /** Test the property 'srcSubType' */
    @Test
    void srcSubTypeTest() {
        // TODO: test srcSubType
    }

    /** Test the property 'srcId' */
    @Test
    void srcIdTest() {
        // TODO: test srcId
    }

    /** Test the property 'src' */
    @Test
    void srcTest() {
        // TODO: test src
    }

    /** Test the property 'dstType' */
    @Test
    void dstTypeTest() {
        // TODO: test dstType
    }

    /** Test the property 'dstSubType' */
    @Test
    void dstSubTypeTest() {
        // TODO: test dstSubType
    }

    /** Test the property 'dstId' */
    @Test
    void dstIdTest() {
        // TODO: test dstId
    }

    /** Test the property 'dst' */
    @Test
    void dstTest() {
        // TODO: test dst
    }

    /** Test the property 'dstAddressType' */
    @Test
    void dstAddressTypeTest() {
        // TODO: test dstAddressType
    }

    /** Test the property 'amountCurrency' */
    @Test
    void amountCurrencyTest() {
        // TODO: test amountCurrency
    }

    /** Test the property 'amountScope' */
    @Test
    void amountScopeTest() {
        // TODO: test amountScope
    }

    /** Test the property 'amount' */
    @Test
    void amountTest() {
        // TODO: test amount
    }

    /** Test the property 'periodSec' */
    @Test
    void periodSecTest() {
        // TODO: test periodSec
    }

    /** Test the property 'authorizers' */
    @Test
    void authorizersTest() {
        // TODO: test authorizers
    }

    /** Test the property 'authorizersCount' */
    @Test
    void authorizersCountTest() {
        // TODO: test authorizersCount
    }

    /** Test the property 'authorizationGroups' */
    @Test
    void authorizationGroupsTest() {
        // TODO: test authorizationGroups
    }

    /** Test the property 'amountAggregation' */
    @Test
    void amountAggregationTest() {
        // TODO: test amountAggregation
    }

    /** Test the property 'rawMessageSigning' */
    @Test
    void rawMessageSigningTest() {
        // TODO: test rawMessageSigning
    }

    /** Test the property 'applyForApprove' */
    @Test
    void applyForApproveTest() {
        // TODO: test applyForApprove
    }

    /** Test the property 'applyForTypedMessage' */
    @Test
    void applyForTypedMessageTest() {
        // TODO: test applyForTypedMessage
    }

    /** Test the property 'externalDescriptor' */
    @Test
    void externalDescriptorTest() {
        // TODO: test externalDescriptor
    }
}
