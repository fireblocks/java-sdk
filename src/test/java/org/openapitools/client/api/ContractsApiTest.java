/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddAssetToContractRequest;
import org.openapitools.client.model.CreateContractRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ExternalWalletAsset;
import org.openapitools.client.model.UnmanagedWallet;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractsApi
 */
@Ignore
public class ContractsApiTest {

    private final ContractsApi api = new ContractsApi();

    /**
     * Add an asset to a contract
     *
     * Adds an asset to an existing contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addAssetToContractTest() throws ApiException {
        String contractId = null;
        String assetId = null;
        AddAssetToContractRequest addAssetToContractRequest = null;
        ExternalWalletAsset response = api.addAssetToContract(contractId, assetId, addAssetToContractRequest);

        // TODO: test validations
    }
    /**
     * Create a contract
     *
     * Creates a new contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createContractTest() throws ApiException {
        CreateContractRequest createContractRequest = null;
        UnmanagedWallet response = api.createContract(createContractRequest);

        // TODO: test validations
    }
    /**
     * Delete a contract
     *
     * Deletes a contract by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteContractTest() throws ApiException {
        String contractId = null;
        api.deleteContract(contractId);

        // TODO: test validations
    }
    /**
     * Find a contract asset
     *
     * Returns a contract asset by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssetInContractTest() throws ApiException {
        String contractId = null;
        String assetId = null;
        ExternalWalletAsset response = api.getAssetInContract(contractId, assetId);

        // TODO: test validations
    }
    /**
     * Find a specific contract
     *
     * Returns a contract by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractByIdTest() throws ApiException {
        String contractId = null;
        UnmanagedWallet response = api.getContractById(contractId);

        // TODO: test validations
    }
    /**
     * List contracts
     *
     * Gets a list of contracts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractsTest() throws ApiException {
        List<UnmanagedWallet> response = api.getContracts();

        // TODO: test validations
    }
    /**
     * Delete a contract asset
     *
     * Deletes a contract asset by ID.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeAssetFromContractTest() throws ApiException {
        String contractId = null;
        String assetId = null;
        api.removeAssetFromContract(contractId, assetId);

        // TODO: test validations
    }
}
