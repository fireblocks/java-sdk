/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CheckThirdPartyRoutingForNetworkConnection200Response;
import org.openapitools.client.model.CreateNetworkIdRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.GetNetworkIds200ResponseInner;
import org.openapitools.client.model.NetworkConnection;
import org.openapitools.client.model.NetworkConnectionResponse;
import org.openapitools.client.model.NetworkIdResponse;
import org.openapitools.client.model.SetDiscoverabilityForNetworkIdRequest;
import org.openapitools.client.model.SetNetworkIdNameRequest;
import org.openapitools.client.model.SetRoutingPolicyForNetworkConnection200Response;
import org.openapitools.client.model.SetRoutingPolicyForNetworkConnectionRequest;
import org.openapitools.client.model.SetRoutingPolicyForNetworkIdRequest;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworkConnectionsApi
 */
@Ignore
public class NetworkConnectionsApiTest {

    private final NetworkConnectionsApi api = new NetworkConnectionsApi();

    /**
     * Retrieve third-party network routing validation by asset type.
     *
     * The Fireblocks Network allows for flexibility around incoming deposits. A receiver can receive network deposits to locations other than Fireblocks. This endpoint validates whether future transactions are routed to the displayed recipient or to a 3rd party.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkThirdPartyRoutingForNetworkConnectionTest() throws ApiException {
        String connectionId = null;
        String assetType = null;
        CheckThirdPartyRoutingForNetworkConnection200Response response = api.checkThirdPartyRoutingForNetworkConnection(connectionId, assetType);

        // TODO: test validations
    }
    /**
     * Creates a new network connection
     *
     * Initiates a new network connection.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNetworkConnectionTest() throws ApiException {
        NetworkConnection networkConnection = null;
        NetworkConnectionResponse response = api.createNetworkConnection(networkConnection);

        // TODO: test validations
    }
    /**
     * Creates a new Network ID
     *
     * Creates a new Network ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNetworkIdTest() throws ApiException {
        CreateNetworkIdRequest createNetworkIdRequest = null;
        NetworkIdResponse response = api.createNetworkId(createNetworkIdRequest);

        // TODO: test validations
    }
    /**
     * Deletes a network connection by ID
     *
     * Deletes an existing network connection specified by its connection ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNetworkConnectionTest() throws ApiException {
        String connectionId = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.deleteNetworkConnection(connectionId);

        // TODO: test validations
    }
    /**
     * Deletes specific network ID.
     *
     * Deletes a network by its ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNetworkIdTest() throws ApiException {
        String networkId = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.deleteNetworkId(networkId);

        // TODO: test validations
    }
    /**
     * Get a network connection
     *
     * Gets a network connection by ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNetworkConnectionByIdTest() throws ApiException {
        String connectionId = null;
        NetworkConnectionResponse response = api.getNetworkConnectionById(connectionId);

        // TODO: test validations
    }
    /**
     * List network connections
     *
     * Returns all network connections.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNetworkConnectionsTest() throws ApiException {
        List<NetworkConnectionResponse> response = api.getNetworkConnections();

        // TODO: test validations
    }
    /**
     * Returns specific network ID.
     *
     * Retrieves a network by its ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNetworkIdByIdTest() throws ApiException {
        String networkId = null;
        NetworkIdResponse response = api.getNetworkIdById(networkId);

        // TODO: test validations
    }
    /**
     * Returns all network IDs, both local IDs and discoverable remote IDs
     *
     * Retrieves a list of all local and discoverable remote network IDs.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNetworkIdsTest() throws ApiException {
        List<GetNetworkIds200ResponseInner> response = api.getNetworkIds();

        // TODO: test validations
    }
    /**
     * Update network ID&#39;s discoverability.
     *
     * Update whether or not the network ID is discoverable by others.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setDiscoverabilityForNetworkIdTest() throws ApiException {
        String networkId = null;
        SetDiscoverabilityForNetworkIdRequest setDiscoverabilityForNetworkIdRequest = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.setDiscoverabilityForNetworkId(networkId, setDiscoverabilityForNetworkIdRequest);

        // TODO: test validations
    }
    /**
     * Update network ID&#39;s name.
     *
     * Updates name of a specified network ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setNetworkIdNameTest() throws ApiException {
        String networkId = null;
        SetNetworkIdNameRequest setNetworkIdNameRequest = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.setNetworkIdName(networkId, setNetworkIdNameRequest);

        // TODO: test validations
    }
    /**
     * Update network connection routing policy.
     *
     * Updates an existing network connection&#39;s routing policy.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setRoutingPolicyForNetworkConnectionTest() throws ApiException {
        String connectionId = null;
        SetRoutingPolicyForNetworkConnectionRequest setRoutingPolicyForNetworkConnectionRequest = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.setRoutingPolicyForNetworkConnection(connectionId, setRoutingPolicyForNetworkConnectionRequest);

        // TODO: test validations
    }
    /**
     * Update network id routing policy.
     *
     * Updates the routing policy of a specified network ID.  **Note:** This API call is subject to Flexible Routing Schemes.  Your routing policy defines how your transactions are routed. You can choose 1 of the 3 different schemes mentioned below for each asset type:   - **None**; Defines the profile routing to no destination for that asset type. Incoming transactions to asset types routed to &#x60;None&#x60; will fail.   - **Custom**; Route to an account that you choose. If you remove the account, incoming transactions will fail until you choose another one.   - **Default**; Use the routing specified by the network profile the connection is connected to. This scheme is also referred to as \&quot;Profile Routing\&quot;  Default Workspace Presets:   - Network Profile Crypto → **Custom**   - Network Profile FIAT → **None**   - Network Connection Crypto → **Default**   - Network Connection FIAT → **Default**      - **Note**: By default, Custom routing scheme uses (&#x60;dstId&#x60; &#x3D; &#x60;0&#x60;, &#x60;dstType&#x60; &#x3D; &#x60;VAULT&#x60;). 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setRoutingPolicyForNetworkIdTest() throws ApiException {
        String networkId = null;
        SetRoutingPolicyForNetworkIdRequest setRoutingPolicyForNetworkIdRequest = null;
        SetRoutingPolicyForNetworkConnection200Response response = api.setRoutingPolicyForNetworkId(networkId, setRoutingPolicyForNetworkIdRequest);

        // TODO: test validations
    }
}
