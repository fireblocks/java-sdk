/*
 * Fireblocks API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.2
 * Contact: support@fireblocks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.XBSettlementConfigCreationRequestBody;
import org.openapitools.client.model.XBSettlementConfigEditRequestBody;
import org.openapitools.client.model.XBSettlementConfigModel;
import org.openapitools.client.model.XBSettlementCreateFlowRequestBody;
import org.openapitools.client.model.XBSettlementFlowExecutionModel;
import org.openapitools.client.model.XBSettlementFlowExecutionRequestBody;
import org.openapitools.client.model.XBSettlementFlowPreviewModel;
import org.openapitools.client.model.XBSettlementGetAllConfigsResponse;
import org.openapitools.client.model.XBSettlementGetFlowResponse;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentsCrossBorderSettlementApi
 */
@Ignore
public class PaymentsCrossBorderSettlementApiTest {

    private final PaymentsCrossBorderSettlementApi api = new PaymentsCrossBorderSettlementApi();

    /**
     * Create a new cross-border settlement configuration
     *
     * &lt;u&gt;&lt;b&gt;Create a new cross-border settlement configuration. &lt;/u&gt;&lt;/b&gt;&lt;/br&gt;Configurations define the default assets, on-ramps, and off-ramps to use for the cross-border settlement. &lt;/br&gt;  A configuration must contain at least two steps - &#x60;ON_RAMP&#x60; and &#x60;VAULT_ACCOUNT&#x60;. &lt;/br&gt; All other steps (e.g., &#x60;OFF_RAMP&#x60;, &#x60;FIAT_DESTINATION&#x60;, etc.) are optional. &lt;/br&gt; Every step must include the &#x60;accountId&#x60; to be used, while &#x60;inputAssetId&#x60; and &#x60;outputAssetId&#x60; are optional.  If those are not provided, a default value will be used from the Corridor Settings.&lt;/br&gt; If the inputAssetId or the outputAssetId is provided for one of the objects, all assets in the objects must be consistent. For example, if the output asset of ON_RAMP is XLM_USDC_5F3T, then the input asset of the VAULT_ACCOUNT must also be XLM_USDC_5F3T..&lt;/br&gt; You can set a slippage amount for your configuration. Slippage is defined by basis points (bps). This value can be overloaded on execution. If you do not configure a slippage amount, the default slippage of 10000 bps (10%) is used. &lt;/br&gt; **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createXBSettlementConfigTest() throws ApiException {
        XBSettlementConfigCreationRequestBody xbSettlementConfigCreationRequestBody = null;
        XBSettlementConfigModel response = api.createXBSettlementConfig(xbSettlementConfigCreationRequestBody);

        // TODO: test validations
    }
    /**
     * Create a new cross-border settlement flow
     *
     * Create a cross-border flow (based on a cross-border configuration) with an amount to transfer.  The assetId is defined by the cross-border configuration. Creating a flow triggers a calculation of the flow estimations, including FX rates, times, and fees based on the amount provided. Creating a cross-border flow will not execute the flow.  **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createXBSettlementFlowTest() throws ApiException {
        XBSettlementCreateFlowRequestBody xbSettlementCreateFlowRequestBody = null;
        XBSettlementFlowPreviewModel response = api.createXBSettlementFlow(xbSettlementCreateFlowRequestBody);

        // TODO: test validations
    }
    /**
     * Delete a cross-border settlement configuration
     *
     * Delete a cross-border settlement configuration. This does not delete or remove previously executed flows that used this configuration. **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteXBSettlementConfigTest() throws ApiException {
        String configId = null;
        XBSettlementConfigModel response = api.deleteXBSettlementConfig(configId);

        // TODO: test validations
    }
    /**
     * Execute cross-border settlement flow
     *
     * Send a payment flow with &#39;flowId&#39; for execution. If a differet slippage configuraion is needed for this execution than configured in the flow configuration, the request body must define the desired slippage configuration for this execution.  **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeXBSettlementFlowActionTest() throws ApiException {
        String flowId = null;
        XBSettlementFlowExecutionRequestBody xbSettlementFlowExecutionRequestBody = null;
        XBSettlementFlowExecutionModel response = api.executeXBSettlementFlowAction(flowId, xbSettlementFlowExecutionRequestBody);

        // TODO: test validations
    }
    /**
     * Get a specific cross-border settlement configuration
     *
     * Get a specific cross-border settlement configuration.&lt;/br&gt; **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getXBSettlementConfigByIdTest() throws ApiException {
        String configId = null;
        XBSettlementConfigModel response = api.getXBSettlementConfigById(configId);

        // TODO: test validations
    }
    /**
     * Get all the cross-border settlement configurations
     *
     * Get all the cross-border settlement configurations. &lt;/br&gt; **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getXBSettlementConfigsTest() throws ApiException {
        XBSettlementGetAllConfigsResponse response = api.getXBSettlementConfigs();

        // TODO: test validations
    }
    /**
     * Get specific cross-border settlement flow details
     *
     * Gets details for a specific cross-border settlement flow **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getXBSettlementFlowByIdTest() throws ApiException {
        String flowId = null;
        XBSettlementGetFlowResponse response = api.getXBSettlementFlowById(flowId);

        // TODO: test validations
    }
    /**
     * Edit a cross-border settlement configuration
     *
     * Edit a cross-border settlement configuration. Editing a configuration does not affect previously executed flows that used the configuration. **Note:** The reference content in this section documents the Payments Engine endpoint. The Payments Engine endpoint includes APIs available only for customers with the Payments Engine enabled on their accounts. These endpoints are currently in beta and might be subject to changes. If you want to learn more about the Fireblocks Payments Engine, please contact your Fireblocks Customer Success Manager or send an email to CSM@fireblocks.com. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateXBSettlementConfigTest() throws ApiException {
        String configId = null;
        XBSettlementConfigEditRequestBody xbSettlementConfigEditRequestBody = null;
        XBSettlementConfigModel response = api.updateXBSettlementConfig(configId, xbSettlementConfigEditRequestBody);

        // TODO: test validations
    }
}
